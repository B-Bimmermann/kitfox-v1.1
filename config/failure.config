/* Assign pseudo component id range. This is optional. */
component_id: {
    start = 1;
    end = 9999;
};

/* Assign data queue size. Each data queue maintains only this number of entries.
   When the queue becomes full, the oldest entry is automatically dequeued. */
queue_size = 1;

/* Start pseudo component hierarchy (tree) */
component = {
    
    /* "floorplan" component */
    floorplan: {

        /* "failure" component */
        library: {
            model = "failure";
            ambient_temperature = 300.0; // 300K
            voltage = 1.0;
            clock_frequency = 2.0e9;

            failure_model: {
                hci: {
                    n = 3.0;
                    Ea = -0.1;
                };
                em: {
                    n = 2.0;
                    Ea = 0.9;
                };
                nbti: {
                    n = 5.0;
                    Ea = 0.4;
                };
                sm: {
                    T0 = 500.0;
                    n = 2.5;
                    Ea = 0.9;
                };
                tddb: {
                    a = 78.0;
                    b = -0.081;
                    c = 0.1;
                    x = -0.759;
                    y = 66.8;
                    z = 8.37e-4;
                    Ea = 0.7;
                };
            };

            target_temperature = 338.0; // 338K
            target_voltage = 1.0; // 1.0V
            target_frequency = 2.0e9; // 2GHz
            target_MTTF = 157.7664e6; // 5 years (in seconds)
        };
    }; /* End of "floorplan" */
}; /* End of pseudo component hierarchy */

