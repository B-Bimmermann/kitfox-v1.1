/* Assign pseudo component id range. This is optional. */
component_id: {
    start = 1;
    end = 9999;
};

/* Assign data queue size. Each data queue maintains only this number of entries.
   When the queue becomes full, the oldest entry is automatically dequeued. */
queue_size = 1;

/* Start pseudo component hierarchy (tree) */
component = {
    
    /* "memory" component */
    memory: {

        /* Define the common library variables in the "memory" shared with its-subcomponents. */
        library: {
            model = "none";
            voltage = 1.5; // 1.5V
            clock_frequency = 666666666; // 666MHz

            IDD0 = 100;
            IDD1 = 130;
            IDD2P = 10;
            IDD2Q = 70;
            IDD2N = 70;
            IDD3Pf = 60;
            IDD3Ps = 60;
            IDD3N = 90;
            IDD4W = 255;
            IDD4R = 230;
            IDD5 = 305;
            IDD6 = 9;
            IDD6L = 12;
            IDD7 = 415;

            BL = 8;
            DEVICE_WIDTH = 4;
            DATA_BUS_BITS = 64;
            
            tRC = 34;
            tRAS = 24;
            tRFC = 107;

            page_policy = "open_page";
        };

        component: {

            /* "memory.rank0" component */
            rank0 :{
                library: {
                    model = "dramsim";
                };
            };
        }; /* End of "memory" sub-components" */
    }; /* End of "memory" */
}; /* End of pseudo component hierarchy */
