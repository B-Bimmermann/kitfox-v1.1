diff -Nur McPAT08release/XML_Parse.cc ../McPAT08release/XML_Parse.cc
--- McPAT08release/XML_Parse.cc	2012-10-02 10:45:00.000000000 -0400
+++ ../McPAT08release/XML_Parse.cc	2015-04-24 21:42:11.000000000 -0400
@@ -1,31 +1,48 @@
 /*****************************************************************************
  *                                McPAT
  *                      SOFTWARE LICENSE AGREEMENT
- *            Copyright 2012 Hewlett-Packard Development Company, L.P.
+ *            Copyright 2009 Hewlett-Packard Development Company, L.P.
  *                          All Rights Reserved
  *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met: redistributions of source code must retain the above copyright
- * notice, this list of conditions and the following disclaimer;
- * redistributions in binary form must reproduce the above copyright
- * notice, this list of conditions and the following disclaimer in the
- * documentation and/or other materials provided with the distribution;
- * neither the name of the copyright holders nor the names of its
- * contributors may be used to endorse or promote products derived from
- * this software without specific prior written permission.
-
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.”
+ * Permission to use, copy, and modify this software and its documentation is
+ * hereby granted only under the following terms and conditions.  Both the
+ * above copyright notice and this permission notice must appear in all copies
+ * of the software, derivative works or modified versions, and any portions
+ * thereof, and both notices must appear in supporting documentation.
+ *
+ * Any User of the software ("User"), by accessing and using it, agrees to the
+ * terms and conditions set forth herein, and hereby grants back to Hewlett-
+ * Packard Development Company, L.P. and its affiliated companies ("HP") a
+ * non-exclusive, unrestricted, royalty-free right and license to copy,
+ * modify, distribute copies, create derivate works and publicly display and
+ * use, any changes, modifications, enhancements or extensions made to the
+ * software by User, including but not limited to those affording
+ * compatibility with other hardware or software, but excluding pre-existing
+ * software applications that may incorporate the software.  User further
+ * agrees to use its best efforts to inform HP of any such changes,
+ * modifications, enhancements or extensions.
+ *
+ * Correspondence should be provided to HP at:
+ *
+ * Director of Intellectual Property Licensing
+ * Office of Strategy and Technology
+ * Hewlett-Packard Company
+ * 1501 Page Mill Road
+ * Palo Alto, California  94304
+ *
+ * The software may be further distributed by User (but not offered for
+ * sale or transferred for compensation) to third parties, under the
+ * condition that such third parties agree to abide by the terms and
+ * conditions of this license.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" WITH ANY AND ALL ERRORS AND DEFECTS
+ * AND USER ACKNOWLEDGES THAT THE SOFTWARE MAY CONTAIN ERRORS AND DEFECTS.
+ * HP DISCLAIMS ALL WARRANTIES WITH REGARD TO THE SOFTWARE, INCLUDING ALL
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL
+ * HP BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES
+ * OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+ * WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER ACTION, ARISING
+ * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THE SOFTWARE.
  *
  ***************************************************************************/
 
@@ -302,7 +319,7 @@
 							if (strcmp(xNode3.getChildNode("stat",k).getAttribute("name"),"FPU_duty_cycle")==0) {sys.core[i].FPU_duty_cycle=atof(xNode3.getChildNode("stat",k).getAttribute("value"));continue;}
 							if (strcmp(xNode3.getChildNode("stat",k).getAttribute("name"),"ALU_cdb_duty_cycle")==0) {sys.core[i].ALU_cdb_duty_cycle=atof(xNode3.getChildNode("stat",k).getAttribute("value"));continue;}
 							if (strcmp(xNode3.getChildNode("stat",k).getAttribute("name"),"MUL_cdb_duty_cycle")==0) {sys.core[i].MUL_cdb_duty_cycle=atof(xNode3.getChildNode("stat",k).getAttribute("value"));continue;}
-							if (strcmp(xNode3.getChildNode("stat",k).getAttribute("name"),"FPU_cdb_duty_cycle")==0) {sys.core[i].FPU_cdb_duty_cycle=atoi(xNode3.getChildNode("stat",k).getAttribute("value"));continue;}
+							if (strcmp(xNode3.getChildNode("stat",k).getAttribute("name"),"FPU_cdb_duty_cycle")==0) {sys.core[i].FPU_cdb_duty_cycle=atof(xNode3.getChildNode("stat",k).getAttribute("value"));continue;}
 						}
 					}
 
@@ -1604,7 +1621,7 @@
 		for (j=0; j<20; j++) sys.L1Directory[i].Dir_config[j]=1;
 		for (j=0; j<20; j++) sys.L1Directory[i].buffer_sizes[j]=1;
 		sys.L1Directory[i].clockrate=1;
-		sys.L1Directory[i].ports[20]=1;
+		for (j=0; j<20; j++) sys.L1Directory[i].ports[j]=1;
 		sys.L1Directory[i].device_type=1;
 		strcpy(sys.L1Directory[i].threeD_stack,"default");
 		sys.L1Directory[i].total_accesses=1;
@@ -1618,7 +1635,7 @@
 		for (j=0; j<20; j++) sys.L2Directory[i].Dir_config[j]=1;
 		for (j=0; j<20; j++) sys.L2Directory[i].buffer_sizes[j]=1;
 		sys.L2Directory[i].clockrate=1;
-		sys.L2Directory[i].ports[20]=1;
+		for (j=0; j<20; j++) sys.L2Directory[i].ports[j]=1;
 		sys.L2Directory[i].device_type=1;
 		strcpy(sys.L2Directory[i].threeD_stack,"default");
 		sys.L2Directory[i].total_accesses=1;
@@ -1729,7 +1746,7 @@
 		sys.NoC[i].xbar0.number_of_outputs_of_crossbars=1;
 		sys.NoC[i].xbar0.flit_bits=1;
 		sys.NoC[i].xbar0.input_buffer_entries_per_port=1;
-		sys.NoC[i].xbar0.ports_of_input_buffer[20]=1;
+		for (j=0; j<20; j++) sys.NoC[i].xbar0.ports_of_input_buffer[j]=1;
 		sys.NoC[i].xbar0.crossbar_accesses=1;
 	}
 	//system_mem
diff -Nur McPAT08release/array.cc ../McPAT08release/array.cc
--- McPAT08release/array.cc	2012-10-02 10:45:00.000000000 -0400
+++ ../McPAT08release/array.cc	2015-04-24 21:42:11.000000000 -0400
@@ -1,31 +1,48 @@
 /*****************************************************************************
  *                                McPAT
  *                      SOFTWARE LICENSE AGREEMENT
- *            Copyright 2012 Hewlett-Packard Development Company, L.P.
+ *            Copyright 2009 Hewlett-Packard Development Company, L.P.
  *                          All Rights Reserved
  *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met: redistributions of source code must retain the above copyright
- * notice, this list of conditions and the following disclaimer;
- * redistributions in binary form must reproduce the above copyright
- * notice, this list of conditions and the following disclaimer in the
- * documentation and/or other materials provided with the distribution;
- * neither the name of the copyright holders nor the names of its
- * contributors may be used to endorse or promote products derived from
- * this software without specific prior written permission.
-
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.”
+ * Permission to use, copy, and modify this software and its documentation is
+ * hereby granted only under the following terms and conditions.  Both the
+ * above copyright notice and this permission notice must appear in all copies
+ * of the software, derivative works or modified versions, and any portions
+ * thereof, and both notices must appear in supporting documentation.
+ *
+ * Any User of the software ("User"), by accessing and using it, agrees to the
+ * terms and conditions set forth herein, and hereby grants back to Hewlett-
+ * Packard Development Company, L.P. and its affiliated companies ("HP") a
+ * non-exclusive, unrestricted, royalty-free right and license to copy,
+ * modify, distribute copies, create derivate works and publicly display and
+ * use, any changes, modifications, enhancements or extensions made to the
+ * software by User, including but not limited to those affording
+ * compatibility with other hardware or software, but excluding pre-existing
+ * software applications that may incorporate the software.  User further
+ * agrees to use its best efforts to inform HP of any such changes,
+ * modifications, enhancements or extensions.
+ *
+ * Correspondence should be provided to HP at:
+ *
+ * Director of Intellectual Property Licensing
+ * Office of Strategy and Technology
+ * Hewlett-Packard Company
+ * 1501 Page Mill Road
+ * Palo Alto, California  94304
+ *
+ * The software may be further distributed by User (but not offered for
+ * sale or transferred for compensation) to third parties, under the
+ * condition that such third parties agree to abide by the terms and
+ * conditions of this license.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" WITH ANY AND ALL ERRORS AND DEFECTS
+ * AND USER ACKNOWLEDGES THAT THE SOFTWARE MAY CONTAIN ERRORS AND DEFECTS.
+ * HP DISCLAIMS ALL WARRANTIES WITH REGARD TO THE SOFTWARE, INCLUDING ALL
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL
+ * HP BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES
+ * OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+ * WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER ACTION, ARISING
+ * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THE SOFTWARE.
  *
  ***************************************************************************/
 
@@ -252,13 +269,19 @@
 
 }
 
-void ArrayST::leakage_feedback(double temperature)
+/* This is runtime energy update. Dynamic update for array structure is similar to the process 
+   of creating ArrayST. The difference is that it does not repeat the array optimization but directly 
+   finds the final answer from l_ip and local_result. This approach guarantees to recall the previously 
+   found optimum array structure and update the power.
+   Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+void ArrayST::update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech)
 {
-  // Update the temperature. l_ip is already set and error-checked in the creator function.
-  l_ip.temp = (unsigned int)round(temperature/10.0)*10;
+  *g_ip = l_ip = McPAT_input;
 
   // This corresponds to cacti_interface() in the initialization process. Leakage power is updated here.
-  reconfigure(&l_ip,&local_result);
+  reconfigure(&l_ip,&local_result,&McPAT_tech); // g_tp is reset here
+
+  g_tp = McPAT_tech; // overwrite
 
   // Scale the power values. This is part of ArrayST::optimize_array().
   double long_channel_device_reduction = longer_channel_device_reduction(device_ty,core_ty);
@@ -295,6 +318,7 @@
   }
 }
 
+
 ArrayST:: ~ArrayST()
 {
 	local_result.cleanup();
diff -Nur McPAT08release/array.h ../McPAT08release/array.h
--- McPAT08release/array.h	2012-10-02 10:45:00.000000000 -0400
+++ ../McPAT08release/array.h	2015-04-24 21:42:11.000000000 -0400
@@ -1,31 +1,48 @@
 /*****************************************************************************
  *                                McPAT
  *                      SOFTWARE LICENSE AGREEMENT
- *            Copyright 2012 Hewlett-Packard Development Company, L.P.
+ *            Copyright 2009 Hewlett-Packard Development Company, L.P.
  *                          All Rights Reserved
  *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met: redistributions of source code must retain the above copyright
- * notice, this list of conditions and the following disclaimer;
- * redistributions in binary form must reproduce the above copyright
- * notice, this list of conditions and the following disclaimer in the
- * documentation and/or other materials provided with the distribution;
- * neither the name of the copyright holders nor the names of its
- * contributors may be used to endorse or promote products derived from
- * this software without specific prior written permission.
-
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.”
+ * Permission to use, copy, and modify this software and its documentation is
+ * hereby granted only under the following terms and conditions.  Both the
+ * above copyright notice and this permission notice must appear in all copies
+ * of the software, derivative works or modified versions, and any portions
+ * thereof, and both notices must appear in supporting documentation.
+ *
+ * Any User of the software ("User"), by accessing and using it, agrees to the
+ * terms and conditions set forth herein, and hereby grants back to Hewlett-
+ * Packard Development Company, L.P. and its affiliated companies ("HP") a
+ * non-exclusive, unrestricted, royalty-free right and license to copy,
+ * modify, distribute copies, create derivate works and publicly display and
+ * use, any changes, modifications, enhancements or extensions made to the
+ * software by User, including but not limited to those affording
+ * compatibility with other hardware or software, but excluding pre-existing
+ * software applications that may incorporate the software.  User further
+ * agrees to use its best efforts to inform HP of any such changes,
+ * modifications, enhancements or extensions.
+ *
+ * Correspondence should be provided to HP at:
+ *
+ * Director of Intellectual Property Licensing
+ * Office of Strategy and Technology
+ * Hewlett-Packard Company
+ * 1501 Page Mill Road
+ * Palo Alto, California  94304
+ *
+ * The software may be further distributed by User (but not offered for
+ * sale or transferred for compensation) to third parties, under the
+ * condition that such third parties agree to abide by the terms and
+ * conditions of this license.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" WITH ANY AND ALL ERRORS AND DEFECTS
+ * AND USER ACKNOWLEDGES THAT THE SOFTWARE MAY CONTAIN ERRORS AND DEFECTS.
+ * HP DISCLAIMS ALL WARRANTIES WITH REGARD TO THE SOFTWARE, INCLUDING ALL
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL
+ * HP BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES
+ * OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+ * WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER ACTION, ARISING
+ * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THE SOFTWARE.
  *
  ***************************************************************************/
 
@@ -63,8 +80,10 @@
   virtual void optimize_array();
   virtual void compute_base_power();
   virtual ~ArrayST();
-  
-  void leakage_feedback(double temperature);
+
+  /* This is runtime energy update for the change of parameters.
+     Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+  void update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech);
 };
 
 class InstCache :public Component{
diff -Nur McPAT08release/cacti/Ucache.cc ../McPAT08release/cacti/Ucache.cc
--- McPAT08release/cacti/Ucache.cc	2012-10-02 10:45:00.000000000 -0400
+++ ../McPAT08release/cacti/Ucache.cc	2015-04-24 21:42:11.000000000 -0400
@@ -1,33 +1,43 @@
-/*****************************************************************************
- *                                McPAT/CACTI
- *                      SOFTWARE LICENSE AGREEMENT
- *            Copyright 2012 Hewlett-Packard Development Company, L.P.
- *                          All Rights Reserved
+/*------------------------------------------------------------
+ *                              CACTI 6.5
+ *         Copyright 2008 Hewlett-Packard Development Corporation
+ *                         All Rights Reserved
  *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met: redistributions of source code must retain the above copyright
- * notice, this list of conditions and the following disclaimer;
- * redistributions in binary form must reproduce the above copyright
- * notice, this list of conditions and the following disclaimer in the
- * documentation and/or other materials provided with the distribution;
- * neither the name of the copyright holders nor the names of its
- * contributors may be used to endorse or promote products derived from
- * this software without specific prior written permission.
-
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.”
+ * Permission to use, copy, and modify this software and its documentation is
+ * hereby granted only under the following terms and conditions.  Both the
+ * above copyright notice and this permission notice must appear in all copies
+ * of the software, derivative works or modified versions, and any portions
+ * thereof, and both notices must appear in supporting documentation.
  *
- ***************************************************************************/
+ * Users of this software agree to the terms and conditions set forth herein, and
+ * hereby grant back to Hewlett-Packard Company and its affiliated companies ("HP")
+ * a non-exclusive, unrestricted, royalty-free right and license under any changes,
+ * enhancements or extensions  made to the core functions of the software, including
+ * but not limited to those affording compatibility with other hardware or software
+ * environments, but excluding applications which incorporate this software.
+ * Users further agree to use their best efforts to return to HP any such changes,
+ * enhancements or extensions that they make and inform HP of noteworthy uses of
+ * this software.  Correspondence should be provided to HP at:
+ *
+ *                       Director of Intellectual Property Licensing
+ *                       Office of Strategy and Technology
+ *                       Hewlett-Packard Company
+ *                       1501 Page Mill Road
+ *                       Palo Alto, California  94304
+ *
+ * This software may be distributed (but not offered for sale or transferred
+ * for compensation) to third parties, provided such third parties agree to
+ * abide by the terms and conditions of this notice.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" AND HP DISCLAIMS ALL
+ * WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES
+ * OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL HP
+ * CORPORATION BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
+ * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
+ * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
+ * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
+ * SOFTWARE.
+ *------------------------------------------------------------*/
 
 
 #include <time.h>
@@ -52,8 +62,10 @@
 
 using namespace std;
 
-const uint32_t nthreads = NTHREADS;
-
+/* The following variable was changed to a fixed number to avoid compile error when McPAT is
+   used with other simulators.
+   Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+const uint32_t nthreads = 1;//NTHREADS;
 
 void min_values_t::update_min_values(const min_values_t * val)
 {
@@ -264,7 +276,12 @@
 	  int num_mats = uca->bank.dp.num_mats;
 	  bool is_fa = uca->bank.dp.fully_assoc;
 	  bool pure_cam = uca->bank.dp.pure_cam;
-	ptr_array->Ndwl = Ndwl;
+    /* Missing segmentation information, Ndcm, needs to be stored for the leakage feedback use.
+       Segmentation information is essential to directly find the minimum-cost array structure without
+       navigating through possible solution sets again.
+       Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+    ptr_array->Ndcm = Ndcm;
+    ptr_array->Ndwl = Ndwl;
     ptr_array->Ndbl = Ndbl;
     ptr_array->Nspd = Nspd;
     ptr_array->deg_bl_muxing = dyn_p.deg_bl_muxing;
@@ -309,6 +326,7 @@
 //    cout<<"power_data_input_htree"<<uca->bank.htree_in_data->power.readOp.leakage<<endl;
     ptr_array->power_data_output_htree = uca->bank.htree_out_data->power;
 //    cout<<"power_data_output_htree"<<uca->bank.htree_out_data->power.readOp.leakage<<endl;
+
     ptr_array->power_row_predecoder_drivers = uca->bank.mat.r_predec->driver_power;
     ptr_array->power_row_predecoder_drivers.readOp.dynamic *= num_act_mats_hor_dir;
     ptr_array->power_row_predecoder_drivers.writeOp.dynamic *= num_act_mats_hor_dir;
@@ -882,36 +900,44 @@
   delete t_min;
 }
 
-void update(uca_org_t *fin_res)
+/* This is runtime leakage feedback control. It updates the leakage power for the given temperature.
+   This function recalls the previously found array structure and updates the power values. It uses
+   input and technology parameters (g_ip and g_tp) as well as segmentation information to directly
+   find the optimal solution. Note that Ndcm was added to mem_array class.
+   Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+void update(uca_org_t *fin_res, TechnologyParameter *tech)
 {
   if(fin_res->tag_array2)
   {
-    init_tech_params(g_ip->F_sz_um,true);
+    //init_tech_params(g_ip->F_sz_um,true);
+    g_tp = *tech;
     DynamicParameter tag_arr_dyn_p(true, g_ip->pure_ram, g_ip->pure_cam, fin_res->tag_array2->Nspd, fin_res->tag_array2->Ndwl, fin_res->tag_array2->Ndbl, fin_res->tag_array2->Ndcm, fin_res->tag_array2->Ndsam_lev_1, fin_res->tag_array2->Ndsam_lev_2, g_ip->is_main_mem);
     if(tag_arr_dyn_p.is_valid)
     {
       UCA * tag_arr = new UCA(tag_arr_dyn_p);
       fin_res->tag_array2->power = tag_arr->power;
+      delete tag_arr;
     }
     else
     {
-      cout << "ERROR: Cannot retrieve array structure for leakage feedback" << endl;
+      cout << "ERROR: Cannot retrieve array structure for update_energy" << endl;
       exit(1);
     }
   }
-  init_tech_params(g_ip->F_sz_um,false);
+  //init_tech_params(g_ip->F_sz_um,false);
+  g_tp = *tech;
   DynamicParameter data_arr_dyn_p(false, g_ip->pure_ram, g_ip->pure_cam, fin_res->data_array2->Nspd, fin_res->data_array2->Ndwl, fin_res->data_array2->Ndbl, fin_res->data_array2->Ndcm, fin_res->data_array2->Ndsam_lev_1, fin_res->data_array2->Ndsam_lev_2, g_ip->is_main_mem);
   if(data_arr_dyn_p.is_valid)
   {
     UCA * data_arr = new UCA(data_arr_dyn_p);
     fin_res->data_array2->power = data_arr->power;
+    delete data_arr;
   }
   else
   {
-    cout << "ERROR: Cannot retrieve array structure for leakage feedback" << endl;
+    cout << "ERROR: Cannot retrieve array structure for update_energy" << endl;
     exit(1);
   }
 
   fin_res->find_energy();
 }
-
diff -Nur McPAT08release/cacti/Ucache.h ../McPAT08release/cacti/Ucache.h
--- McPAT08release/cacti/Ucache.h	2012-10-02 10:45:00.000000000 -0400
+++ ../McPAT08release/cacti/Ucache.h	2015-04-24 21:42:11.000000000 -0400
@@ -1,33 +1,43 @@
-/*****************************************************************************
- *                                McPAT/CACTI
- *                      SOFTWARE LICENSE AGREEMENT
- *            Copyright 2012 Hewlett-Packard Development Company, L.P.
- *                          All Rights Reserved
+/*------------------------------------------------------------
+ *                              CACTI 6.5
+ *         Copyright 2008 Hewlett-Packard Development Corporation
+ *                         All Rights Reserved
  *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met: redistributions of source code must retain the above copyright
- * notice, this list of conditions and the following disclaimer;
- * redistributions in binary form must reproduce the above copyright
- * notice, this list of conditions and the following disclaimer in the
- * documentation and/or other materials provided with the distribution;
- * neither the name of the copyright holders nor the names of its
- * contributors may be used to endorse or promote products derived from
- * this software without specific prior written permission.
-
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.”
+ * Permission to use, copy, and modify this software and its documentation is
+ * hereby granted only under the following terms and conditions.  Both the
+ * above copyright notice and this permission notice must appear in all copies
+ * of the software, derivative works or modified versions, and any portions
+ * thereof, and both notices must appear in supporting documentation.
  *
- ***************************************************************************/
+ * Users of this software agree to the terms and conditions set forth herein, and
+ * hereby grant back to Hewlett-Packard Company and its affiliated companies ("HP")
+ * a non-exclusive, unrestricted, royalty-free right and license under any changes,
+ * enhancements or extensions  made to the core functions of the software, including
+ * but not limited to those affording compatibility with other hardware or software
+ * environments, but excluding applications which incorporate this software.
+ * Users further agree to use their best efforts to return to HP any such changes,
+ * enhancements or extensions that they make and inform HP of noteworthy uses of
+ * this software.  Correspondence should be provided to HP at:
+ *
+ *                       Director of Intellectual Property Licensing
+ *                       Office of Strategy and Technology
+ *                       Hewlett-Packard Company
+ *                       1501 Page Mill Road
+ *                       Palo Alto, California  94304
+ *
+ * This software may be distributed (but not offered for sale or transferred
+ * for compensation) to third parties, provided such third parties agree to
+ * abide by the terms and conditions of this notice.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" AND HP DISCLAIMS ALL
+ * WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES
+ * OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL HP
+ * CORPORATION BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
+ * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
+ * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
+ * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
+ * SOFTWARE.
+ *------------------------------------------------------------*/
 
 
 #ifndef __UCACHE_H__
@@ -88,7 +98,11 @@
     results_mem_array *ptr_results,
     uca_org_t *ptr_fin_res,
     bool is_main_mem);
-void update(uca_org_t *fin_res);
+
+/* This is runtime leakage feedback control. It updates the leakage power for the given temperature.
+   This function corresponds to solve() in the initialization process.
+   Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+void update(uca_org_t *fin_res, TechnologyParameter *tech);
 
 void solve(uca_org_t *fin_res);
 void init_tech_params(double tech, bool is_tag);
diff -Nur McPAT08release/cacti/area.cc ../McPAT08release/cacti/area.cc
--- McPAT08release/cacti/area.cc	2012-10-02 10:45:00.000000000 -0400
+++ ../McPAT08release/cacti/area.cc	2015-04-24 21:42:11.000000000 -0400
@@ -1,33 +1,43 @@
-/*****************************************************************************
- *                                McPAT/CACTI
- *                      SOFTWARE LICENSE AGREEMENT
- *            Copyright 2012 Hewlett-Packard Development Company, L.P.
- *                          All Rights Reserved
+/*------------------------------------------------------------
+ *                              CACTI 6.5
+ *         Copyright 2008 Hewlett-Packard Development Corporation
+ *                         All Rights Reserved
  *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met: redistributions of source code must retain the above copyright
- * notice, this list of conditions and the following disclaimer;
- * redistributions in binary form must reproduce the above copyright
- * notice, this list of conditions and the following disclaimer in the
- * documentation and/or other materials provided with the distribution;
- * neither the name of the copyright holders nor the names of its
- * contributors may be used to endorse or promote products derived from
- * this software without specific prior written permission.
-
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.”
+ * Permission to use, copy, and modify this software and its documentation is
+ * hereby granted only under the following terms and conditions.  Both the
+ * above copyright notice and this permission notice must appear in all copies
+ * of the software, derivative works or modified versions, and any portions
+ * thereof, and both notices must appear in supporting documentation.
  *
- ***************************************************************************/
+ * Users of this software agree to the terms and conditions set forth herein, and
+ * hereby grant back to Hewlett-Packard Company and its affiliated companies ("HP")
+ * a non-exclusive, unrestricted, royalty-free right and license under any changes,
+ * enhancements or extensions  made to the core functions of the software, including
+ * but not limited to those affording compatibility with other hardware or software
+ * environments, but excluding applications which incorporate this software.
+ * Users further agree to use their best efforts to return to HP any such changes,
+ * enhancements or extensions that they make and inform HP of noteworthy uses of
+ * this software.  Correspondence should be provided to HP at:
+ *
+ *                       Director of Intellectual Property Licensing
+ *                       Office of Strategy and Technology
+ *                       Hewlett-Packard Company
+ *                       1501 Page Mill Road
+ *                       Palo Alto, California  94304
+ *
+ * This software may be distributed (but not offered for sale or transferred
+ * for compensation) to third parties, provided such third parties agree to
+ * abide by the terms and conditions of this notice.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" AND HP DISCLAIMS ALL
+ * WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES
+ * OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL HP
+ * CORPORATION BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
+ * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
+ * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
+ * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
+ * SOFTWARE.
+ *------------------------------------------------------------*/
 
 
 
@@ -42,5 +52,7 @@
 
 using namespace std;
 
+Area::Area() : w(0), h(0), area(0) { }
+Area::~Area() { }
 
 
diff -Nur McPAT08release/cacti/area.h ../McPAT08release/cacti/area.h
--- McPAT08release/cacti/area.h	2012-10-02 10:45:00.000000000 -0400
+++ ../McPAT08release/cacti/area.h	2015-04-24 21:42:11.000000000 -0400
@@ -1,33 +1,43 @@
-/*****************************************************************************
- *                                McPAT/CACTI
- *                      SOFTWARE LICENSE AGREEMENT
- *            Copyright 2012 Hewlett-Packard Development Company, L.P.
- *                          All Rights Reserved
+/*------------------------------------------------------------
+ *                              CACTI 6.5
+ *         Copyright 2008 Hewlett-Packard Development Corporation
+ *                         All Rights Reserved
  *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met: redistributions of source code must retain the above copyright
- * notice, this list of conditions and the following disclaimer;
- * redistributions in binary form must reproduce the above copyright
- * notice, this list of conditions and the following disclaimer in the
- * documentation and/or other materials provided with the distribution;
- * neither the name of the copyright holders nor the names of its
- * contributors may be used to endorse or promote products derived from
- * this software without specific prior written permission.
-
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.”
+ * Permission to use, copy, and modify this software and its documentation is
+ * hereby granted only under the following terms and conditions.  Both the
+ * above copyright notice and this permission notice must appear in all copies
+ * of the software, derivative works or modified versions, and any portions
+ * thereof, and both notices must appear in supporting documentation.
  *
- ***************************************************************************/
+ * Users of this software agree to the terms and conditions set forth herein, and
+ * hereby grant back to Hewlett-Packard Company and its affiliated companies ("HP")
+ * a non-exclusive, unrestricted, royalty-free right and license under any changes,
+ * enhancements or extensions  made to the core functions of the software, including
+ * but not limited to those affording compatibility with other hardware or software
+ * environments, but excluding applications which incorporate this software.
+ * Users further agree to use their best efforts to return to HP any such changes,
+ * enhancements or extensions that they make and inform HP of noteworthy uses of
+ * this software.  Correspondence should be provided to HP at:
+ *
+ *                       Director of Intellectual Property Licensing
+ *                       Office of Strategy and Technology
+ *                       Hewlett-Packard Company
+ *                       1501 Page Mill Road
+ *                       Palo Alto, California  94304
+ *
+ * This software may be distributed (but not offered for sale or transferred
+ * for compensation) to third parties, provided such third parties agree to
+ * abide by the terms and conditions of this notice.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" AND HP DISCLAIMS ALL
+ * WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES
+ * OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL HP
+ * CORPORATION BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
+ * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
+ * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
+ * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
+ * SOFTWARE.
+ *------------------------------------------------------------*/
 
 
 
@@ -45,7 +55,8 @@
   double w;
   double h;
 
-  Area():w(0), h(0), area(0) { }
+  Area();
+  ~Area();
   double get_w() const { return w; }
   double get_h() const { return h; }
   double get_area() const
diff -Nur McPAT08release/cacti/cacti_interface.h ../McPAT08release/cacti/cacti_interface.h
--- McPAT08release/cacti/cacti_interface.h	2012-10-02 10:45:00.000000000 -0400
+++ ../McPAT08release/cacti/cacti_interface.h	2015-04-24 21:42:11.000000000 -0400
@@ -1,33 +1,43 @@
-/*****************************************************************************
- *                                McPAT/CACTI
- *                      SOFTWARE LICENSE AGREEMENT
- *            Copyright 2012 Hewlett-Packard Development Company, L.P.
- *                          All Rights Reserved
+/*------------------------------------------------------------
+ *                              CACTI 6.5
+ *         Copyright 2008 Hewlett-Packard Development Corporation
+ *                         All Rights Reserved
  *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met: redistributions of source code must retain the above copyright
- * notice, this list of conditions and the following disclaimer;
- * redistributions in binary form must reproduce the above copyright
- * notice, this list of conditions and the following disclaimer in the
- * documentation and/or other materials provided with the distribution;
- * neither the name of the copyright holders nor the names of its
- * contributors may be used to endorse or promote products derived from
- * this software without specific prior written permission.
-
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.”
+ * Permission to use, copy, and modify this software and its documentation is
+ * hereby granted only under the following terms and conditions.  Both the
+ * above copyright notice and this permission notice must appear in all copies
+ * of the software, derivative works or modified versions, and any portions
+ * thereof, and both notices must appear in supporting documentation.
  *
- ***************************************************************************/
+ * Users of this software agree to the terms and conditions set forth herein, and
+ * hereby grant back to Hewlett-Packard Company and its affiliated companies ("HP")
+ * a non-exclusive, unrestricted, royalty-free right and license under any changes,
+ * enhancements or extensions  made to the core functions of the software, including
+ * but not limited to those affording compatibility with other hardware or software
+ * environments, but excluding applications which incorporate this software.
+ * Users further agree to use their best efforts to return to HP any such changes,
+ * enhancements or extensions that they make and inform HP of noteworthy uses of
+ * this software.  Correspondence should be provided to HP at:
+ *
+ *                       Director of Intellectual Property Licensing
+ *                       Office of Strategy and Technology
+ *                       Hewlett-Packard Company
+ *                       1501 Page Mill Road
+ *                       Palo Alto, California  94304
+ *
+ * This software may be distributed (but not offered for sale or transferred
+ * for compensation) to third parties, provided such third parties agree to
+ * abide by the terms and conditions of this notice.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" AND HP DISCLAIMS ALL
+ * WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES
+ * OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL HP
+ * CORPORATION BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
+ * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
+ * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
+ * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
+ * SOFTWARE.
+ *------------------------------------------------------------*/
 
 
 
@@ -380,7 +390,10 @@
     ~uca_org_t(){};
 };
 
-void reconfigure(InputParameter *local_interface, uca_org_t *fin_res);
+/* This is runtime leakage feedback control. It updates the leakage power for the given temperature.
+   This function corresponds to cacti_interface() in the initialization process.
+   Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+void reconfigure(InputParameter *local_interface, uca_org_t *fin_res, class TechnologyParameter *tech);
 
 uca_org_t cacti_interface(const string & infile_name);
 //McPAT's plain interface, please keep !!!
@@ -408,16 +421,14 @@
 	    int obj_func_delay,
 	    int obj_func_dynamic_power,
 	    int obj_func_leakage_power,
-	    int obj_func_cycle_time,
 	    int obj_func_area,
+	    int obj_func_cycle_time,
 	    int dev_func_delay,
 	    int dev_func_dynamic_power,
 	    int dev_func_leakage_power,
 	    int dev_func_area,
 	    int dev_func_cycle_time,
-	    int ed_ed2_none, // 0 - ED, 1 - ED^2, 2 - use weight and deviate
 	    int temp,
-	    int wt, //0 - default(search across everything), 1 - global, 2 - 5% delay penalty, 3 - 10%, 4 - 20 %, 5 - 30%, 6 - low-swing
 	    int data_arr_ram_cell_tech_flavor_in,
 	    int data_arr_peri_global_tech_flavor_in,
 	    int tag_arr_ram_cell_tech_flavor_in,
@@ -544,6 +555,8 @@
 class mem_array
 {
   public:
+/* Ndcm was added to store the complete segmentation information for leakage feedback control.
+   Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
   int    Ndcm;
   int    Ndwl;
   int    Ndbl;
diff -Nur McPAT08release/cacti/const.h ../McPAT08release/cacti/const.h
--- McPAT08release/cacti/const.h	2012-10-02 10:45:00.000000000 -0400
+++ ../McPAT08release/cacti/const.h	2015-04-24 21:42:11.000000000 -0400
@@ -1,33 +1,43 @@
-/*****************************************************************************
- *                                McPAT/CACTI
- *                      SOFTWARE LICENSE AGREEMENT
- *            Copyright 2012 Hewlett-Packard Development Company, L.P.
- *                          All Rights Reserved
+/*------------------------------------------------------------
+ *                              CACTI 6.5
+ *         Copyright 2008 Hewlett-Packard Development Corporation
+ *                         All Rights Reserved
  *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met: redistributions of source code must retain the above copyright
- * notice, this list of conditions and the following disclaimer;
- * redistributions in binary form must reproduce the above copyright
- * notice, this list of conditions and the following disclaimer in the
- * documentation and/or other materials provided with the distribution;
- * neither the name of the copyright holders nor the names of its
- * contributors may be used to endorse or promote products derived from
- * this software without specific prior written permission.
-
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.”
+ * Permission to use, copy, and modify this software and its documentation is
+ * hereby granted only under the following terms and conditions.  Both the
+ * above copyright notice and this permission notice must appear in all copies
+ * of the software, derivative works or modified versions, and any portions
+ * thereof, and both notices must appear in supporting documentation.
  *
- ***************************************************************************/
+ * Users of this software agree to the terms and conditions set forth herein, and
+ * hereby grant back to Hewlett-Packard Company and its affiliated companies ("HP")
+ * a non-exclusive, unrestricted, royalty-free right and license under any changes,
+ * enhancements or extensions  made to the core functions of the software, including
+ * but not limited to those affording compatibility with other hardware or software
+ * environments, but excluding applications which incorporate this software.
+ * Users further agree to use their best efforts to return to HP any such changes,
+ * enhancements or extensions that they make and inform HP of noteworthy uses of
+ * this software.  Correspondence should be provided to HP at:
+ *
+ *                       Director of Intellectual Property Licensing
+ *                       Office of Strategy and Technology
+ *                       Hewlett-Packard Company
+ *                       1501 Page Mill Road
+ *                       Palo Alto, California  94304
+ *
+ * This software may be distributed (but not offered for sale or transferred
+ * for compensation) to third parties, provided such third parties agree to
+ * abide by the terms and conditions of this notice.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" AND HP DISCLAIMS ALL
+ * WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES
+ * OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL HP
+ * CORPORATION BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
+ * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
+ * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
+ * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
+ * SOFTWARE.
+ *------------------------------------------------------------*/
 
 #ifndef __CONST_H__
 #define __CONST_H__
@@ -102,8 +112,14 @@
 
 #define BIGNUM 1e30
 #define INF 9999999
+/* Header definition was added to avoid multiple definitions of MAX and MIN functions when
+   it is used (or integrated) with other simulators. 
+   Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+#ifndef MINMAX_H
+#define MINMAX_H
 #define MAX(a,b) (((a)>(b))?(a):(b))
 #define MIN(a,b) (((a)<(b))?(a):(b))
+#endif
 
 /* Used to communicate with the horowitz model */
 #define RISE 1
diff -Nur McPAT08release/cacti/crossbar.cc ../McPAT08release/cacti/crossbar.cc
--- McPAT08release/cacti/crossbar.cc	2012-10-02 10:45:00.000000000 -0400
+++ ../McPAT08release/cacti/crossbar.cc	2015-04-24 21:42:11.000000000 -0400
@@ -1,33 +1,43 @@
-/*****************************************************************************
- *                                McPAT/CACTI
- *                      SOFTWARE LICENSE AGREEMENT
- *            Copyright 2012 Hewlett-Packard Development Company, L.P.
- *                          All Rights Reserved
+/*------------------------------------------------------------
+ *                              CACTI 6.5
+ *         Copyright 2008 Hewlett-Packard Development Corporation
+ *                         All Rights Reserved
  *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met: redistributions of source code must retain the above copyright
- * notice, this list of conditions and the following disclaimer;
- * redistributions in binary form must reproduce the above copyright
- * notice, this list of conditions and the following disclaimer in the
- * documentation and/or other materials provided with the distribution;
- * neither the name of the copyright holders nor the names of its
- * contributors may be used to endorse or promote products derived from
- * this software without specific prior written permission.
-
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.”
+ * Permission to use, copy, and modify this software and its documentation is
+ * hereby granted only under the following terms and conditions.  Both the
+ * above copyright notice and this permission notice must appear in all copies
+ * of the software, derivative works or modified versions, and any portions
+ * thereof, and both notices must appear in supporting documentation.
  *
- ***************************************************************************/
+ * Users of this software agree to the terms and conditions set forth herein, and
+ * hereby grant back to Hewlett-Packard Company and its affiliated companies ("HP")
+ * a non-exclusive, unrestricted, royalty-free right and license under any changes,
+ * enhancements or extensions  made to the core functions of the software, including
+ * but not limited to those affording compatibility with other hardware or software
+ * environments, but excluding applications which incorporate this software.
+ * Users further agree to use their best efforts to return to HP any such changes,
+ * enhancements or extensions that they make and inform HP of noteworthy uses of
+ * this software.  Correspondence should be provided to HP at:
+ *
+ *                       Director of Intellectual Property Licensing
+ *                       Office of Strategy and Technology
+ *                       Hewlett-Packard Company
+ *                       1501 Page Mill Road
+ *                       Palo Alto, California  94304
+ *
+ * This software may be distributed (but not offered for sale or transferred
+ * for compensation) to third parties, provided such third parties agree to
+ * abide by the terms and conditions of this notice.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" AND HP DISCLAIMS ALL
+ * WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES
+ * OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL HP
+ * CORPORATION BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
+ * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
+ * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
+ * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
+ * SOFTWARE.
+ *------------------------------------------------------------*/
 
 #include "crossbar.h"
 
@@ -143,7 +153,7 @@
   double cap = g_tp.wire_outside_mat.C_per_um * (area.w + area.h) + n_out*tri_inp_cap + n_inp*tri_out_cap;
   delay = horowitz(w1.signal_rise_time(), res*cap, deviceType->Vth/deviceType->Vdd, deviceType->Vth/deviceType->Vdd, RISE);
 
-  Wire wreset();
+  Wire wreset;
 }
 
 void Crossbar::print_crossbar()
diff -Nur McPAT08release/cacti/decoder.cc ../McPAT08release/cacti/decoder.cc
--- McPAT08release/cacti/decoder.cc	2012-10-02 10:45:00.000000000 -0400
+++ ../McPAT08release/cacti/decoder.cc	2015-04-24 21:42:11.000000000 -0400
@@ -1,33 +1,43 @@
-/*****************************************************************************
- *                                McPAT/CACTI
- *                      SOFTWARE LICENSE AGREEMENT
- *            Copyright 2012 Hewlett-Packard Development Company, L.P.
- *                          All Rights Reserved
+/*------------------------------------------------------------
+ *                              CACTI 6.5
+ *         Copyright 2008 Hewlett-Packard Development Corporation
+ *                         All Rights Reserved
  *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met: redistributions of source code must retain the above copyright
- * notice, this list of conditions and the following disclaimer;
- * redistributions in binary form must reproduce the above copyright
- * notice, this list of conditions and the following disclaimer in the
- * documentation and/or other materials provided with the distribution;
- * neither the name of the copyright holders nor the names of its
- * contributors may be used to endorse or promote products derived from
- * this software without specific prior written permission.
-
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.”
+ * Permission to use, copy, and modify this software and its documentation is
+ * hereby granted only under the following terms and conditions.  Both the
+ * above copyright notice and this permission notice must appear in all copies
+ * of the software, derivative works or modified versions, and any portions
+ * thereof, and both notices must appear in supporting documentation.
  *
- ***************************************************************************/
+ * Users of this software agree to the terms and conditions set forth herein, and
+ * hereby grant back to Hewlett-Packard Company and its affiliated companies ("HP")
+ * a non-exclusive, unrestricted, royalty-free right and license under any changes,
+ * enhancements or extensions  made to the core functions of the software, including
+ * but not limited to those affording compatibility with other hardware or software
+ * environments, but excluding applications which incorporate this software.
+ * Users further agree to use their best efforts to return to HP any such changes,
+ * enhancements or extensions that they make and inform HP of noteworthy uses of
+ * this software.  Correspondence should be provided to HP at:
+ *
+ *                       Director of Intellectual Property Licensing
+ *                       Office of Strategy and Technology
+ *                       Hewlett-Packard Company
+ *                       1501 Page Mill Road
+ *                       Palo Alto, California  94304
+ *
+ * This software may be distributed (but not offered for sale or transferred
+ * for compensation) to third parties, provided such third parties agree to
+ * abide by the terms and conditions of this notice.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" AND HP DISCLAIMS ALL
+ * WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES
+ * OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL HP
+ * CORPORATION BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
+ * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
+ * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
+ * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
+ * SOFTWARE.
+ *------------------------------------------------------------*/
 
 
 
@@ -176,7 +186,8 @@
     {
       cumulative_area += compute_gate_area(INV, 1, w_dec_p[i], w_dec_n[i], area.h);
       cumulative_curr += cmos_Isub_leakage(w_dec_n[i], w_dec_p[i], 1, inv, is_dram);
-      cumulative_curr_Ig = cmos_Ig_leakage(w_dec_n[i], w_dec_p[i], 1, inv, is_dram);
+      /* Cumulative Ig is added up. Modified by William Song, Georgia Tech */
+      cumulative_curr_Ig += cmos_Ig_leakage(w_dec_n[i], w_dec_p[i], 1, inv, is_dram);
     }
     power.readOp.leakage = cumulative_curr * g_tp.peri_global.Vdd;
     power.readOp.gate_leakage = cumulative_curr_Ig * g_tp.peri_global.Vdd;
@@ -253,8 +264,12 @@
   }
 }
 
-void Decoder::leakage_feedback(double temperature)
+/* This is runtime energy update for the change of parameters.
+   Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+void Decoder::update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech)
 {
+  power.reset(); delay = 0;
+  
   double cumulative_curr = 0;  // cumulative leakage current
   double cumulative_curr_Ig = 0;  // cumulative leakage current
 
@@ -274,12 +289,15 @@
     for (int i = 1; i < num_gates; i++)
     {
       cumulative_curr += cmos_Isub_leakage(w_dec_n[i], w_dec_p[i], 1, inv, is_dram);
-      cumulative_curr_Ig = cmos_Ig_leakage(w_dec_n[i], w_dec_p[i], 1, inv, is_dram);
+      /* Cumulative Ig is added up. Modified by William Song, Georgia Tech */
+      cumulative_curr_Ig += cmos_Ig_leakage(w_dec_n[i], w_dec_p[i], 1, inv, is_dram);
     }
 
     power.readOp.leakage = cumulative_curr * g_tp.peri_global.Vdd;
     power.readOp.gate_leakage = cumulative_curr_Ig * g_tp.peri_global.Vdd;
   }
+
+  // Dynamic power is not computed here but by an explicit call of compute_delays()
 }
 
 PredecBlk::PredecBlk(
@@ -896,10 +914,15 @@
   return ret_val;
 }
 
-void PredecBlk::leakage_feedback(double temperature)
-{
+/* This is runtime energy update for the change of parameters.
+   Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+void PredecBlk::update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech)
+{
+  power_nand2_path.reset(); power_nand3_path.reset(); power_L2.reset();
+  delay_nand2_path = 0; delay_nand3_path = 0;
+  
   if (exist)
-  { // First check whether a predecoder block is needed
+  { // First check whether a predecoder block is required
     int num_L1_nand2 = 0;
     int num_L1_nand3 = 0;
     int num_L2 = 0;
@@ -1026,6 +1049,8 @@
     power_nand3_path.readOp.gate_leakage = gate_leak_L1_nand3 * g_tp.peri_global.Vdd;
     power_L2.readOp.gate_leakage         = gate_leakage_L2    * g_tp.peri_global.Vdd;
   }
+
+  // Dynamic power is not computed here but by an explicity call of compute_delays()
 }
 
 PredecBlkDrv::PredecBlkDrv(
@@ -1289,7 +1314,6 @@
       delay_nand2_path += this_delay;
       ret_val.first = this_delay / (1.0 - 0.5);
       power_nand2_path.readOp.dynamic += (c_intrinsic + c_load) * 0.5 * Vdd * Vdd;
-//      cout<< "c_intrinsic = " << c_intrinsic << "c_load" << c_load <<endl;
     }
 
     for (i = 0; i < number_gates_nand3_path - 1; ++i)
@@ -1330,40 +1354,13 @@
           num_addr_bits_nand3_path()*power_nand3_path.readOp.dynamic) * num_act_mats_hor_dir;
 }
 
-
-
-Predec::Predec(
-    PredecBlkDrv * drv1_,
-    PredecBlkDrv * drv2_)
-:blk1(drv1_->blk), blk2(drv2_->blk), drv1(drv1_), drv2(drv2_)
-{
-  driver_power.readOp.leakage = drv1->power_nand2_path.readOp.leakage +
-                                drv1->power_nand3_path.readOp.leakage +
-                                drv2->power_nand2_path.readOp.leakage +
-                                drv2->power_nand3_path.readOp.leakage;
-  block_power.readOp.leakage = blk1->power_nand2_path.readOp.leakage +
-                               blk1->power_nand3_path.readOp.leakage +
-                               blk1->power_L2.readOp.leakage +
-                               blk2->power_nand2_path.readOp.leakage +
-                               blk2->power_nand3_path.readOp.leakage +
-                               blk2->power_L2.readOp.leakage;
-  power.readOp.leakage = driver_power.readOp.leakage + block_power.readOp.leakage;
-
-  driver_power.readOp.gate_leakage = drv1->power_nand2_path.readOp.gate_leakage +
-                                  drv1->power_nand3_path.readOp.gate_leakage +
-                                  drv2->power_nand2_path.readOp.gate_leakage +
-                                  drv2->power_nand3_path.readOp.gate_leakage;
-  block_power.readOp.gate_leakage = blk1->power_nand2_path.readOp.gate_leakage +
-                                 blk1->power_nand3_path.readOp.gate_leakage +
-                                 blk1->power_L2.readOp.gate_leakage +
-                                 blk2->power_nand2_path.readOp.gate_leakage +
-                                 blk2->power_nand3_path.readOp.gate_leakage +
-                                 blk2->power_L2.readOp.gate_leakage;
-  power.readOp.gate_leakage = driver_power.readOp.gate_leakage + block_power.readOp.gate_leakage;
-}
-
-void PredecBlkDrv::leakage_feedback(double temperature)
-{
+/* This is runtime energy update for the change of parameters.
+   Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+void PredecBlkDrv::update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech)
+{
+  power_nand2_path.reset(); power_nand3_path.reset();
+  delay_nand2_path = 0; delay_nand3_path = 0;
+  
   double leak_nand2_path = 0;
   double leak_nand3_path = 0;
   double gate_leak_nand2_path = 0;
@@ -1396,6 +1393,38 @@
     power_nand2_path.readOp.gate_leakage = gate_leak_nand2_path * g_tp.peri_global.Vdd;
     power_nand3_path.readOp.gate_leakage = gate_leak_nand3_path * g_tp.peri_global.Vdd;
   }
+
+  // Dynamic power is not computed here but by an explicit call of compute_delays()
+}
+
+Predec::Predec(
+    PredecBlkDrv * drv1_,
+    PredecBlkDrv * drv2_)
+:blk1(drv1_->blk), blk2(drv2_->blk), drv1(drv1_), drv2(drv2_)
+{
+  driver_power.readOp.leakage = drv1->power_nand2_path.readOp.leakage +
+                                drv1->power_nand3_path.readOp.leakage +
+                                drv2->power_nand2_path.readOp.leakage +
+                                drv2->power_nand3_path.readOp.leakage;
+  block_power.readOp.leakage = blk1->power_nand2_path.readOp.leakage +
+                               blk1->power_nand3_path.readOp.leakage +
+                               blk1->power_L2.readOp.leakage +
+                               blk2->power_nand2_path.readOp.leakage +
+                               blk2->power_nand3_path.readOp.leakage +
+                               blk2->power_L2.readOp.leakage;
+  power.readOp.leakage = driver_power.readOp.leakage + block_power.readOp.leakage;
+
+  driver_power.readOp.gate_leakage = drv1->power_nand2_path.readOp.gate_leakage +
+                                  drv1->power_nand3_path.readOp.gate_leakage +
+                                  drv2->power_nand2_path.readOp.gate_leakage +
+                                  drv2->power_nand3_path.readOp.gate_leakage;
+  block_power.readOp.gate_leakage = blk1->power_nand2_path.readOp.gate_leakage +
+                                 blk1->power_nand3_path.readOp.gate_leakage +
+                                 blk1->power_L2.readOp.gate_leakage +
+                                 blk2->power_nand2_path.readOp.gate_leakage +
+                                 blk2->power_nand3_path.readOp.gate_leakage +
+                                 blk2->power_L2.readOp.gate_leakage;
+  power.readOp.gate_leakage = driver_power.readOp.gate_leakage + block_power.readOp.gate_leakage;
 }
 
 double Predec::compute_delays(double inrisetime)
@@ -1429,37 +1458,6 @@
 }
 
 
-void Predec::leakage_feedback(double temperature)
-{
-  drv1->leakage_feedback(temperature);
-  drv2->leakage_feedback(temperature);
-  blk1->leakage_feedback(temperature);
-  blk2->leakage_feedback(temperature);
-
-  driver_power.readOp.leakage = drv1->power_nand2_path.readOp.leakage +
-                                drv1->power_nand3_path.readOp.leakage +
-                                drv2->power_nand2_path.readOp.leakage +
-                                drv2->power_nand3_path.readOp.leakage;
-  block_power.readOp.leakage = blk1->power_nand2_path.readOp.leakage +
-                               blk1->power_nand3_path.readOp.leakage +
-                               blk1->power_L2.readOp.leakage +
-                               blk2->power_nand2_path.readOp.leakage +
-                               blk2->power_nand3_path.readOp.leakage +
-                               blk2->power_L2.readOp.leakage;
-  power.readOp.leakage = driver_power.readOp.leakage + block_power.readOp.leakage;
-
-  driver_power.readOp.gate_leakage = drv1->power_nand2_path.readOp.gate_leakage +
-                                  drv1->power_nand3_path.readOp.gate_leakage +
-                                  drv2->power_nand2_path.readOp.gate_leakage +
-                                  drv2->power_nand3_path.readOp.gate_leakage;
-  block_power.readOp.gate_leakage = blk1->power_nand2_path.readOp.gate_leakage +
-                                 blk1->power_nand3_path.readOp.gate_leakage +
-                                 blk1->power_L2.readOp.gate_leakage +
-                                 blk2->power_nand2_path.readOp.gate_leakage +
-                                 blk2->power_nand3_path.readOp.gate_leakage +
-                                 blk2->power_L2.readOp.gate_leakage;
-  power.readOp.gate_leakage = driver_power.readOp.gate_leakage + block_power.readOp.gate_leakage;
-}
 
 // returns <delay, risetime>
 pair<double, double> Predec::get_max_delay_before_decoder(
@@ -1494,7 +1492,43 @@
   return ret_val;
 }
 
+/* This is runtime energy update for the change of parameters.
+   Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+void Predec::update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech)
+{
+  driver_power.reset(); block_power.reset(); power.reset();
+
+  drv1->update_energy(McPAT_input,McPAT_tech);
+  drv2->update_energy(McPAT_input,McPAT_tech);
+  blk1->update_energy(McPAT_input,McPAT_tech);
+  blk2->update_energy(McPAT_input,McPAT_tech);
+
+  driver_power.readOp.leakage = drv1->power_nand2_path.readOp.leakage +
+                                drv1->power_nand3_path.readOp.leakage +
+                                drv2->power_nand2_path.readOp.leakage +
+                                drv2->power_nand3_path.readOp.leakage;
+  block_power.readOp.leakage = blk1->power_nand2_path.readOp.leakage +
+                               blk1->power_nand3_path.readOp.leakage +
+                               blk1->power_L2.readOp.leakage +
+                               blk2->power_nand2_path.readOp.leakage +
+                               blk2->power_nand3_path.readOp.leakage +
+                               blk2->power_L2.readOp.leakage;
+  power.readOp.leakage = driver_power.readOp.leakage + block_power.readOp.leakage;
+
+  driver_power.readOp.gate_leakage = drv1->power_nand2_path.readOp.gate_leakage +
+                                  drv1->power_nand3_path.readOp.gate_leakage +
+                                  drv2->power_nand2_path.readOp.gate_leakage +
+                                  drv2->power_nand3_path.readOp.gate_leakage;
+  block_power.readOp.gate_leakage = blk1->power_nand2_path.readOp.gate_leakage +
+                                 blk1->power_nand3_path.readOp.gate_leakage +
+                                 blk1->power_L2.readOp.gate_leakage +
+                                 blk2->power_nand2_path.readOp.gate_leakage +
+                                 blk2->power_nand3_path.readOp.gate_leakage +
+                                 blk2->power_L2.readOp.gate_leakage;
+  power.readOp.gate_leakage = driver_power.readOp.gate_leakage + block_power.readOp.gate_leakage;
 
+  // Dynamic power is not computed here but by an explicit call of compute_delays()
+}
 
 Driver::Driver(double c_gate_load_, double c_wire_load_, double r_wire_load_, bool is_dram)
 :number_gates(0),
@@ -1574,3 +1608,12 @@
   return this_delay / (1.0 - 0.5);
 }
 
+/* This is runtime power update for the change of parameters.
+   Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+void Driver::update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech)
+{
+  power.reset();
+  delay = 0;
+  
+  // Nothing to do
+}
\ No newline at end of file
diff -Nur McPAT08release/cacti/decoder.h ../McPAT08release/cacti/decoder.h
--- McPAT08release/cacti/decoder.h	2012-10-02 10:45:00.000000000 -0400
+++ ../McPAT08release/cacti/decoder.h	2015-04-24 21:42:11.000000000 -0400
@@ -1,33 +1,43 @@
-/*****************************************************************************
- *                                McPAT/CACTI
- *                      SOFTWARE LICENSE AGREEMENT
- *            Copyright 2012 Hewlett-Packard Development Company, L.P.
- *                          All Rights Reserved
+/*------------------------------------------------------------
+ *                              CACTI 6.5
+ *         Copyright 2008 Hewlett-Packard Development Corporation
+ *                         All Rights Reserved
  *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met: redistributions of source code must retain the above copyright
- * notice, this list of conditions and the following disclaimer;
- * redistributions in binary form must reproduce the above copyright
- * notice, this list of conditions and the following disclaimer in the
- * documentation and/or other materials provided with the distribution;
- * neither the name of the copyright holders nor the names of its
- * contributors may be used to endorse or promote products derived from
- * this software without specific prior written permission.
-
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.”
+ * Permission to use, copy, and modify this software and its documentation is
+ * hereby granted only under the following terms and conditions.  Both the
+ * above copyright notice and this permission notice must appear in all copies
+ * of the software, derivative works or modified versions, and any portions
+ * thereof, and both notices must appear in supporting documentation.
  *
- ***************************************************************************/
+ * Users of this software agree to the terms and conditions set forth herein, and
+ * hereby grant back to Hewlett-Packard Company and its affiliated companies ("HP")
+ * a non-exclusive, unrestricted, royalty-free right and license under any changes,
+ * enhancements or extensions  made to the core functions of the software, including
+ * but not limited to those affording compatibility with other hardware or software
+ * environments, but excluding applications which incorporate this software.
+ * Users further agree to use their best efforts to return to HP any such changes,
+ * enhancements or extensions that they make and inform HP of noteworthy uses of
+ * this software.  Correspondence should be provided to HP at:
+ *
+ *                       Director of Intellectual Property Licensing
+ *                       Office of Strategy and Technology
+ *                       Hewlett-Packard Company
+ *                       1501 Page Mill Road
+ *                       Palo Alto, California  94304
+ *
+ * This software may be distributed (but not offered for sale or transferred
+ * for compensation) to third parties, provided such third parties agree to
+ * abide by the terms and conditions of this notice.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" AND HP DISCLAIMS ALL
+ * WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES
+ * OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL HP
+ * CORPORATION BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
+ * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
+ * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
+ * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
+ * SOFTWARE.
+ *------------------------------------------------------------*/
 
 
 #ifndef __DECODER_H__
@@ -74,7 +84,9 @@
     void   compute_area();
     double compute_delays(double inrisetime);  // return outrisetime
 
-    void leakage_feedback(double temperature);
+    /* This is runtime energy update for the change of parameters.
+       Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+    void update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech);
 };
 
 
@@ -124,11 +136,12 @@
 
   void compute_widths();
   void compute_area();
-
-  void leakage_feedback(double temperature);
-  
   pair<double, double> compute_delays(pair<double, double> inrisetime); // <nand2, nand3>
   // return <outrise_nand2, outrise_nand3>
+
+  /* This is runtime energy update for the change of parameters.
+     Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+  void update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech);
 };
 
 
@@ -171,10 +184,6 @@
 
   void compute_widths();
   void compute_area();
-  
-  void leakage_feedback(double temperature);
-
-  
   pair<double, double> compute_delays(
       double inrisetime_nand2_path,
       double inrisetime_nand3_path);  // return <outrise_nand2, outrise_nand3>
@@ -191,6 +200,10 @@
            num_buffers_driving_8_nand3_load;
   }
   double get_rdOp_dynamic_E(int num_act_mats_hor_dir);
+
+  /* This is runtime energy update for the change of parameters.
+     Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+  void update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech);
 };
 
 
@@ -204,7 +217,6 @@
 
     double compute_delays(double inrisetime);  // return outrisetime
 
-    void leakage_feedback(double temperature);
     PredecBlk    * blk1;
     PredecBlk    * blk2;
     PredecBlkDrv * drv1;
@@ -213,6 +225,10 @@
     powerDef block_power;
     powerDef driver_power;
 
+    /* This is runtime energy update for the change of parameters.
+       Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+    void update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech);
+
   private:
     // returns <delay, risetime>
     pair<double, double> get_max_delay_before_decoder(
@@ -240,6 +256,10 @@
 
   void   compute_widths();
   double compute_delay(double inrisetime);
+  
+  /* This is runtime energy update for the change of parameters.
+     Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+  void update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech);
 };
 
 
diff -Nur McPAT08release/cacti/highradix.cc ../McPAT08release/cacti/highradix.cc
--- McPAT08release/cacti/highradix.cc	1969-12-31 19:00:00.000000000 -0500
+++ ../McPAT08release/cacti/highradix.cc	2015-04-24 21:42:11.000000000 -0400
@@ -0,0 +1,404 @@
+/*------------------------------------------------------------
+ *                              CACTI 6.5
+ *         Copyright 2008 Hewlett-Packard Development Corporation
+ *                         All Rights Reserved
+ *
+ * Permission to use, copy, and modify this software and its documentation is
+ * hereby granted only under the following terms and conditions.  Both the
+ * above copyright notice and this permission notice must appear in all copies
+ * of the software, derivative works or modified versions, and any portions
+ * thereof, and both notices must appear in supporting documentation.
+ *
+ * Users of this software agree to the terms and conditions set forth herein, and
+ * hereby grant back to Hewlett-Packard Company and its affiliated companies ("HP")
+ * a non-exclusive, unrestricted, royalty-free right and license under any changes, 
+ * enhancements or extensions  made to the core functions of the software, including 
+ * but not limited to those affording compatibility with other hardware or software
+ * environments, but excluding applications which incorporate this software.
+ * Users further agree to use their best efforts to return to HP any such changes,
+ * enhancements or extensions that they make and inform HP of noteworthy uses of
+ * this software.  Correspondence should be provided to HP at:
+ *
+ *                       Director of Intellectual Property Licensing
+ *                       Office of Strategy and Technology
+ *                       Hewlett-Packard Company
+ *                       1501 Page Mill Road
+ *                       Palo Alto, California  94304
+ *
+ * This software may be distributed (but not offered for sale or transferred
+ * for compensation) to third parties, provided such third parties agree to
+ * abide by the terms and conditions of this notice.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" AND HP DISCLAIMS ALL
+ * WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES
+ * OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL HP 
+ * CORPORATION BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
+ * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
+ * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
+ * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
+ * SOFTWARE.
+ *------------------------------------------------------------*/
+
+#include "highradix.h"
+#include <iomanip>
+using namespace std;
+
+#define MAX_WIRE_SCALE 1
+
+HighRadix::HighRadix(
+    double SUB_SWITCH_SZ_,
+    double ROWS_,
+    double FREQUENCY_, // GHz
+    double RADIX_,
+    double VC_COUNT_,
+    double FLIT_SZ_,
+    double AF_,// activity factor
+    double DIE_LEN_,//u
+    double DIE_HT_,//u
+    double INP_BUFF_ENT_, 
+    double ROW_BUFF_ENT_, 
+    double COL_BUFF_ENT_,
+        TechnologyParameter::DeviceType *dt
+    ):SUB_SWITCH_SZ(SUB_SWITCH_SZ_), ROWS(ROWS_), FREQUENCY(FREQUENCY_), 
+    RADIX(RADIX_), VC_COUNT(VC_COUNT_), FLIT_SZ(FLIT_SZ_), AF(AF_), 
+    DIE_LEN(DIE_LEN_), DIE_HT(DIE_HT_), INP_BUFF_ENT(INP_BUFF_ENT_),
+    ROW_BUFF_ENT(ROW_BUFF_ENT_), COL_BUFF_ENT(COL_BUFF_ENT_), deviceType(dt)
+{
+  double area_scale=1;
+  double tech_init = 90;
+  if (g_ip->F_sz_nm == 65) {
+    area_scale*=1;
+  }
+  else if(g_ip->F_sz_nm == 45) {
+    area_scale*=1;
+  }
+  else if(g_ip->F_sz_nm == 32) {
+    area_scale*=2;
+  }
+
+  DIE_LEN = sqrt(DIE_LEN_*DIE_HT_/area_scale);
+  DIE_HT = DIE_LEN;
+
+  COLUMNS = pow(RADIX/SUB_SWITCH_SZ, 2)/ROWS;
+  INP_BUFF_SZ = FLIT_SZ * INP_BUFF_ENT;
+  ROW_BUFF_SZ = ROW_BUFF_ENT * FLIT_SZ;
+  COL_BUFF_SZ = COL_BUFF_ENT * FLIT_SZ;
+  area.set_area(0);
+}
+
+void
+HighRadix::compute_power()
+{
+  num_sub = ROWS * COLUMNS;
+  //FIXME change cb power to per input
+ 
+  double scale = 1;
+  while (true) {
+    Wire winit(scale, scale);
+    cb = new Crossbar(SUB_SWITCH_SZ, SUB_SWITCH_SZ, FLIT_SZ);
+    cb->compute_power();
+    if (cb->delay*1e12 < (1/FREQUENCY)*(1e3))
+      break;
+    else {
+      scale+=0.2;
+      if (scale > MAX_WIRE_SCALE) break;
+      cout << "scale = " << scale << endl;
+    }
+  }
+  cb->power.readOp.dynamic /= SUB_SWITCH_SZ; // crossbar power per message
+  scale = 1;
+
+  while (true) {
+    Wire winit(scale, scale);
+    out_cb = new Crossbar(1, SUB_SWITCH_SZ, FLIT_SZ);
+    out_cb->compute_power();
+    if (out_cb->delay*1e12 < (1/FREQUENCY)*(1e3))
+      break;
+    else {
+      scale+=0.2;
+      if (scale > MAX_WIRE_SCALE) break;
+      cout << "scale = " << scale << endl;
+      /* Undeleted out_cb in while cause memory leak.
+       Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+      delete out_cb;
+    }
+  }
+  Wire winit;
+  out_cb->power.readOp.dynamic /= SUB_SWITCH_SZ; // power per message
+
+  //arbiter initialization
+  vc_arb = new Arbiter(VC_COUNT, FLIT_SZ, cb->area.w);
+  vc_arb->compute_power();
+  c_arb = new Arbiter(COLUMNS, FLIT_SZ, cb->area.w);
+  c_arb->compute_power();
+  cb_arb = new Arbiter(RADIX/ROWS, FLIT_SZ, cb->area.w);
+  cb_arb->compute_power();
+
+  // input buffer, row/column buffer initialization
+  inp_buff = buffer_(FLIT_SZ, INP_BUFF_SZ);
+  c_buff = buffer_(FLIT_SZ, COL_BUFF_SZ*2);
+  r_buff = buffer_(FLIT_SZ, ROW_BUFF_SZ*2);
+  
+
+  // repeated wire initialization
+  hor_bus = new Wire(g_ip->wt, DIE_LEN);
+  // effective ht of vertical bus (connecting cb to column buffer) in each sub-switch
+  double eff_ht = (ROWS * (ROWS +1)/2) * (DIE_HT/ROWS);
+  ver_bus = new Wire(g_ip->wt, eff_ht);
+
+  // sub switch includes row buffers, column buffers, vc/crossbar/column arbitration and a 2 stage crossbar traversal
+  sub_switch_power();
+  power.readOp.dynamic += sub_sw.power.readOp.dynamic * num_sub;
+  power.readOp.leakage += sub_sw.power.readOp.leakage * num_sub;
+
+  // input buffer power
+  power.readOp.dynamic += 2 /*r&w*/ * inp_buff->power.readOp.dynamic * RADIX;
+  power.readOp.leakage += inp_buff->power.readOp.leakage * RADIX;
+
+  // buses
+  power.readOp.dynamic += hor_bus->power.readOp.dynamic * FLIT_SZ * SUB_SWITCH_SZ * ROWS;
+  power.readOp.leakage += hor_bus->power.readOp.leakage * FLIT_SZ * SUB_SWITCH_SZ * ROWS;
+  power.readOp.dynamic += ver_bus->power.readOp.dynamic * FLIT_SZ * COLUMNS * SUB_SWITCH_SZ;
+  power.readOp.leakage += ver_bus->power.readOp.leakage * FLIT_SZ * ROWS * COLUMNS * SUB_SWITCH_SZ;
+
+  // To calculate contribution of each component to the total power
+  compute_crossbar_power();
+  compute_bus_power();
+  compute_arb_power();
+  compute_buff_power();
+
+  //area 
+  sub_sw.area.set_area(sub_sw.area.get_area() + cb->area.get_area());
+  sub_sw.area.set_area(sub_sw.area.get_area() + out_cb->area.get_area());  
+  sub_sw.area.set_area(sub_sw.area.get_area() + r_buff->area.get_area() * VC_COUNT * SUB_SWITCH_SZ);
+  sub_sw.area.set_area(sub_sw.area.get_area() + c_buff->area.get_area() * VC_COUNT * SUB_SWITCH_SZ);
+
+  buff_tot.area.set_area(buff_tot.area.get_area() + inp_buff->area.get_area() * RADIX);
+  buff_tot.area.set_area(buff_tot.area.get_area() + VC_COUNT * r_buff->area.get_area() * SUB_SWITCH_SZ * num_sub);
+  buff_tot.area.set_area(buff_tot.area.get_area() + VC_COUNT * c_buff->area.get_area() * SUB_SWITCH_SZ * num_sub);
+
+  crossbar_tot.area.set_area(crossbar_tot.area.get_area() + cb->area.get_area() * num_sub);
+  crossbar_tot.area.set_area(crossbar_tot.area.get_area() + out_cb->area.get_area() * num_sub);
+
+  wire_tot.area.set_area(hor_bus->area.get_area() * FLIT_SZ * SUB_SWITCH_SZ * ROWS);
+  wire_tot.area.set_area(ver_bus->area.get_area() * FLIT_SZ * ROWS * COLUMNS);
+}
+
+void HighRadix::compute_crossbar_power()
+{
+  crossbar_tot.power = cb->power;
+  crossbar_tot.power = crossbar_tot.power + out_cb->power;
+  crossbar_tot.power.readOp.dynamic *= num_sub;
+  crossbar_tot.power.readOp.leakage *= num_sub;
+}
+
+void HighRadix::compute_bus_power()
+{
+  wire_tot.power.readOp.dynamic = hor_bus->power.readOp.dynamic * FLIT_SZ * SUB_SWITCH_SZ * ROWS;
+  wire_tot.power.readOp.leakage = hor_bus->power.readOp.leakage * FLIT_SZ * SUB_SWITCH_SZ * ROWS;
+  wire_tot.power.readOp.dynamic += ver_bus->power.readOp.dynamic * FLIT_SZ * COLUMNS * SUB_SWITCH_SZ;
+  wire_tot.power.readOp.leakage += ver_bus->power.readOp.leakage * FLIT_SZ * ROWS * COLUMNS * SUB_SWITCH_SZ;
+}
+
+void HighRadix::compute_arb_power()
+{
+  arb_tot.power = cb_arb->power;
+  arb_tot.power = arb_tot.power + vc_arb->power; // for CB traversal
+  arb_tot.power = arb_tot.power + c_arb->power;
+  arb_tot.power = arb_tot.power + vc_arb->power; // to the o/p port
+
+  arb_tot.power.readOp.dynamic *= num_sub;
+  arb_tot.power.readOp.leakage *= num_sub;
+}
+
+void HighRadix::compute_buff_power()
+{
+  //input buffer read/write
+  buff_tot.power.readOp.dynamic = 2 * inp_buff->power.readOp.dynamic * RADIX;
+  buff_tot.power.readOp.leakage = inp_buff->power.readOp.leakage * RADIX;
+
+  //row buffer read/write
+  buff_tot.power.readOp.dynamic += r_buff->power.readOp.dynamic * 2 * num_sub; 
+  buff_tot.power.readOp.leakage += r_buff->power.readOp.leakage * num_sub;
+
+  //column buffer read/write
+  buff_tot.power.readOp.dynamic += c_buff->power.readOp.dynamic * 2 * num_sub; 
+  buff_tot.power.readOp.leakage += c_buff->power.readOp.leakage * num_sub; 
+}
+
+void
+HighRadix::sub_switch_power()
+{
+  // each sub-switch power
+  sub_sw.power.readOp.dynamic = sub_sw.power.readOp.dynamic + 
+          r_buff->power.readOp.dynamic * 2 /* one read and one write */ * VC_COUNT; 
+  sub_sw.power.readOp.leakage = sub_sw.power.readOp.leakage + 
+          r_buff->power.readOp.leakage * VC_COUNT; 
+  sub_sw.power = sub_sw.power + cb->power;
+
+  sub_sw.power.readOp.dynamic = sub_sw.power.readOp.dynamic + 
+          2 * c_buff->power.readOp.dynamic /* one read and one write */ * VC_COUNT; 
+  sub_sw.power.readOp.leakage = sub_sw.power.readOp.leakage + 
+          c_buff->power.readOp.leakage * VC_COUNT; 
+  sub_sw.power = sub_sw.power + out_cb->power;
+
+  // arbiter power
+  sub_sw.power = sub_sw.power + cb_arb->power;
+  sub_sw.power = sub_sw.power + vc_arb->power; // for CB traversal
+  sub_sw.power = sub_sw.power + c_arb->power;
+  sub_sw.power = sub_sw.power + vc_arb->power; // to the o/p port
+}
+  
+
+HighRadix::~HighRadix()
+{
+    /* Undeleted structures cause memory leak.
+       Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+    delete cb;
+    delete out_cb;
+    delete vc_arb;
+    delete c_arb;
+    delete cb_arb;
+    delete hor_bus;
+    delete ver_bus;
+
+    delete inp_buff;
+    delete r_buff;
+    delete c_buff;
+  
+  
+  
+}
+
+Mat * HighRadix::buffer_(double block_sz, double sz)
+{
+  DynamicParameter dyn_p;
+  dyn_p.is_tag = false;
+  dyn_p.num_subarrays = 1;
+  dyn_p.num_mats = 1;
+  dyn_p.Ndbl = 1;
+  dyn_p.Ndwl = 1;
+  dyn_p.Nspd = 1;
+  dyn_p.deg_bl_muxing = 1;
+  dyn_p.deg_senseamp_muxing_non_associativity = 1;
+  dyn_p.Ndsam_lev_1 = 1;
+  dyn_p.Ndsam_lev_2 = 1;
+  dyn_p.number_addr_bits_mat = 8;
+  dyn_p.number_way_select_signals_mat = 1;
+  dyn_p.num_act_mats_hor_dir = 1;
+  dyn_p.is_dram = false;
+  dyn_p.V_b_sense = deviceType->Vdd; // FIXME check power calc.
+  dyn_p.ram_cell_tech_type = 
+  dyn_p.num_r_subarray = (int) (sz/block_sz);
+  dyn_p.num_c_subarray = (int) block_sz;
+  dyn_p.num_mats_h_dir = 1;
+  dyn_p.num_mats_v_dir = 1;
+  dyn_p.num_do_b_subbank = (int)block_sz;
+  dyn_p.num_do_b_mat = (int) block_sz;
+  dyn_p.num_di_b_mat = (int) block_sz;
+
+  dyn_p.use_inp_params = 1;
+  dyn_p.num_wr_ports = 1;
+  dyn_p.num_rd_ports = 1;
+  dyn_p.num_rw_ports = 0;
+  dyn_p.num_se_rd_ports =0;
+  dyn_p.out_w = (int) block_sz;
+
+
+  dyn_p.cell.h = g_tp.sram.b_h + 2 * g_tp.wire_outside_mat.pitch * (dyn_p.num_wr_ports + 
+      dyn_p.num_rw_ports - 1 + dyn_p.num_rd_ports);
+  dyn_p.cell.w = g_tp.sram.b_w + 2 * g_tp.wire_outside_mat.pitch * (dyn_p.num_rw_ports - 1 + 
+      (dyn_p.num_rd_ports - dyn_p.num_se_rd_ports) + 
+      dyn_p.num_wr_ports) + g_tp.wire_outside_mat.pitch * dyn_p.num_se_rd_ports;
+
+  Mat *buff = new Mat(dyn_p);
+  buff->compute_delays(0);
+  buff->compute_power_energy();
+  return buff;
+}
+
+void HighRadix::print_buffer(Component *c)
+{
+//  cout << "\tDelay         - " << c->delay * 1e6 << " ns" << endl;
+  cout << "\tDynamic Power - " << c->power.readOp.dynamic*1e9 << " nJ" << endl;
+  cout << "\tLeakage Power - " << c->power.readOp.leakage*1e3 << " mW" << endl;
+  cout << "\tWidth         - " << c->area.w << " u" << endl;
+  cout << "\tLength        - " << c->area.h << " u" << endl;
+}
+
+
+void HighRadix::print_router()
+{
+  cout << "\n\nRouter stats:\n";
+  cout << "\tNetwork frequency - " << FREQUENCY <<" GHz\n";
+  cout << "\tNo. of Virtual channels - " << VC_COUNT << "\n";
+  cout << "\tSub-switch size - " << (int)SUB_SWITCH_SZ << endl;
+  cout << "\tNo. of rows - " << (int)ROWS << endl;
+  cb->print_crossbar();
+  out_cb->print_crossbar();
+  vc_arb->print_arbiter();
+  c_arb->print_arbiter();
+  cb_arb->print_arbiter();
+//  hor_bus->print_wire();
+  cout << "\n\nBuffer stats:\n";
+  cout << "\nInput Buffer stats:\n";
+  print_buffer (inp_buff);
+  cout << "\nRow Buffer stats:\n";
+  print_buffer (r_buff);
+  cout << "\nColumn Buffer stats:\n";
+  print_buffer (c_buff);
+
+  
+  cout << "\n\n Router dynamic power (max) = " << power.readOp.dynamic * FREQUENCY * 1e9 << " W\n";
+  cout << " Router dynamic power (load - " << AF << ") = " << power.readOp.dynamic * FREQUENCY * 1e9 * AF << " W\n";
+  cout << "\n\nDetailed Stats\n";
+  cout << "--------------\n";
+  cout << "Power dissipated in buses/wires - " << setprecision(3) << 
+    wire_tot.power.readOp.dynamic * FREQUENCY * 1e9 << " W";
+  cout << "\t" <<setiosflags(ios::fixed) << setprecision(2) <<
+          (wire_tot.power.readOp.dynamic/power.readOp.dynamic)*100 << " %\n";
+  cout << "Buffer power                    - " << buff_tot.power.readOp.dynamic * 
+          FREQUENCY * 1e9 << " W";
+  cout << "\t" << 
+          (buff_tot.power.readOp.dynamic/power.readOp.dynamic)*100 << " %\n";
+  cout << "Crossbar power                  - " << crossbar_tot.power.readOp.dynamic * 
+          FREQUENCY * 1e9 << " W";
+  cout << "\t" << 
+          (crossbar_tot.power.readOp.dynamic/power.readOp.dynamic)*100 << " %\n";
+  cout << "Arbiter power                   - " << arb_tot.power.readOp.dynamic * 
+          FREQUENCY * 1e9 << " W";
+  cout << "\t" << 
+          (arb_tot.power.readOp.dynamic/power.readOp.dynamic)*100 << " %\n";
+  cout << "Sub-switch power (dynamic)      - " << sub_sw.power.readOp.dynamic * num_sub *
+          FREQUENCY * 1e9 << " W";
+  cout << "\t" << 
+          (sub_sw.power.readOp.dynamic * num_sub/power.readOp.dynamic)*100 << " %\n";
+  cout << "Input buffer power (dynamic)    - " << 2 * inp_buff->power.readOp.dynamic * 
+          RADIX * FREQUENCY * 1e9 << " W";
+  cout << "\t" << 
+          (2 * inp_buff->power.readOp.dynamic * RADIX/power.readOp.dynamic)*100 << " %\n";
+  cout << "\nLeakage power\n";
+  cout << "Router power                    - " << power.readOp.leakage << " W\n";
+  cout << "Bus power                       - " <<setprecision(4) <<  wire_tot.power.readOp.leakage << " W\n";
+  cout << "Buffer power                    - " << buff_tot.power.readOp.leakage << " W\n";
+  cout << "Crossbar power                  - " << crossbar_tot.power.readOp.leakage << " W\n";
+  cout << "Arbiter power                   - " << arb_tot.power.readOp.leakage << " W\n";
+  cout << "Sub-switch power                - " << sub_sw.power.readOp.leakage << " W" <<endl;
+
+  cout << "\n\nArea Stats\n";
+  cout << "Input buffer dimension (mm x mm)- " << inp_buff->area.get_h()*1e-3 << " x " << inp_buff->area.get_w()*1e-3 << endl;
+  cout << "Row buffer (mm x mm)            - " << r_buff->area.w*1e-3 << " x " << r_buff->area.h*1e-3 << endl;
+  cout << "Col buffer (mm x mm)            - " << c_buff->area.w*1e-3 << " x " << c_buff->area.h*1e-3 << endl;
+  cout << "Crossbar area  (mm x mm)        - " << cb->area.w*1e-3 << " x " << cb->area.h*1e-3 << endl;
+//  cout << "Wire hor area  (nm x nm)        - " << hor_bus->area.w*1e3 << " x " << hor_bus->area.h*1e3 << endl;
+//  cout << "Wire ver area  (nm x nm)        - " << ver_bus->area.w*1e3 << " x " << ver_bus->area.h*1e3 << endl;
+  cout << "Wire total                      - " << wire_tot.area.get_area()*1e-6 << " mm2\n";
+  cout << "Crossbar total                  - " << crossbar_tot.area.get_area()*1e-6 << " mm2\n";
+  cout << "Buff total                      - " << buff_tot.area.get_area()*1e-6 << " mm2\n";
+  cout << "Subswitch                       - " << sub_sw.area.get_area()*1e-6 << " mm2\n";
+  cout << "Subswitch total                 - " << sub_sw.area.get_area()*num_sub*1e-6 << " mm2\n";
+
+  cout << "Total area                      - " << (wire_tot.area.get_area() + crossbar_tot.area.get_area() +
+                                                  buff_tot.area.get_area())*1e-6 << endl;
+}
+
diff -Nur McPAT08release/cacti/io.cc ../McPAT08release/cacti/io.cc
--- McPAT08release/cacti/io.cc	2012-10-02 10:45:00.000000000 -0400
+++ ../McPAT08release/cacti/io.cc	2015-04-24 21:42:11.000000000 -0400
@@ -1,33 +1,43 @@
-/*****************************************************************************
- *                                McPAT/CACTI
- *                      SOFTWARE LICENSE AGREEMENT
- *            Copyright 2012 Hewlett-Packard Development Company, L.P.
- *                          All Rights Reserved
+/*------------------------------------------------------------
+ *                              CACTI 6.5
+ *         Copyright 2008 Hewlett-Packard Development Corporation
+ *                         All Rights Reserved
  *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met: redistributions of source code must retain the above copyright
- * notice, this list of conditions and the following disclaimer;
- * redistributions in binary form must reproduce the above copyright
- * notice, this list of conditions and the following disclaimer in the
- * documentation and/or other materials provided with the distribution;
- * neither the name of the copyright holders nor the names of its
- * contributors may be used to endorse or promote products derived from
- * this software without specific prior written permission.
-
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.”
+ * Permission to use, copy, and modify this software and its documentation is
+ * hereby granted only under the following terms and conditions.  Both the
+ * above copyright notice and this permission notice must appear in all copies
+ * of the software, derivative works or modified versions, and any portions
+ * thereof, and both notices must appear in supporting documentation.
  *
- ***************************************************************************/
+ * Users of this software agree to the terms and conditions set forth herein, and
+ * hereby grant back to Hewlett-Packard Company and its affiliated companies ("HP")
+ * a non-exclusive, unrestricted, royalty-free right and license under any changes,
+ * enhancements or extensions  made to the core functions of the software, including
+ * but not limited to those affording compatibility with other hardware or software
+ * environments, but excluding applications which incorporate this software.
+ * Users further agree to use their best efforts to return to HP any such changes,
+ * enhancements or extensions that they make and inform HP of noteworthy uses of
+ * this software.  Correspondence should be provided to HP at:
+ *
+ *                       Director of Intellectual Property Licensing
+ *                       Office of Strategy and Technology
+ *                       Hewlett-Packard Company
+ *                       1501 Page Mill Road
+ *                       Palo Alto, California  94304
+ *
+ * This software may be distributed (but not offered for sale or transferred
+ * for compensation) to third parties, provided such third parties agree to
+ * abide by the terms and conditions of this notice.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" AND HP DISCLAIMS ALL
+ * WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES
+ * OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL HP
+ * CORPORATION BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
+ * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
+ * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
+ * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
+ * SOFTWARE.
+ *------------------------------------------------------------*/
 
 
 
@@ -567,7 +577,6 @@
   cout << "Data array peripheral type    : " << data_arr_peri_global_tech_type << endl;
   cout << "Tag array cell type           : " << tag_arr_ram_cell_tech_type << endl;
   cout << "Tag array peripheral type     : " << tag_arr_peri_global_tech_type << endl;
-  cout << "Optimization target           : " << ed << endl;
   cout << "Design objective (UCA wt)     : " << delay_wt << " "
                                                 << dynamic_power_wt << " " << leakage_power_wt << " " << cycle_time_wt
                                                 << " " << area_wt << endl;
@@ -709,7 +718,7 @@
     Nuca n(&g_tp.peri_global);
     n.sim_nuca();
   }
-  g_ip->display_ip();
+  //g_ip->display_ip();
   solve(&fin_res);
 
   output_UCA(&fin_res);
@@ -918,56 +927,55 @@
     int line_size,
     int associativity,
     int rw_ports,
-    int excl_read_ports,// para5
+    int excl_read_ports,
     int excl_write_ports,
     int single_ended_read_ports,
     int search_ports,
     int banks,
-    double tech_node,//para10
+    double tech_node,
     int output_width,
     int specific_tag,
     int tag_width,
     int access_mode,
-    int cache,      //para15
+    int cache,
     int main_mem,
     int obj_func_delay,
     int obj_func_dynamic_power,
     int obj_func_leakage_power,
-    int obj_func_cycle_time, //para20
     int obj_func_area,
+    int obj_func_cycle_time,
     int dev_func_delay,
     int dev_func_dynamic_power,
     int dev_func_leakage_power,
-    int dev_func_area, //para25
+    int dev_func_area,
     int dev_func_cycle_time,
-    int ed_ed2_none, // 0 - ED, 1 - ED^2, 2 - use weight and deviate
     int temp,
-    int wt, //0 - default(search across everything), 1 - global, 2 - 5% delay penalty, 3 - 10%, 4 - 20 %, 5 - 30%, 6 - low-swing
-    int data_arr_ram_cell_tech_flavor_in,//para30
+    int data_arr_ram_cell_tech_flavor_in,
     int data_arr_peri_global_tech_flavor_in,
     int tag_arr_ram_cell_tech_flavor_in,
     int tag_arr_peri_global_tech_flavor_in,
     int interconnect_projection_type_in,
-    int wire_inside_mat_type_in,//para35
+    int wire_inside_mat_type_in,
     int wire_outside_mat_type_in,
     int REPEATERS_IN_HTREE_SEGMENTS_in,
     int VERTICAL_HTREE_WIRES_OVER_THE_ARRAY_in,
     int BROADCAST_ADDR_DATAIN_OVER_VERTICAL_HTREES_in,
-    int PAGE_SIZE_BITS_in,//para40
+    int PAGE_SIZE_BITS_in,
     int BURST_LENGTH_in,
     int INTERNAL_PREFETCH_WIDTH_in,
     int force_wiretype,
     int wiretype,
-    int force_config,//para45
+    int force_config,
     int ndwl,
     int ndbl,
     int nspd,
     int ndcm,
-    int ndsam1,//para50
+    int ndsam1,
     int ndsam2,
     int ecc)
 {
   g_ip = new InputParameter();
+  //g_ip->add_ecc_b_ = true;
 
   uca_org_t fin_res;
   fin_res.valid = false;
@@ -990,7 +998,7 @@
   g_ip->nbanks              = banks;
   g_ip->out_w               = output_width;
   g_ip->specific_tag        = specific_tag;
-  if (specific_tag == 0) {
+  if (tag_width == 0) {
     g_ip->tag_w = 42;
   }
   else {
@@ -1009,7 +1017,6 @@
   g_ip->area_dev = dev_func_area;
   g_ip->cycle_time_dev    = dev_func_cycle_time;
   g_ip->temp = temp;
-  g_ip->ed = ed_ed2_none;
 
   g_ip->F_sz_nm         = tech_node;
   g_ip->F_sz_um         = tech_node / 1000;
@@ -1085,8 +1092,9 @@
 
   init_tech_params(g_ip->F_sz_um, false);
   Wire winit; // Do not delete this line. It initializes wires.
-
+  //solve(&fin_res);
   g_ip->display_ip();
+
   solve(&fin_res);
   output_UCA(&fin_res);
   output_data_csv(fin_res);
@@ -1327,9 +1335,11 @@
     num_search_ports = 0;
   nsets            = C/(B*A);
 
-  if (temp < 300 || temp > 400 || temp%10 != 0)
+  /* Leakage feedback supports full range of temperature between 300 and 400 K.
+     Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+  if(temp < 300 || temp > 400)//if (temp < 300 || temp > 400 || temp%10 != 0)
   {
-    cerr << temp << " Temperature must be between 300 and 400 Kelvin and multiple of 10." << endl;
+    cerr << temp << "Temperature must be between 300 and 400 Kelvin." << endl;
     return false;
   }
 
@@ -1346,7 +1356,6 @@
 
 void output_data_csv(const uca_org_t & fin_res)
 {
-  //TODO: the csv output should remain
   fstream file("out.csv", ios::in);
   bool    print_index = file.fail();
   file.close();
@@ -1367,25 +1376,23 @@
       file << "Output width (bits), ";
       file << "Access time (ns), ";
       file << "Random cycle time (ns), ";
-//      file << "Multisubbank interleave cycle time (ns), ";
-
-//      file << "Delay request network (ns), ";
-//      file << "Delay inside mat (ns), ";
-//      file << "Delay reply network (ns), ";
-//      file << "Tag array access time (ns), ";
-//      file << "Data array access time (ns), ";
-//      file << "Refresh period (microsec), ";
-//      file << "DRAM array availability (%), ";
+      file << "Multisubbank interleave cycle time (ns), ";
+      file << "Delay request network (ns), ";
+      file << "Delay inside mat (ns), ";
+      file << "Delay reply network (ns), ";
+      file << "Tag array access time (ns), ";
+      file << "Data array access time (ns), ";
+      file << "Refresh period (microsec), ";
+      file << "DRAM array availability (%), ";
       file << "Dynamic search energy (nJ), ";
       file << "Dynamic read energy (nJ), ";
       file << "Dynamic write energy (nJ), ";
-//      file << "Tag Dynamic read energy (nJ), ";
-//      file << "Data Dynamic read energy (nJ), ";
-//      file << "Dynamic read power (mW), ";
+      file << "Tag Dynamic read energy (nJ), ";
+      file << "Data Dynamic read energy (nJ), ";
+      file << "Dynamic read power (mW), ";
       file << "Standby leakage per bank(mW), ";
-//      file << "Leakage per bank with leak power management (mW), ";
-//      file << "Leakage per bank with leak power management (mW), ";
-//      file << "Refresh power as percentage of standby leakage, ";
+      file << "Leakage per bank with leak power management (mW), ";
+      file << "Refresh power as percentage of standby leakage, ";
       file << "Area (mm2), ";
       file << "Ndwl, ";
       file << "Ndbl, ";
@@ -1393,43 +1400,40 @@
       file << "Ndcm, ";
       file << "Ndsam_level_1, ";
       file << "Ndsam_level_2, ";
-      file << "Data arrary area efficiency %, ";
       file << "Ntwl, ";
       file << "Ntbl, ";
       file << "Ntspd, ";
       file << "Ntcm, ";
       file << "Ntsam_level_1, ";
       file << "Ntsam_level_2, ";
-      file << "Tag arrary area efficiency %, ";
-
-//      file << "Resistance per unit micron (ohm-micron), ";
-//      file << "Capacitance per unit micron (fF per micron), ";
-//      file << "Unit-length wire delay (ps), ";
-//      file << "FO4 delay (ps), ";
-//      file << "delay route to bank (including crossb delay) (ps), ";
-//      file << "Crossbar delay (ps), ";
-//      file << "Dyn read energy per access from closed page (nJ), ";
-//      file << "Dyn read energy per access from open page (nJ), ";
-//      file << "Leak power of an subbank with page closed (mW), ";
-//      file << "Leak power of a subbank with page  open (mW), ";
-//      file << "Leak power of request and reply networks (mW), ";
-//      file << "Number of subbanks, ";
-//      file << "Page size in bits, ";
-//      file << "Activate power, ";
-//      file << "Read power, ";
-//      file << "Write power, ";
-//      file << "Precharge power, ";
-//      file << "tRCD, ";
-//      file << "CAS latency, ";
-//      file << "Precharge delay, ";
-//      file << "Perc dyn energy bitlines, ";
-//      file << "perc dyn energy wordlines, ";
-//      file << "perc dyn energy outside mat, ";
-//      file << "Area opt (perc), ";
-//      file << "Delay opt (perc), ";
-//      file << "Repeater opt (perc), ";
-//      file << "Aspect ratio";
-      file << endl;
+      file << "Area efficiency, ";
+      file << "Resistance per unit micron (ohm-micron), ";
+      file << "Capacitance per unit micron (fF per micron), ";
+      file << "Unit-length wire delay (ps), ";
+      file << "FO4 delay (ps), ";
+      file << "delay route to bank (including crossb delay) (ps), ";
+      file << "Crossbar delay (ps), ";
+      file << "Dyn read energy per access from closed page (nJ), ";
+      file << "Dyn read energy per access from open page (nJ), ";
+      file << "Leak power of an subbank with page closed (mW), ";
+      file << "Leak power of a subbank with page  open (mW), ";
+      file << "Leak power of request and reply networks (mW), ";
+      file << "Number of subbanks, ";
+      file << "Page size in bits, ";
+      file << "Activate power, ";
+      file << "Read power, ";
+      file << "Write power, ";
+      file << "Precharge power, ";
+      file << "tRCD, ";
+      file << "CAS latency, ";
+      file << "Precharge delay, ";
+      file << "Perc dyn energy bitlines, ";
+      file << "perc dyn energy wordlines, ";
+      file << "perc dyn energy outside mat, ";
+      file << "Area opt (perc), ";
+      file << "Delay opt (perc), ";
+      file << "Repeater opt (perc), ";
+      file << "Aspect ratio" << endl;
     }
     file << g_ip->F_sz_nm << ", ";
     file << g_ip->cache_sz << ", ";
@@ -1438,62 +1442,60 @@
     file << g_ip->out_w << ", ";
     file << fin_res.access_time*1e+9 << ", ";
     file << fin_res.cycle_time*1e+9 << ", ";
-//    file << fin_res.data_array2->multisubbank_interleave_cycle_time*1e+9 << ", ";
-//    file << fin_res.data_array2->delay_request_network*1e+9 << ", ";
-//    file << fin_res.data_array2->delay_inside_mat*1e+9 <<  ", ";
-//    file << fin_res.data_array2.delay_reply_network*1e+9 << ", ";
-
-//    if (!(g_ip->fully_assoc || g_ip->pure_cam || g_ip->pure_ram))
-//        {
-//    	  file << fin_res.tag_array2->access_time*1e+9 << ", ";
-//        }
-//    else
-//    {
-//    	file << 0 << ", ";
-//    }
-//    file << fin_res.data_array2->access_time*1e+9 << ", ";
-//    file << fin_res.data_array2->dram_refresh_period*1e+6 << ", ";
-//    file << fin_res.data_array2->dram_array_availability <<  ", ";
+    file << fin_res.data_array.multisubbank_interleave_cycle_time*1e+9 << ", ";
+    file << fin_res.data_array.delay_request_network*1e+9 << ", ";
+    file << fin_res.data_array.delay_inside_mat*1e+9 <<  ", ";
+    file << fin_res.data_array.delay_reply_network*1e+9 << ", ";
+
+    if (!(g_ip->fully_assoc || g_ip->pure_cam || g_ip->pure_ram))
+        {
+    	  file << fin_res.tag_array2->access_time*1e+9 << ", ";
+        }
+    else
+    {
+    	file << 0 << ", ";
+    }
+    file << fin_res.data_array2->access_time*1e+9 << ", ";
+    file << fin_res.data_array.dram_refresh_period*1e+6 << ", ";
+    file << fin_res.data_array.dram_array_availability <<  ", ";
     if (g_ip->fully_assoc || g_ip->pure_cam)
     {
     	file << fin_res.power.searchOp.dynamic*1e+9 << ", ";
     }
     	else
     {
-    		file << "N/A" << ", ";
+    		file << 0 << ", ";
     }
     file << fin_res.power.readOp.dynamic*1e+9 << ", ";
     file << fin_res.power.writeOp.dynamic*1e+9 << ", ";
-//    if (!(g_ip->fully_assoc || g_ip->pure_cam || g_ip->pure_ram))
-//        {
-//        	file << fin_res.tag_array2->power.readOp.dynamic*1e+9 << ", ";
-//        }
-//        	else
-//        {
-//        		file << "NA" << ", ";
-//        }
-//    file << fin_res.data_array2->power.readOp.dynamic*1e+9 << ", ";
-//    if (g_ip->fully_assoc || g_ip->pure_cam)
-//        {
-//    	    file << fin_res.power.searchOp.dynamic*1000/fin_res.cycle_time << ", ";
-//        }
-//        	else
-//        {
-//        	file << fin_res.power.readOp.dynamic*1000/fin_res.cycle_time << ", ";
-//        }
-
-    file <<( fin_res.power.readOp.leakage + fin_res.power.readOp.gate_leakage )*1000 << ", ";
-//    file << fin_res.leak_power_with_sleep_transistors_in_mats*1000 << ", ";
-//    file << fin_res.data_array.refresh_power / fin_res.data_array.total_power.readOp.leakage << ", ";
-    file << fin_res.area*1e-6 << ", ";
+    if (!(g_ip->fully_assoc || g_ip->pure_cam || g_ip->pure_ram))
+        {
+        	file << fin_res.tag_array2->power.readOp.dynamic*1e+9 << ", ";
+        }
+        	else
+        {
+        		file << 0 << ", ";
+        }
+    file << fin_res.data_array2->power.readOp.dynamic*1e+9 << ", ";
+    if (g_ip->fully_assoc || g_ip->pure_cam)
+        {
+    	    file << fin_res.power.searchOp.dynamic*1000/fin_res.cycle_time << ", ";
+        }
+        	else
+        {
+        	file << fin_res.power.readOp.dynamic*1000/fin_res.cycle_time << ", ";
+        }
 
+    file << fin_res.power.readOp.leakage*1000 << ", ";
+    file << fin_res.leak_power_with_sleep_transistors_in_mats*1000 << ", ";
+    file << fin_res.data_array.refresh_power / fin_res.data_array.total_power.readOp.leakage << ", ";
+    file << fin_res.area*1e-6 << ", ";
     file << fin_res.data_array2->Ndwl << ", ";
     file << fin_res.data_array2->Ndbl << ", ";
     file << fin_res.data_array2->Nspd << ", ";
     file << fin_res.data_array2->deg_bl_muxing << ", ";
     file << fin_res.data_array2->Ndsam_lev_1 << ", ";
     file << fin_res.data_array2->Ndsam_lev_2 << ", ";
-    file << fin_res.data_array2->area_efficiency << ", ";
     if (!(g_ip->fully_assoc || g_ip->pure_cam || g_ip->pure_ram))
     {
     file << fin_res.tag_array2->Ndwl << ", ";
@@ -1502,41 +1504,38 @@
     file << fin_res.tag_array2->deg_bl_muxing << ", ";
     file << fin_res.tag_array2->Ndsam_lev_1 << ", ";
     file << fin_res.tag_array2->Ndsam_lev_2 << ", ";
-    file << fin_res.tag_array2->area_efficiency << ", ";
     }
     else
     {
-    	file << "N/A" << ", ";
-    	file << "N/A"<< ", ";
-    	file << "N/A" << ", ";
-    	file << "N/A" << ", ";
-    	file << "N/A" << ", ";
-    	file << "N/A" << ", ";
-    	file << "N/A" << ", ";
-    }
-
-//    file << g_tp.wire_inside_mat.R_per_um << ", ";
-//    file << g_tp.wire_inside_mat.C_per_um / 1e-15 << ", ";
-//    file << g_tp.unit_len_wire_del / 1e-12 << ", ";
-//    file << g_tp.FO4 / 1e-12 << ", ";
-//    file << fin_res.data_array.delay_route_to_bank / 1e-9 << ", ";
-//    file << fin_res.data_array.delay_crossbar / 1e-9 << ", ";
-//    file << fin_res.data_array.dyn_read_energy_from_closed_page / 1e-9 << ", ";
-//    file << fin_res.data_array.dyn_read_energy_from_open_page / 1e-9 << ", ";
-//    file << fin_res.data_array.leak_power_subbank_closed_page / 1e-3 << ", ";
-//    file << fin_res.data_array.leak_power_subbank_open_page / 1e-3 << ", ";
-//    file << fin_res.data_array.leak_power_request_and_reply_networks / 1e-3 << ", ";
-//    file << fin_res.data_array.number_subbanks << ", " ;
-//    file << fin_res.data_array.page_size_in_bits << ", " ;
-//    file << fin_res.data_array.activate_energy * 1e9 << ", " ;
-//    file << fin_res.data_array.read_energy * 1e9 << ", " ;
-//    file << fin_res.data_array.write_energy * 1e9 << ", " ;
-//    file << fin_res.data_array.precharge_energy * 1e9 << ", " ;
-//    file << fin_res.data_array.trcd * 1e9 << ", " ;
-//    file << fin_res.data_array.cas_latency * 1e9 << ", " ;
-//    file << fin_res.data_array.precharge_delay * 1e9 << ", " ;
-//    file << fin_res.data_array.all_banks_height / fin_res.data_array.all_banks_width;
-    file<<endl;
+    	file << 0 << ", ";
+    	file << 0<< ", ";
+    	file << 0 << ", ";
+    	file << 0 << ", ";
+    	file << 0 << ", ";
+    	file << 0 << ", ";
+    }
+    file << fin_res.area_efficiency << ", ";
+    file << g_tp.wire_inside_mat.R_per_um << ", ";
+    file << g_tp.wire_inside_mat.C_per_um / 1e-15 << ", ";
+    file << g_tp.unit_len_wire_del / 1e-12 << ", ";
+    file << g_tp.FO4 / 1e-12 << ", ";
+    file << fin_res.data_array.delay_route_to_bank / 1e-9 << ", ";
+    file << fin_res.data_array.delay_crossbar / 1e-9 << ", ";
+    file << fin_res.data_array.dyn_read_energy_from_closed_page / 1e-9 << ", ";
+    file << fin_res.data_array.dyn_read_energy_from_open_page / 1e-9 << ", ";
+    file << fin_res.data_array.leak_power_subbank_closed_page / 1e-3 << ", ";
+    file << fin_res.data_array.leak_power_subbank_open_page / 1e-3 << ", ";
+    file << fin_res.data_array.leak_power_request_and_reply_networks / 1e-3 << ", ";
+    file << fin_res.data_array.number_subbanks << ", " ;
+    file << fin_res.data_array.page_size_in_bits << ", " ;
+    file << fin_res.data_array.activate_energy * 1e9 << ", " ;
+    file << fin_res.data_array.read_energy * 1e9 << ", " ;
+    file << fin_res.data_array.write_energy * 1e9 << ", " ;
+    file << fin_res.data_array.precharge_energy * 1e9 << ", " ;
+    file << fin_res.data_array.trcd * 1e9 << ", " ;
+    file << fin_res.data_array.cas_latency * 1e9 << ", " ;
+    file << fin_res.data_array.precharge_delay * 1e9 << ", " ;
+    file << fin_res.data_array.all_banks_height / fin_res.data_array.all_banks_width << endl;
   }
   file.close();
 }
@@ -1743,6 +1742,9 @@
       fr->data_array2->delay_subarray_output_driver * 1e9 +
       fr->data_array2->delay_dout_htree * 1e9 << endl;
 
+    cout <<  "\tH-tree output delay (ns): " <<
+      fr->data_array2->delay_subarray_output_driver * 1e9 +
+      fr->data_array2->delay_dout_htree * 1e9 << endl;
     if ((!(g_ip->pure_ram|| g_ip->pure_cam || g_ip->fully_assoc)) && !g_ip->is_main_mem)
     {
       /* tag array stats */
@@ -1782,25 +1784,12 @@
     	      fr->data_array2->power.readOp.dynamic * 1e9 << endl;
     	cout << "\tTotal leakage read/write power of a bank (mW): " <<
     	        fr->data_array2->power.readOp.leakage * 1e3 << endl;
-
     	cout << "\tTotal energy in H-tree (that includes both "
     	      "address and data transfer) (nJ): " <<
     	        (fr->data_array2->power_addr_input_htree.readOp.dynamic +
     	         fr->data_array2->power_data_output_htree.readOp.dynamic +
     	         fr->data_array2->power_routing_to_bank.readOp.dynamic) * 1e9 << endl;
 
-    	cout << "\tTotal leakage power in H-tree (that includes both "
-    	      "address and data network) ((mW)): " <<
-    	        (fr->data_array2->power_addr_input_htree.readOp.leakage +
-    	         fr->data_array2->power_data_output_htree.readOp.leakage +
-    	         fr->data_array2->power_routing_to_bank.readOp.leakage) * 1e3 << endl;
-
-    	cout << "\tTotal gate leakage power in H-tree (that includes both "
-    	      "address and data network) ((mW)): " <<
-    	        (fr->data_array2->power_addr_input_htree.readOp.gate_leakage +
-    	         fr->data_array2->power_data_output_htree.readOp.gate_leakage +
-    	         fr->data_array2->power_routing_to_bank.readOp.gate_leakage) * 1e3 << endl;
-
     	cout << "\tOutput Htree inside bank Energy (nJ): " <<
     	   fr->data_array2->power_data_output_htree.readOp.dynamic * 1e9 << endl;
     	cout <<  "\tDecoder (nJ): " <<
@@ -1887,7 +1876,7 @@
     	        cout <<  "\tSub-array output driver (nJ): " <<
     	          	   fr->data_array2->power_output_drivers_at_subarray.readOp.dynamic * 1e9 << endl;
 
-            	cout << endl <<"  Total leakage power of a bank (mW): " <<
+            	cout << endl <<"  Total leakage read/write power of a bank (mW): " <<
                       fr->data_array2->power.readOp.leakage * 1e3 << endl;
         }
         else
@@ -1953,7 +1942,7 @@
 	        cout <<  "\tSub-array output driver (nJ): " <<
 	          	   fr->data_array2->power_output_drivers_at_subarray.readOp.dynamic * 1e9 << endl;
 
-        	cout << endl <<"  Total leakage power of a bank (mW): " <<
+        	cout << endl <<"  Total leakage read/write power of a bank (mW): " <<
                   fr->data_array2->power.readOp.leakage * 1e3 << endl;
       }
 
@@ -1970,18 +1959,6 @@
            fr->tag_array2->power_data_output_htree.readOp.dynamic +
            fr->tag_array2->power_routing_to_bank.readOp.dynamic) * 1e9 << endl;
 
-      cout << "\tTotal leakage power in H-tree (that includes both "
-  	      "address and data network) ((mW)): " <<
-  	        (fr->tag_array2->power_addr_input_htree.readOp.leakage +
-  	         fr->tag_array2->power_data_output_htree.readOp.leakage +
-  	         fr->tag_array2->power_routing_to_bank.readOp.leakage) * 1e3 << endl;
-
-  	  cout << "\tTotal gate leakage power in H-tree (that includes both "
-  	      "address and data network) ((mW)): " <<
-  	        (fr->tag_array2->power_addr_input_htree.readOp.gate_leakage +
-  	         fr->tag_array2->power_data_output_htree.readOp.gate_leakage +
-  	         fr->tag_array2->power_routing_to_bank.readOp.gate_leakage) * 1e3 << endl;
-
       cout << "\tOutput Htree inside a bank Energy (nJ): " <<
         fr->tag_array2->power_data_output_htree.readOp.dynamic * 1e9 << endl;
       cout <<  "\tDecoder (nJ): " <<
@@ -2335,17 +2312,22 @@
   return fin_res;
 }
 
-void reconfigure(InputParameter *local_interface, uca_org_t *fin_res)
+/* This is runtime leakage feedback control. It updates the leakage power for the given temperature.
+   This function copies the input parameters to global interface and initializes technology parameters.
+   The optimum array structure is directly found in update() function.
+   Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+void reconfigure(InputParameter *local_interface, uca_org_t *fin_res, TechnologyParameter *tech)
 {
   // Copy the InputParameter to global interface (g_ip) and do error checking.
   g_ip = local_interface;
   g_ip->error_checking();
 
   // Initialize technology parameters
-  init_tech_params(g_ip->F_sz_um,false);
+  //init_tech_params(g_ip->F_sz_um,false);
+  g_tp = *tech;
 
   Wire winit; // Do not delete this line. It initializes wires.
 
   // This corresponds to solve() in the initialization process.
-  update(fin_res);
+  update(fin_res,tech);
 }
diff -Nur McPAT08release/cacti/nuca.cc ../McPAT08release/cacti/nuca.cc
--- McPAT08release/cacti/nuca.cc	2012-10-02 10:45:00.000000000 -0400
+++ ../McPAT08release/cacti/nuca.cc	2015-04-24 21:42:11.000000000 -0400
@@ -1,33 +1,43 @@
-/*****************************************************************************
- *                                McPAT/CACTI
- *                      SOFTWARE LICENSE AGREEMENT
- *            Copyright 2012 Hewlett-Packard Development Company, L.P.
- *                          All Rights Reserved
+/*------------------------------------------------------------
+ *                              CACTI 6.5
+ *         Copyright 2008 Hewlett-Packard Development Corporation
+ *                         All Rights Reserved
  *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met: redistributions of source code must retain the above copyright
- * notice, this list of conditions and the following disclaimer;
- * redistributions in binary form must reproduce the above copyright
- * notice, this list of conditions and the following disclaimer in the
- * documentation and/or other materials provided with the distribution;
- * neither the name of the copyright holders nor the names of its
- * contributors may be used to endorse or promote products derived from
- * this software without specific prior written permission.
-
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.”
+ * Permission to use, copy, and modify this software and its documentation is
+ * hereby granted only under the following terms and conditions.  Both the
+ * above copyright notice and this permission notice must appear in all copies
+ * of the software, derivative works or modified versions, and any portions
+ * thereof, and both notices must appear in supporting documentation.
  *
- ***************************************************************************/
+ * Users of this software agree to the terms and conditions set forth herein, and
+ * hereby grant back to Hewlett-Packard Company and its affiliated companies ("HP")
+ * a non-exclusive, unrestricted, royalty-free right and license under any changes,
+ * enhancements or extensions  made to the core functions of the software, including
+ * but not limited to those affording compatibility with other hardware or software
+ * environments, but excluding applications which incorporate this software.
+ * Users further agree to use their best efforts to return to HP any such changes,
+ * enhancements or extensions that they make and inform HP of noteworthy uses of
+ * this software.  Correspondence should be provided to HP at:
+ *
+ *                       Director of Intellectual Property Licensing
+ *                       Office of Strategy and Technology
+ *                       Hewlett-Packard Company
+ *                       1501 Page Mill Road
+ *                       Palo Alto, California  94304
+ *
+ * This software may be distributed (but not offered for sale or transferred
+ * for compensation) to third parties, provided such third parties agree to
+ * abide by the terms and conditions of this notice.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" AND HP DISCLAIMS ALL
+ * WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES
+ * OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL HP
+ * CORPORATION BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
+ * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
+ * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
+ * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
+ * SOFTWARE.
+ *------------------------------------------------------------*/
 
 
 
@@ -43,7 +53,7 @@
 int cont_stats[2 /*l2 or l3*/][5/* cores */][ROUTER_TYPES][7 /*banks*/][8 /* cycle time */];
 
   Nuca::Nuca(
-      TechnologyParameter::DeviceType *dt = &(g_tp.peri_global)
+      TechnologyParameter::DeviceType *dt
       ):deviceType(dt)
 {
   init_cont();
diff -Nur McPAT08release/cacti/nuca.h ../McPAT08release/cacti/nuca.h
--- McPAT08release/cacti/nuca.h	2012-10-02 10:45:00.000000000 -0400
+++ ../McPAT08release/cacti/nuca.h	2015-04-24 21:42:11.000000000 -0400
@@ -1,33 +1,43 @@
-/*****************************************************************************
- *                                McPAT/CACTI
- *                      SOFTWARE LICENSE AGREEMENT
- *            Copyright 2012 Hewlett-Packard Development Company, L.P.
- *                          All Rights Reserved
+/*------------------------------------------------------------
+ *                              CACTI 6.5
+ *         Copyright 2008 Hewlett-Packard Development Corporation
+ *                         All Rights Reserved
  *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met: redistributions of source code must retain the above copyright
- * notice, this list of conditions and the following disclaimer;
- * redistributions in binary form must reproduce the above copyright
- * notice, this list of conditions and the following disclaimer in the
- * documentation and/or other materials provided with the distribution;
- * neither the name of the copyright holders nor the names of its
- * contributors may be used to endorse or promote products derived from
- * this software without specific prior written permission.
-
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.”
+ * Permission to use, copy, and modify this software and its documentation is
+ * hereby granted only under the following terms and conditions.  Both the
+ * above copyright notice and this permission notice must appear in all copies
+ * of the software, derivative works or modified versions, and any portions
+ * thereof, and both notices must appear in supporting documentation.
  *
- ***************************************************************************/
+ * Users of this software agree to the terms and conditions set forth herein, and
+ * hereby grant back to Hewlett-Packard Company and its affiliated companies ("HP")
+ * a non-exclusive, unrestricted, royalty-free right and license under any changes,
+ * enhancements or extensions  made to the core functions of the software, including
+ * but not limited to those affording compatibility with other hardware or software
+ * environments, but excluding applications which incorporate this software.
+ * Users further agree to use their best efforts to return to HP any such changes,
+ * enhancements or extensions that they make and inform HP of noteworthy uses of
+ * this software.  Correspondence should be provided to HP at:
+ *
+ *                       Director of Intellectual Property Licensing
+ *                       Office of Strategy and Technology
+ *                       Hewlett-Packard Company
+ *                       1501 Page Mill Road
+ *                       Palo Alto, California  94304
+ *
+ * This software may be distributed (but not offered for sale or transferred
+ * for compensation) to third parties, provided such third parties agree to
+ * abide by the terms and conditions of this notice.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" AND HP DISCLAIMS ALL
+ * WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES
+ * OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL HP
+ * CORPORATION BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
+ * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
+ * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
+ * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
+ * SOFTWARE.
+ *------------------------------------------------------------*/
 
 
 #ifndef __NUCA_H__
@@ -76,7 +86,7 @@
 {
   public:
     Nuca(
-        TechnologyParameter::DeviceType *dt);
+        TechnologyParameter::DeviceType *dt = &(g_tp.peri_global));
     void print_router();
     ~Nuca();
     void sim_nuca();
diff -Nur McPAT08release/cacti/router.cc ../McPAT08release/cacti/router.cc
--- McPAT08release/cacti/router.cc	2012-10-02 10:45:00.000000000 -0400
+++ ../McPAT08release/cacti/router.cc	2015-04-24 21:42:11.000000000 -0400
@@ -1,33 +1,43 @@
-/*****************************************************************************
- *                                McPAT/CACTI
- *                      SOFTWARE LICENSE AGREEMENT
- *            Copyright 2012 Hewlett-Packard Development Company, L.P.
- *                          All Rights Reserved
+/*------------------------------------------------------------
+ *                              CACTI 6.5
+ *         Copyright 2008 Hewlett-Packard Development Corporation
+ *                         All Rights Reserved
  *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met: redistributions of source code must retain the above copyright
- * notice, this list of conditions and the following disclaimer;
- * redistributions in binary form must reproduce the above copyright
- * notice, this list of conditions and the following disclaimer in the
- * documentation and/or other materials provided with the distribution;
- * neither the name of the copyright holders nor the names of its
- * contributors may be used to endorse or promote products derived from
- * this software without specific prior written permission.
-
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.”
+ * Permission to use, copy, and modify this software and its documentation is
+ * hereby granted only under the following terms and conditions.  Both the
+ * above copyright notice and this permission notice must appear in all copies
+ * of the software, derivative works or modified versions, and any portions
+ * thereof, and both notices must appear in supporting documentation.
  *
- ***************************************************************************/
+ * Users of this software agree to the terms and conditions set forth herein, and
+ * hereby grant back to Hewlett-Packard Company and its affiliated companies ("HP")
+ * a non-exclusive, unrestricted, royalty-free right and license under any changes,
+ * enhancements or extensions  made to the core functions of the software, including
+ * but not limited to those affording compatibility with other hardware or software
+ * environments, but excluding applications which incorporate this software.
+ * Users further agree to use their best efforts to return to HP any such changes,
+ * enhancements or extensions that they make and inform HP of noteworthy uses of
+ * this software.  Correspondence should be provided to HP at:
+ *
+ *                       Director of Intellectual Property Licensing
+ *                       Office of Strategy and Technology
+ *                       Hewlett-Packard Company
+ *                       1501 Page Mill Road
+ *                       Palo Alto, California  94304
+ *
+ * This software may be distributed (but not offered for sale or transferred
+ * for compensation) to third parties, provided such third parties agree to
+ * abide by the terms and conditions of this notice.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" AND HP DISCLAIMS ALL
+ * WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES
+ * OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL HP
+ * CORPORATION BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
+ * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
+ * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
+ * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
+ * SOFTWARE.
+ *------------------------------------------------------------*/
 
 
 
@@ -184,8 +194,6 @@
   dyn_p.num_se_rd_ports =0;
   dyn_p.num_search_ports =0;
 
-
-
   dyn_p.cell.h = g_tp.sram.b_h + 2 * g_tp.wire_outside_mat.pitch * (dyn_p.num_wr_ports +
       dyn_p.num_rw_ports - 1 + dyn_p.num_rd_ports);
   dyn_p.cell.w = g_tp.sram.b_w + 2 * g_tp.wire_outside_mat.pitch * (dyn_p.num_rw_ports - 1 +
@@ -309,3 +317,105 @@
 
 }
 
+/* This is runtime energy update for the change of parameters.
+   Note that Router is not a standalone structure. Leakage feedback of the router must follow the
+   initialization of input and technology parameters in the higher level class.
+   Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+void Router::update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech)
+{
+  power.reset();
+  
+  Vdd = g_tp.peri_global.Vdd;
+
+  // Router does not maintain buffer structure. It needs to be restored in order for power update.
+  DynamicParameter dyn_p;
+  dyn_p.is_tag      = false;
+  dyn_p.pure_cam    = false;
+  dyn_p.fully_assoc = false;
+  dyn_p.pure_ram    = true;
+  dyn_p.is_dram     = false;
+  dyn_p.is_main_mem = false;
+  dyn_p.num_subarrays = 1;
+  dyn_p.num_mats = 1;
+  dyn_p.Ndbl = 1;
+  dyn_p.Ndwl = 1;
+  dyn_p.Nspd = 1;
+  dyn_p.deg_bl_muxing = 1;
+  dyn_p.deg_senseamp_muxing_non_associativity = 1;
+  dyn_p.Ndsam_lev_1 = 1;
+  dyn_p.Ndsam_lev_2 = 1;
+  dyn_p.Ndcm = 1;
+  dyn_p.number_addr_bits_mat = 8;
+  dyn_p.number_way_select_signals_mat = 1;
+  dyn_p.number_subbanks_decode = 0;
+  dyn_p.num_act_mats_hor_dir = 1;
+  dyn_p.V_b_sense = Vdd; // FIXME check power calc.
+  dyn_p.ram_cell_tech_type = 0;
+  dyn_p.num_r_subarray = (int) vc_buffer_size;
+  dyn_p.num_c_subarray = (int) flit_size * (int) vc_count;
+  dyn_p.num_mats_h_dir = 1;
+  dyn_p.num_mats_v_dir = 1;
+  dyn_p.num_do_b_subbank = (int)flit_size;
+  dyn_p.num_di_b_subbank = (int)flit_size;
+  dyn_p.num_do_b_mat = (int) flit_size;
+  dyn_p.num_di_b_mat = (int) flit_size;
+  dyn_p.num_do_b_mat = (int) flit_size;
+  dyn_p.num_di_b_mat = (int) flit_size;
+  dyn_p.num_do_b_bank_per_port = (int) flit_size;
+  dyn_p.num_di_b_bank_per_port = (int) flit_size;
+  dyn_p.out_w = (int) flit_size;
+
+  dyn_p.use_inp_params = 1;
+  dyn_p.num_wr_ports = (unsigned int) vc_count;
+  dyn_p.num_rd_ports = 1;//(unsigned int) vc_count;//based on Bill Dally's book
+  dyn_p.num_rw_ports = 0;
+  dyn_p.num_se_rd_ports =0;
+  dyn_p.num_search_ports =0;
+
+  dyn_p.cell.h = g_tp.sram.b_h + 2 * g_tp.wire_outside_mat.pitch * (dyn_p.num_wr_ports +
+      dyn_p.num_rw_ports - 1 + dyn_p.num_rd_ports);
+  dyn_p.cell.w = g_tp.sram.b_w + 2 * g_tp.wire_outside_mat.pitch * (dyn_p.num_rw_ports - 1 +
+      (dyn_p.num_rd_ports - dyn_p.num_se_rd_ports) +
+      dyn_p.num_wr_ports) + g_tp.wire_outside_mat.pitch * dyn_p.num_se_rd_ports;
+
+  // Re-create the buffer and compute power
+  Mat buff(dyn_p);
+  buff.compute_delays(0);
+  buff.compute_power_energy();
+  buffer.power.readOp  = buff.power.readOp;
+  buffer.power.writeOp = buffer.power.readOp; //FIXME
+
+  // Re-create the crossbar and compute power
+  if (1) {
+    Crossbar c_b(I, O, flit_size);
+    c_b.compute_power();
+    crossbar.power.readOp.dynamic = c_b.power.readOp.dynamic;
+    crossbar.power.readOp.leakage = c_b.power.readOp.leakage;
+    crossbar.power.readOp.gate_leakage = c_b.power.readOp.gate_leakage;
+  }
+  else {
+    crossbar.power.readOp.dynamic = tr_crossbar_power();
+    crossbar.power.readOp.leakage = flit_size * I * O *
+        cmos_Isub_leakage(NTtr*g_tp.min_w_nmos_, PTtr*min_w_pmos, 1, tg);
+    crossbar.power.readOp.gate_leakage = flit_size * I * O *
+        cmos_Ig_leakage(NTtr*g_tp.min_w_nmos_, PTtr*min_w_pmos, 1, tg);
+  }
+
+  // Re-create the arbiter and compute power
+  Arbiter vcarb(vc_count, flit_size, buffer.area.w);
+  Arbiter cbarb(I, flit_size, crossbar.area.w);
+  vcarb.compute_power();
+  cbarb.compute_power();
+  arbiter.power.readOp.dynamic = vcarb.power.readOp.dynamic * I +
+    cbarb.power.readOp.dynamic * O;
+  arbiter.power.readOp.leakage = vcarb.power.readOp.leakage * I +
+    cbarb.power.readOp.leakage * O;
+  arbiter.power.readOp.gate_leakage = vcarb.power.readOp.gate_leakage * I +
+    cbarb.power.readOp.gate_leakage * O;
+
+  power.readOp.dynamic = ((buffer.power.readOp.dynamic+buffer.power.writeOp.dynamic) +
+		  crossbar.power.readOp.dynamic +
+		  arbiter.power.readOp.dynamic)*MIN(I, O)*M;
+  double pppm_t[4]    = {1,I,I,1};
+  power = power + (buffer.power*pppm_t + crossbar.power + arbiter.power)*pppm_lkg;  
+}
\ No newline at end of file
diff -Nur McPAT08release/cacti/router.h ../McPAT08release/cacti/router.h
--- McPAT08release/cacti/router.h	2012-10-02 10:45:00.000000000 -0400
+++ ../McPAT08release/cacti/router.h	2015-04-24 21:42:11.000000000 -0400
@@ -1,33 +1,43 @@
-/*****************************************************************************
- *                                McPAT/CACTI
- *                      SOFTWARE LICENSE AGREEMENT
- *            Copyright 2012 Hewlett-Packard Development Company, L.P.
- *                          All Rights Reserved
+/*------------------------------------------------------------
+ *                              CACTI 6.5
+ *         Copyright 2008 Hewlett-Packard Development Corporation
+ *                         All Rights Reserved
  *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met: redistributions of source code must retain the above copyright
- * notice, this list of conditions and the following disclaimer;
- * redistributions in binary form must reproduce the above copyright
- * notice, this list of conditions and the following disclaimer in the
- * documentation and/or other materials provided with the distribution;
- * neither the name of the copyright holders nor the names of its
- * contributors may be used to endorse or promote products derived from
- * this software without specific prior written permission.
-
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.”
+ * Permission to use, copy, and modify this software and its documentation is
+ * hereby granted only under the following terms and conditions.  Both the
+ * above copyright notice and this permission notice must appear in all copies
+ * of the software, derivative works or modified versions, and any portions
+ * thereof, and both notices must appear in supporting documentation.
  *
- ***************************************************************************/
+ * Users of this software agree to the terms and conditions set forth herein, and
+ * hereby grant back to Hewlett-Packard Company and its affiliated companies ("HP")
+ * a non-exclusive, unrestricted, royalty-free right and license under any changes,
+ * enhancements or extensions  made to the core functions of the software, including
+ * but not limited to those affording compatibility with other hardware or software
+ * environments, but excluding applications which incorporate this software.
+ * Users further agree to use their best efforts to return to HP any such changes,
+ * enhancements or extensions that they make and inform HP of noteworthy uses of
+ * this software.  Correspondence should be provided to HP at:
+ *
+ *                       Director of Intellectual Property Licensing
+ *                       Office of Strategy and Technology
+ *                       Hewlett-Packard Company
+ *                       1501 Page Mill Road
+ *                       Palo Alto, California  94304
+ *
+ * This software may be distributed (but not offered for sale or transferred
+ * for compensation) to third parties, provided such third parties agree to
+ * abide by the terms and conditions of this notice.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" AND HP DISCLAIMS ALL
+ * WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES
+ * OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL HP
+ * CORPORATION BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
+ * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
+ * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
+ * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
+ * SOFTWARE.
+ *------------------------------------------------------------*/
 
 
 
@@ -70,6 +80,10 @@
     double vc_count;
     double vc_buffer_size; /* vc size = vc_buffer_size * flit_size */
 
+    /* This is runtime power update for the change of parameters.
+       Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+    void update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech);
+
   private:
 	TechnologyParameter::DeviceType *deviceType;
 	double FREQUENCY; // move this to config file --TODO
diff -Nur McPAT08release/cacti/technology.cc ../McPAT08release/cacti/technology.cc
--- McPAT08release/cacti/technology.cc	2012-10-02 10:45:00.000000000 -0400
+++ ../McPAT08release/cacti/technology.cc	2015-04-24 21:42:11.000000000 -0400
@@ -1,33 +1,43 @@
-/*****************************************************************************
- *                                McPAT/CACTI
- *                      SOFTWARE LICENSE AGREEMENT
- *            Copyright 2012 Hewlett-Packard Development Company, L.P.
- *                          All Rights Reserved
+/*------------------------------------------------------------
+ *                              CACTI 6.5
+ *         Copyright 2008 Hewlett-Packard Development Corporation
+ *                         All Rights Reserved
  *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met: redistributions of source code must retain the above copyright
- * notice, this list of conditions and the following disclaimer;
- * redistributions in binary form must reproduce the above copyright
- * notice, this list of conditions and the following disclaimer in the
- * documentation and/or other materials provided with the distribution;
- * neither the name of the copyright holders nor the names of its
- * contributors may be used to endorse or promote products derived from
- * this software without specific prior written permission.
-
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.”
+ * Permission to use, copy, and modify this software and its documentation is
+ * hereby granted only under the following terms and conditions.  Both the
+ * above copyright notice and this permission notice must appear in all copies
+ * of the software, derivative works or modified versions, and any portions
+ * thereof, and both notices must appear in supporting documentation.
  *
- ***************************************************************************/
+ * Users of this software agree to the terms and conditions set forth herein, and
+ * hereby grant back to Hewlett-Packard Company and its affiliated companies ("HP")
+ * a non-exclusive, unrestricted, royalty-free right and license under any changes,
+ * enhancements or extensions  made to the core functions of the software, including
+ * but not limited to those affording compatibility with other hardware or software
+ * environments, but excluding applications which incorporate this software.
+ * Users further agree to use their best efforts to return to HP any such changes,
+ * enhancements or extensions that they make and inform HP of noteworthy uses of
+ * this software.  Correspondence should be provided to HP at:
+ *
+ *                       Director of Intellectual Property Licensing
+ *                       Office of Strategy and Technology
+ *                       Hewlett-Packard Company
+ *                       1501 Page Mill Road
+ *                       Palo Alto, California  94304
+ *
+ * This software may be distributed (but not offered for sale or transferred
+ * for compensation) to third parties, provided such third parties agree to
+ * abide by the terms and conditions of this notice.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" AND HP DISCLAIMS ALL
+ * WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES
+ * OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL HP
+ * CORPORATION BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
+ * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
+ * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
+ * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
+ * SOFTWARE.
+ *------------------------------------------------------------*/
 
 
 #include "basic_circuit.h"
@@ -132,11 +142,11 @@
        exit(0);
     }
   }
-//  else if (technology < 17 && technology > 15)
-//  {
-//    tech_lo = 16;
-//    tech_hi = 16;
-//  }
+  else if (technology < 17 && technology > 15)
+  {
+    tech_lo = 16;
+    tech_hi = 16;
+  }
   else if (technology < 180 && technology > 90)
     {
       tech_lo = 180;
@@ -162,14 +172,14 @@
       tech_lo = 32;
       tech_hi = 22;
     }
-//  else if (technology < 22 && technology > 16)
-//    {
-//      tech_lo = 22;
-//      tech_hi = 16;
-//    }
+  else if (technology < 22 && technology > 16)
+    {
+      tech_lo = 22;
+      tech_hi = 16;
+    }
       else
     {
-  	  cout<<"Invalid technology nodes"<<endl;
+  	  cout<<"Invalid technology nodes "<< technology << endl;
   	  exit(0);
     }
 
@@ -252,6 +262,7 @@
       Rnchannelon[0] = nmos_effective_resistance_multiplier * vdd[0] / I_on_n[0];//ohm-micron
       Rpchannelon[0] = n_to_p_eff_curr_drv_ratio[0] * Rnchannelon[0];//ohm-micron
       long_channel_leakage_reduction[0] = 1;
+/*
       I_off_n[0][0]  = 7e-10;//A/micron
       I_off_n[0][10] = 8.26e-10;
       I_off_n[0][20] = 9.74e-10;
@@ -275,6 +286,51 @@
       I_g_on_n[0][80] = 1.65e-10;
       I_g_on_n[0][90] = 1.65e-10;
       I_g_on_n[0][100] = 1.65e-10;
+*/
+      /* Leakage current data were interpolated to support full-range leakage feedback.
+         Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+      I_g_on_n[0][0] = 1.65e-10; 
+      I_g_on_n[0][1] = 1.65e-10; I_g_on_n[0][2] = 1.65e-10; I_g_on_n[0][3] = 1.65e-10; I_g_on_n[0][4] = 1.65e-10; I_g_on_n[0][5] = 1.65e-10; 
+      I_g_on_n[0][6] = 1.65e-10; I_g_on_n[0][7] = 1.65e-10; I_g_on_n[0][8] = 1.65e-10; I_g_on_n[0][9] = 1.65e-10; I_g_on_n[0][10] = 1.65e-10;
+      I_g_on_n[0][11] = 1.65e-10; I_g_on_n[0][12] = 1.65e-10; I_g_on_n[0][13] = 1.65e-10; I_g_on_n[0][14] = 1.65e-10; I_g_on_n[0][15] = 1.65e-10; 
+      I_g_on_n[0][16] = 1.65e-10; I_g_on_n[0][17] = 1.65e-10; I_g_on_n[0][18] = 1.65e-10; I_g_on_n[0][19] = 1.65e-10; I_g_on_n[0][20] = 1.65e-10;
+      I_g_on_n[0][21] = 1.65e-10; I_g_on_n[0][22] = 1.65e-10; I_g_on_n[0][23] = 1.65e-10; I_g_on_n[0][24] = 1.65e-10; I_g_on_n[0][25] = 1.65e-10; 
+      I_g_on_n[0][26] = 1.65e-10; I_g_on_n[0][27] = 1.65e-10; I_g_on_n[0][28] = 1.65e-10; I_g_on_n[0][29] = 1.65e-10; I_g_on_n[0][30] = 1.65e-10;
+      I_g_on_n[0][31] = 1.65e-10; I_g_on_n[0][32] = 1.65e-10; I_g_on_n[0][33] = 1.65e-10; I_g_on_n[0][34] = 1.65e-10; I_g_on_n[0][35] = 1.65e-10; 
+      I_g_on_n[0][36] = 1.65e-10; I_g_on_n[0][37] = 1.65e-10; I_g_on_n[0][38] = 1.65e-10; I_g_on_n[0][39] = 1.65e-10; I_g_on_n[0][40] = 1.65e-10;
+      I_g_on_n[0][41] = 1.65e-10; I_g_on_n[0][42] = 1.65e-10; I_g_on_n[0][43] = 1.65e-10; I_g_on_n[0][44] = 1.65e-10; I_g_on_n[0][45] = 1.65e-10; 
+      I_g_on_n[0][46] = 1.65e-10; I_g_on_n[0][47] = 1.65e-10; I_g_on_n[0][48] = 1.65e-10; I_g_on_n[0][49] = 1.65e-10; I_g_on_n[0][50] = 1.65e-10;
+      I_g_on_n[0][51] = 1.65e-10; I_g_on_n[0][52] = 1.65e-10; I_g_on_n[0][53] = 1.65e-10; I_g_on_n[0][54] = 1.65e-10; I_g_on_n[0][55] = 1.65e-10; 
+      I_g_on_n[0][56] = 1.65e-10; I_g_on_n[0][57] = 1.65e-10; I_g_on_n[0][58] = 1.65e-10; I_g_on_n[0][59] = 1.65e-10; I_g_on_n[0][60] = 1.65e-10;
+      I_g_on_n[0][61] = 1.65e-10; I_g_on_n[0][62] = 1.65e-10; I_g_on_n[0][63] = 1.65e-10; I_g_on_n[0][64] = 1.65e-10; I_g_on_n[0][65] = 1.65e-10; 
+      I_g_on_n[0][66] = 1.65e-10; I_g_on_n[0][67] = 1.65e-10; I_g_on_n[0][68] = 1.65e-10; I_g_on_n[0][69] = 1.65e-10; I_g_on_n[0][70] = 1.65e-10;
+      I_g_on_n[0][71] = 1.65e-10; I_g_on_n[0][72] = 1.65e-10; I_g_on_n[0][73] = 1.65e-10; I_g_on_n[0][74] = 1.65e-10; I_g_on_n[0][75] = 1.65e-10; 
+      I_g_on_n[0][76] = 1.65e-10; I_g_on_n[0][77] = 1.65e-10; I_g_on_n[0][78] = 1.65e-10; I_g_on_n[0][79] = 1.65e-10; I_g_on_n[0][80] = 1.65e-10;
+      I_g_on_n[0][81] = 1.65e-10; I_g_on_n[0][82] = 1.65e-10; I_g_on_n[0][83] = 1.65e-10; I_g_on_n[0][84] = 1.65e-10; I_g_on_n[0][85] = 1.65e-10; 
+      I_g_on_n[0][86] = 1.65e-10; I_g_on_n[0][87] = 1.65e-10; I_g_on_n[0][88] = 1.65e-10; I_g_on_n[0][89] = 1.65e-10; I_g_on_n[0][90] = 1.65e-10;
+      I_g_on_n[0][91] = 1.65e-10; I_g_on_n[0][92] = 1.65e-10; I_g_on_n[0][93] = 1.65e-10; I_g_on_n[0][94] = 1.65e-10; I_g_on_n[0][95] = 1.65e-10; 
+      I_g_on_n[0][96] = 1.65e-10; I_g_on_n[0][97] = 1.65e-10; I_g_on_n[0][98] = 1.65e-10; I_g_on_n[0][99] = 1.65e-10; I_g_on_n[0][100] = 1.65e-10;
+      I_off_n[0][0] = 7.00e-10; 
+      I_off_n[0][1] = 7.12e-10; I_off_n[0][2] = 7.23e-10; I_off_n[0][3] = 7.36e-10; I_off_n[0][4] = 7.48e-10; I_off_n[0][5] = 7.60e-10; 
+      I_off_n[0][6] = 7.73e-10; I_off_n[0][7] = 7.86e-10; I_off_n[0][8] = 7.99e-10; I_off_n[0][9] = 8.12e-10; I_off_n[0][10] = 8.26e-10;
+      I_off_n[0][11] = 8.40e-10; I_off_n[0][12] = 8.54e-10; I_off_n[0][13] = 8.68e-10; I_off_n[0][14] = 8.82e-10; I_off_n[0][15] = 8.97e-10; 
+      I_off_n[0][16] = 9.12e-10; I_off_n[0][17] = 9.27e-10; I_off_n[0][18] = 9.42e-10; I_off_n[0][19] = 9.58e-10; I_off_n[0][20] = 9.74e-10;
+      I_off_n[0][21] = 9.90e-10; I_off_n[0][22] = 1.01e-9; I_off_n[0][23] = 1.02e-9; I_off_n[0][24] = 1.04e-9; I_off_n[0][25] = 1.06e-9; 
+      I_off_n[0][26] = 1.08e-9; I_off_n[0][27] = 1.09e-9; I_off_n[0][28] = 1.11e-9; I_off_n[0][29] = 1.13e-9; I_off_n[0][30] = 1.15e-9;
+      I_off_n[0][31] = 1.17e-9; I_off_n[0][32] = 1.19e-9; I_off_n[0][33] = 1.21e-9; I_off_n[0][34] = 1.23e-9; I_off_n[0][35] = 1.25e-9; 
+      I_off_n[0][36] = 1.27e-9; I_off_n[0][37] = 1.29e-9; I_off_n[0][38] = 1.31e-9; I_off_n[0][39] = 1.33e-9; I_off_n[0][40] = 1.35e-9;
+      I_off_n[0][41] = 1.37e-9; I_off_n[0][42] = 1.40e-9; I_off_n[0][43] = 1.42e-9; I_off_n[0][44] = 1.44e-9; I_off_n[0][45] = 1.47e-9; 
+      I_off_n[0][46] = 1.50e-9; I_off_n[0][47] = 1.52e-9; I_off_n[0][48] = 1.55e-9; I_off_n[0][49] = 1.57e-9; I_off_n[0][50] = 1.60e-9;
+      I_off_n[0][51] = 1.63e-9; I_off_n[0][52] = 1.65e-9; I_off_n[0][53] = 1.68e-9; I_off_n[0][54] = 1.70e-9; I_off_n[0][55] = 1.73e-9; 
+      I_off_n[0][56] = 1.76e-9; I_off_n[0][57] = 1.79e-9; I_off_n[0][58] = 1.82e-9; I_off_n[0][59] = 1.85e-9; I_off_n[0][60] = 1.88e-9;
+      I_off_n[0][61] = 1.91e-9; I_off_n[0][62] = 1.95e-9; I_off_n[0][63] = 1.99e-9; I_off_n[0][64] = 2.03e-9; I_off_n[0][65] = 2.08e-9; 
+      I_off_n[0][66] = 2.12e-9; I_off_n[0][67] = 2.16e-9; I_off_n[0][68] = 2.21e-9; I_off_n[0][69] = 2.25e-9; I_off_n[0][70] = 2.29e-9;
+      I_off_n[0][71] = 2.33e-9; I_off_n[0][72] = 2.37e-9; I_off_n[0][73] = 2.41e-9; I_off_n[0][74] = 2.45e-9; I_off_n[0][75] = 2.49e-9; 
+      I_off_n[0][76] = 2.53e-9; I_off_n[0][77] = 2.57e-9; I_off_n[0][78] = 2.61e-9; I_off_n[0][79] = 2.66e-9; I_off_n[0][80] = 2.70e-9;
+      I_off_n[0][81] = 2.75e-9; I_off_n[0][82] = 2.79e-9; I_off_n[0][83] = 2.84e-9; I_off_n[0][84] = 2.89e-9; I_off_n[0][85] = 2.93e-9; 
+      I_off_n[0][86] = 2.98e-9; I_off_n[0][87] = 3.03e-9; I_off_n[0][88] = 3.09e-9; I_off_n[0][89] = 3.14e-9; I_off_n[0][90] = 3.19e-9;
+      I_off_n[0][91] = 3.24e-9; I_off_n[0][92] = 3.30e-9; I_off_n[0][93] = 3.35e-9; I_off_n[0][94] = 3.41e-9; I_off_n[0][95] = 3.46e-9; 
+      I_off_n[0][96] = 3.52e-9; I_off_n[0][97] = 3.58e-9; I_off_n[0][98] = 3.64e-9; I_off_n[0][99] = 3.70e-9; I_off_n[0][100] = 3.76e-9;
 
       //SRAM cell properties
       curr_Wmemcella_sram = 1.31 * g_ip->F_sz_um;
@@ -323,6 +379,7 @@
       Rnchannelon[0] = nmos_effective_resistance_multiplier * vdd[0] / I_on_n[0];//ohm-micron
       Rpchannelon[0] = n_to_p_eff_curr_drv_ratio[0] * Rnchannelon[0];//ohm-micron
       long_channel_leakage_reduction[0] = 1;
+/*
       I_off_n[0][0]  = 3.24e-8;//A/micron
       I_off_n[0][10] = 4.01e-8;
       I_off_n[0][20] = 4.90e-8;
@@ -346,6 +403,51 @@
       I_g_on_n[0][80] = 1.65e-8;
       I_g_on_n[0][90] = 1.65e-8;
       I_g_on_n[0][100] = 1.65e-8;
+*/
+      /* Leakage current data were interpolated to support full-range leakage feedback.
+         Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+      I_g_on_n[0][0] = 1.65e-8; 
+      I_g_on_n[0][1] = 1.65e-8; I_g_on_n[0][2] = 1.65e-8; I_g_on_n[0][3] = 1.65e-8; I_g_on_n[0][4] = 1.65e-8; I_g_on_n[0][5] = 1.65e-8; 
+      I_g_on_n[0][6] = 1.65e-8; I_g_on_n[0][7] = 1.65e-8; I_g_on_n[0][8] = 1.65e-8; I_g_on_n[0][9] = 1.65e-8; I_g_on_n[0][10] = 1.65e-8;
+      I_g_on_n[0][11] = 1.65e-8; I_g_on_n[0][12] = 1.65e-8; I_g_on_n[0][13] = 1.65e-8; I_g_on_n[0][14] = 1.65e-8; I_g_on_n[0][15] = 1.65e-8; 
+      I_g_on_n[0][16] = 1.65e-8; I_g_on_n[0][17] = 1.65e-8; I_g_on_n[0][18] = 1.65e-8; I_g_on_n[0][19] = 1.65e-8; I_g_on_n[0][20] = 1.65e-8;
+      I_g_on_n[0][21] = 1.65e-8; I_g_on_n[0][22] = 1.65e-8; I_g_on_n[0][23] = 1.65e-8; I_g_on_n[0][24] = 1.65e-8; I_g_on_n[0][25] = 1.65e-8; 
+      I_g_on_n[0][26] = 1.65e-8; I_g_on_n[0][27] = 1.65e-8; I_g_on_n[0][28] = 1.65e-8; I_g_on_n[0][29] = 1.65e-8; I_g_on_n[0][30] = 1.65e-8;
+      I_g_on_n[0][31] = 1.65e-8; I_g_on_n[0][32] = 1.65e-8; I_g_on_n[0][33] = 1.65e-8; I_g_on_n[0][34] = 1.65e-8; I_g_on_n[0][35] = 1.65e-8; 
+      I_g_on_n[0][36] = 1.65e-8; I_g_on_n[0][37] = 1.65e-8; I_g_on_n[0][38] = 1.65e-8; I_g_on_n[0][39] = 1.65e-8; I_g_on_n[0][40] = 1.65e-8;
+      I_g_on_n[0][41] = 1.65e-8; I_g_on_n[0][42] = 1.65e-8; I_g_on_n[0][43] = 1.65e-8; I_g_on_n[0][44] = 1.65e-8; I_g_on_n[0][45] = 1.65e-8; 
+      I_g_on_n[0][46] = 1.65e-8; I_g_on_n[0][47] = 1.65e-8; I_g_on_n[0][48] = 1.65e-8; I_g_on_n[0][49] = 1.65e-8; I_g_on_n[0][50] = 1.65e-8;
+      I_g_on_n[0][51] = 1.65e-8; I_g_on_n[0][52] = 1.65e-8; I_g_on_n[0][53] = 1.65e-8; I_g_on_n[0][54] = 1.65e-8; I_g_on_n[0][55] = 1.65e-8; 
+      I_g_on_n[0][56] = 1.65e-8; I_g_on_n[0][57] = 1.65e-8; I_g_on_n[0][58] = 1.65e-8; I_g_on_n[0][59] = 1.65e-8; I_g_on_n[0][60] = 1.65e-8;
+      I_g_on_n[0][61] = 1.65e-8; I_g_on_n[0][62] = 1.65e-8; I_g_on_n[0][63] = 1.65e-8; I_g_on_n[0][64] = 1.65e-8; I_g_on_n[0][65] = 1.65e-8; 
+      I_g_on_n[0][66] = 1.65e-8; I_g_on_n[0][67] = 1.65e-8; I_g_on_n[0][68] = 1.65e-8; I_g_on_n[0][69] = 1.65e-8; I_g_on_n[0][70] = 1.65e-8;
+      I_g_on_n[0][71] = 1.65e-8; I_g_on_n[0][72] = 1.65e-8; I_g_on_n[0][73] = 1.65e-8; I_g_on_n[0][74] = 1.65e-8; I_g_on_n[0][75] = 1.65e-8; 
+      I_g_on_n[0][76] = 1.65e-8; I_g_on_n[0][77] = 1.65e-8; I_g_on_n[0][78] = 1.65e-8; I_g_on_n[0][79] = 1.65e-8; I_g_on_n[0][80] = 1.65e-8;
+      I_g_on_n[0][81] = 1.65e-8; I_g_on_n[0][82] = 1.65e-8; I_g_on_n[0][83] = 1.65e-8; I_g_on_n[0][84] = 1.65e-8; I_g_on_n[0][85] = 1.65e-8; 
+      I_g_on_n[0][86] = 1.65e-8; I_g_on_n[0][87] = 1.65e-8; I_g_on_n[0][88] = 1.65e-8; I_g_on_n[0][89] = 1.65e-8; I_g_on_n[0][90] = 1.65e-8;
+      I_g_on_n[0][91] = 1.65e-8; I_g_on_n[0][92] = 1.65e-8; I_g_on_n[0][93] = 1.65e-8; I_g_on_n[0][94] = 1.65e-8; I_g_on_n[0][95] = 1.65e-8; 
+      I_g_on_n[0][96] = 1.65e-8; I_g_on_n[0][97] = 1.65e-8; I_g_on_n[0][98] = 1.65e-8; I_g_on_n[0][99] = 1.65e-8; I_g_on_n[0][100] = 1.65e-8;
+      I_off_n[0][0] = 3.24e-8; 
+      I_off_n[0][1] = 3.31e-8; I_off_n[0][2] = 3.38e-8; I_off_n[0][3] = 3.46e-8; I_off_n[0][4] = 3.53e-8; I_off_n[0][5] = 3.61e-8; 
+      I_off_n[0][6] = 3.69e-8; I_off_n[0][7] = 3.77e-8; I_off_n[0][8] = 3.85e-8; I_off_n[0][9] = 3.93e-8; I_off_n[0][10] = 4.01e-8;
+      I_off_n[0][11] = 4.09e-8; I_off_n[0][12] = 4.18e-8; I_off_n[0][13] = 4.26e-8; I_off_n[0][14] = 4.35e-8; I_off_n[0][15] = 4.44e-8; 
+      I_off_n[0][16] = 4.53e-8; I_off_n[0][17] = 4.62e-8; I_off_n[0][18] = 4.71e-8; I_off_n[0][19] = 4.81e-8; I_off_n[0][20] = 4.90e-8;
+      I_off_n[0][21] = 5.00e-8; I_off_n[0][22] = 5.09e-8; I_off_n[0][23] = 5.19e-8; I_off_n[0][24] = 5.29e-8; I_off_n[0][25] = 5.39e-8; 
+      I_off_n[0][26] = 5.50e-8; I_off_n[0][27] = 5.60e-8; I_off_n[0][28] = 5.71e-8; I_off_n[0][29] = 5.81e-8; I_off_n[0][30] = 5.92e-8;
+      I_off_n[0][31] = 6.03e-8; I_off_n[0][32] = 6.14e-8; I_off_n[0][33] = 6.25e-8; I_off_n[0][34] = 6.37e-8; I_off_n[0][35] = 6.48e-8; 
+      I_off_n[0][36] = 6.60e-8; I_off_n[0][37] = 6.72e-8; I_off_n[0][38] = 6.84e-8; I_off_n[0][39] = 6.96e-8; I_off_n[0][40] = 7.08e-8;
+      I_off_n[0][41] = 7.20e-8; I_off_n[0][42] = 7.33e-8; I_off_n[0][43] = 7.45e-8; I_off_n[0][44] = 7.58e-8; I_off_n[0][45] = 7.71e-8; 
+      I_off_n[0][46] = 7.84e-8; I_off_n[0][47] = 7.98e-8; I_off_n[0][48] = 8.11e-8; I_off_n[0][49] = 8.24e-8; I_off_n[0][50] = 8.38e-8;
+      I_off_n[0][51] = 8.52e-8; I_off_n[0][52] = 8.66e-8; I_off_n[0][53] = 8.80e-8; I_off_n[0][54] = 8.94e-8; I_off_n[0][55] = 9.08e-8; 
+      I_off_n[0][56] = 9.23e-8; I_off_n[0][57] = 9.37e-8; I_off_n[0][58] = 9.52e-8; I_off_n[0][59] = 9.67e-8; I_off_n[0][60] = 9.82e-8;
+      I_off_n[0][61] = 9.97e-8; I_off_n[0][62] = 1.01e-7; I_off_n[0][63] = 1.03e-7; I_off_n[0][64] = 1.04e-7; I_off_n[0][65] = 1.06e-7; 
+      I_off_n[0][66] = 1.08e-7; I_off_n[0][67] = 1.09e-7; I_off_n[0][68] = 1.11e-7; I_off_n[0][69] = 1.12e-7; I_off_n[0][70] = 1.14e-7;
+      I_off_n[0][71] = 1.16e-7; I_off_n[0][72] = 1.17e-7; I_off_n[0][73] = 1.19e-7; I_off_n[0][74] = 1.20e-7; I_off_n[0][75] = 1.22e-7; 
+      I_off_n[0][76] = 1.23e-7; I_off_n[0][77] = 1.25e-7; I_off_n[0][78] = 1.26e-7; I_off_n[0][79] = 1.28e-7; I_off_n[0][80] = 1.29e-7;
+      I_off_n[0][81] = 1.30e-7; I_off_n[0][82] = 1.32e-7; I_off_n[0][83] = 1.33e-7; I_off_n[0][84] = 1.35e-7; I_off_n[0][85] = 1.36e-7; 
+      I_off_n[0][86] = 1.38e-7; I_off_n[0][87] = 1.39e-7; I_off_n[0][88] = 1.40e-7; I_off_n[0][89] = 1.42e-7; I_off_n[0][90] = 1.43e-7;
+      I_off_n[0][91] = 1.44e-7; I_off_n[0][92] = 1.45e-7; I_off_n[0][93] = 1.47e-7; I_off_n[0][94] = 1.48e-7; I_off_n[0][95] = 1.49e-7; 
+      I_off_n[0][96] = 1.50e-7; I_off_n[0][97] = 1.51e-7; I_off_n[0][98] = 1.52e-7; I_off_n[0][99] = 1.53e-7; I_off_n[0][100] = 1.54e-7;
 
       //ITRS LSTP device type
       vdd[1]   = 1.3;
@@ -367,6 +469,7 @@
       Rnchannelon[1] = nmos_effective_resistance_multiplier * vdd[1] / I_on_n[1];
       Rpchannelon[1] = n_to_p_eff_curr_drv_ratio[1] * Rnchannelon[1];
       long_channel_leakage_reduction[1] = 1;
+/*
       I_off_n[1][0]  = 2.81e-12;
       I_off_n[1][10] = 4.76e-12;
       I_off_n[1][20] = 7.82e-12;
@@ -390,6 +493,52 @@
       I_g_on_n[1][80] = 3.87e-11;
       I_g_on_n[1][90] = 3.87e-11;
       I_g_on_n[1][100] = 3.87e-11;
+*/
+      /* Leakage current data were interpolated to support full-range leakage feedback.
+         Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+      I_g_on_n[1][0] = 3.87e-11; 
+      I_g_on_n[1][1] = 3.87e-11; I_g_on_n[1][2] = 3.87e-11; I_g_on_n[1][3] = 3.87e-11; I_g_on_n[1][4] = 3.87e-11; I_g_on_n[1][5] = 3.87e-11; 
+      I_g_on_n[1][6] = 3.87e-11; I_g_on_n[1][7] = 3.87e-11; I_g_on_n[1][8] = 3.87e-11; I_g_on_n[1][9] = 3.87e-11; I_g_on_n[1][10] = 3.87e-11;
+      I_g_on_n[1][11] = 3.87e-11; I_g_on_n[1][12] = 3.87e-11; I_g_on_n[1][13] = 3.87e-11; I_g_on_n[1][14] = 3.87e-11; I_g_on_n[1][15] = 3.87e-11; 
+      I_g_on_n[1][16] = 3.87e-11; I_g_on_n[1][17] = 3.87e-11; I_g_on_n[1][18] = 3.87e-11; I_g_on_n[1][19] = 3.87e-11; I_g_on_n[1][20] = 3.87e-11;
+      I_g_on_n[1][21] = 3.87e-11; I_g_on_n[1][22] = 3.87e-11; I_g_on_n[1][23] = 3.87e-11; I_g_on_n[1][24] = 3.87e-11; I_g_on_n[1][25] = 3.87e-11; 
+      I_g_on_n[1][26] = 3.87e-11; I_g_on_n[1][27] = 3.87e-11; I_g_on_n[1][28] = 3.87e-11; I_g_on_n[1][29] = 3.87e-11; I_g_on_n[1][30] = 3.87e-11;
+      I_g_on_n[1][31] = 3.87e-11; I_g_on_n[1][32] = 3.87e-11; I_g_on_n[1][33] = 3.87e-11; I_g_on_n[1][34] = 3.87e-11; I_g_on_n[1][35] = 3.87e-11; 
+      I_g_on_n[1][36] = 3.87e-11; I_g_on_n[1][37] = 3.87e-11; I_g_on_n[1][38] = 3.87e-11; I_g_on_n[1][39] = 3.87e-11; I_g_on_n[1][40] = 3.87e-11;
+      I_g_on_n[1][41] = 3.87e-11; I_g_on_n[1][42] = 3.87e-11; I_g_on_n[1][43] = 3.87e-11; I_g_on_n[1][44] = 3.87e-11; I_g_on_n[1][45] = 3.87e-11; 
+      I_g_on_n[1][46] = 3.87e-11; I_g_on_n[1][47] = 3.87e-11; I_g_on_n[1][48] = 3.87e-11; I_g_on_n[1][49] = 3.87e-11; I_g_on_n[1][50] = 3.87e-11;
+      I_g_on_n[1][51] = 3.87e-11; I_g_on_n[1][52] = 3.87e-11; I_g_on_n[1][53] = 3.87e-11; I_g_on_n[1][54] = 3.87e-11; I_g_on_n[1][55] = 3.87e-11; 
+      I_g_on_n[1][56] = 3.87e-11; I_g_on_n[1][57] = 3.87e-11; I_g_on_n[1][58] = 3.87e-11; I_g_on_n[1][59] = 3.87e-11; I_g_on_n[1][60] = 3.87e-11;
+      I_g_on_n[1][61] = 3.87e-11; I_g_on_n[1][62] = 3.87e-11; I_g_on_n[1][63] = 3.87e-11; I_g_on_n[1][64] = 3.87e-11; I_g_on_n[1][65] = 3.87e-11; 
+      I_g_on_n[1][66] = 3.87e-11; I_g_on_n[1][67] = 3.87e-11; I_g_on_n[1][68] = 3.87e-11; I_g_on_n[1][69] = 3.87e-11; I_g_on_n[1][70] = 3.87e-11;
+      I_g_on_n[1][71] = 3.87e-11; I_g_on_n[1][72] = 3.87e-11; I_g_on_n[1][73] = 3.87e-11; I_g_on_n[1][74] = 3.87e-11; I_g_on_n[1][75] = 3.87e-11; 
+      I_g_on_n[1][76] = 3.87e-11; I_g_on_n[1][77] = 3.87e-11; I_g_on_n[1][78] = 3.87e-11; I_g_on_n[1][79] = 3.87e-11; I_g_on_n[1][80] = 3.87e-11;
+      I_g_on_n[1][81] = 3.87e-11; I_g_on_n[1][82] = 3.87e-11; I_g_on_n[1][83] = 3.87e-11; I_g_on_n[1][84] = 3.87e-11; I_g_on_n[1][85] = 3.87e-11; 
+      I_g_on_n[1][86] = 3.87e-11; I_g_on_n[1][87] = 3.87e-11; I_g_on_n[1][88] = 3.87e-11; I_g_on_n[1][89] = 3.87e-11; I_g_on_n[1][90] = 3.87e-11;
+      I_g_on_n[1][91] = 3.87e-11; I_g_on_n[1][92] = 3.87e-11; I_g_on_n[1][93] = 3.87e-11; I_g_on_n[1][94] = 3.87e-11; I_g_on_n[1][95] = 3.87e-11; 
+      I_g_on_n[1][96] = 3.87e-11; I_g_on_n[1][97] = 3.87e-11; I_g_on_n[1][98] = 3.87e-11; I_g_on_n[1][99] = 3.87e-11; I_g_on_n[1][100] = 3.87e-11;
+      I_off_n[1][0] = 2.81e-12; 
+      I_off_n[1][1] = 2.96e-12; I_off_n[1][2] = 3.12e-12; I_off_n[1][3] = 3.29e-12; I_off_n[1][4] = 3.47e-12; I_off_n[1][5] = 3.66e-12; 
+      I_off_n[1][6] = 3.86e-12; I_off_n[1][7] = 4.08e-12; I_off_n[1][8] = 4.30e-12; I_off_n[1][9] = 4.53e-12; I_off_n[1][10] = 4.76e-12;
+      I_off_n[1][11] = 5.01e-12; I_off_n[1][12] = 5.26e-12; I_off_n[1][13] = 5.54e-12; I_off_n[1][14] = 5.82e-12; I_off_n[1][15] = 6.13e-12; 
+      I_off_n[1][16] = 6.44e-12; I_off_n[1][17] = 6.77e-12; I_off_n[1][18] = 7.10e-12; I_off_n[1][19] = 7.46e-12; I_off_n[1][20] = 7.82e-12;
+      I_off_n[1][21] = 8.20e-12; I_off_n[1][22] = 8.60e-12; I_off_n[1][23] = 9.02e-12; I_off_n[1][24] = 9.46e-12; I_off_n[1][25] = 9.93e-12; 
+      I_off_n[1][26] = 1.04e-11; I_off_n[1][27] = 1.09e-11; I_off_n[1][28] = 1.14e-11; I_off_n[1][29] = 1.20e-11; I_off_n[1][30] = 1.25e-11;
+      I_off_n[1][31] = 1.31e-11; I_off_n[1][32] = 1.37e-11; I_off_n[1][33] = 1.43e-11; I_off_n[1][34] = 1.49e-11; I_off_n[1][35] = 1.56e-11; 
+      I_off_n[1][36] = 1.63e-11; I_off_n[1][37] = 1.71e-11; I_off_n[1][38] = 1.78e-11; I_off_n[1][39] = 1.86e-11; I_off_n[1][40] = 1.94e-11;
+      I_off_n[1][41] = 2.02e-11; I_off_n[1][42] = 2.11e-11; I_off_n[1][43] = 2.20e-11; I_off_n[1][44] = 2.30e-11; I_off_n[1][45] = 2.40e-11; 
+      I_off_n[1][46] = 2.50e-11; I_off_n[1][47] = 2.60e-11; I_off_n[1][48] = 2.71e-11; I_off_n[1][49] = 2.82e-11; I_off_n[1][50] = 2.94e-11;
+      I_off_n[1][51] = 3.06e-11; I_off_n[1][52] = 3.19e-11; I_off_n[1][53] = 3.32e-11; I_off_n[1][54] = 3.45e-11; I_off_n[1][55] = 3.59e-11; 
+      I_off_n[1][56] = 3.74e-11; I_off_n[1][57] = 3.89e-11; I_off_n[1][58] = 4.04e-11; I_off_n[1][59] = 4.20e-11; I_off_n[1][60] = 4.36e-11;
+      I_off_n[1][61] = 4.53e-11; I_off_n[1][62] = 4.70e-11; I_off_n[1][63] = 4.88e-11; I_off_n[1][64] = 5.07e-11; I_off_n[1][65] = 5.27e-11; 
+      I_off_n[1][66] = 5.46e-11; I_off_n[1][67] = 5.67e-11; I_off_n[1][68] = 5.88e-11; I_off_n[1][69] = 6.10e-11; I_off_n[1][70] = 6.32e-11;
+      I_off_n[1][71] = 6.55e-11; I_off_n[1][72] = 6.78e-11; I_off_n[1][73] = 7.03e-11; I_off_n[1][74] = 7.28e-11; I_off_n[1][75] = 7.54e-11; 
+      I_off_n[1][76] = 7.80e-11; I_off_n[1][77] = 8.08e-11; I_off_n[1][78] = 8.36e-11; I_off_n[1][79] = 8.65e-11; I_off_n[1][80] = 8.95e-11;
+      I_off_n[1][81] = 9.26e-11; I_off_n[1][82] = 9.58e-11; I_off_n[1][83] = 9.91e-11; I_off_n[1][84] = 1.03e-10; I_off_n[1][85] = 1.06e-10; 
+      I_off_n[1][86] = 1.10e-10; I_off_n[1][87] = 1.13e-10; I_off_n[1][88] = 1.17e-10; I_off_n[1][89] = 1.21e-10; I_off_n[1][90] = 1.25e-10;
+      I_off_n[1][91] = 1.29e-10; I_off_n[1][92] = 1.33e-10; I_off_n[1][93] = 1.37e-10; I_off_n[1][94] = 1.42e-10; I_off_n[1][95] = 1.46e-10; 
+      I_off_n[1][96] = 1.51e-10; I_off_n[1][97] = 1.55e-10; I_off_n[1][98] = 1.60e-10; I_off_n[1][99] = 1.65e-10; I_off_n[1][100] = 1.70e-10;
+
 
       //ITRS LOP device type
       vdd[2] = 0.9;
@@ -411,6 +560,7 @@
       Rnchannelon[2] = nmos_effective_resistance_multiplier * vdd[2] / I_on_n[2];
       Rpchannelon[2] = n_to_p_eff_curr_drv_ratio[2] * Rnchannelon[2];
       long_channel_leakage_reduction[2] = 1;
+/*
       I_off_n[2][0] = 2.14e-9;
       I_off_n[2][10] = 2.9e-9;
       I_off_n[2][20] = 3.87e-9;
@@ -434,6 +584,51 @@
       I_g_on_n[2][80] = 4.31e-8;
       I_g_on_n[2][90] = 4.31e-8;
       I_g_on_n[2][100] = 4.31e-8;
+*/
+      /* Leakage current data were interpolated to support full-range leakage feedback.
+         Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+      I_g_on_n[2][0] = 4.31e-8; 
+      I_g_on_n[2][1] = 4.31e-8; I_g_on_n[2][2] = 4.31e-8; I_g_on_n[2][3] = 4.31e-8; I_g_on_n[2][4] = 4.31e-8; I_g_on_n[2][5] = 4.31e-8; 
+      I_g_on_n[2][6] = 4.31e-8; I_g_on_n[2][7] = 4.31e-8; I_g_on_n[2][8] = 4.31e-8; I_g_on_n[2][9] = 4.31e-8; I_g_on_n[2][10] = 4.31e-8;
+      I_g_on_n[2][11] = 4.31e-8; I_g_on_n[2][12] = 4.31e-8; I_g_on_n[2][13] = 4.31e-8; I_g_on_n[2][14] = 4.31e-8; I_g_on_n[2][15] = 4.31e-8; 
+      I_g_on_n[2][16] = 4.31e-8; I_g_on_n[2][17] = 4.31e-8; I_g_on_n[2][18] = 4.31e-8; I_g_on_n[2][19] = 4.31e-8; I_g_on_n[2][20] = 4.31e-8;
+      I_g_on_n[2][21] = 4.31e-8; I_g_on_n[2][22] = 4.31e-8; I_g_on_n[2][23] = 4.31e-8; I_g_on_n[2][24] = 4.31e-8; I_g_on_n[2][25] = 4.31e-8; 
+      I_g_on_n[2][26] = 4.31e-8; I_g_on_n[2][27] = 4.31e-8; I_g_on_n[2][28] = 4.31e-8; I_g_on_n[2][29] = 4.31e-8; I_g_on_n[2][30] = 4.31e-8;
+      I_g_on_n[2][31] = 4.31e-8; I_g_on_n[2][32] = 4.31e-8; I_g_on_n[2][33] = 4.31e-8; I_g_on_n[2][34] = 4.31e-8; I_g_on_n[2][35] = 4.31e-8; 
+      I_g_on_n[2][36] = 4.31e-8; I_g_on_n[2][37] = 4.31e-8; I_g_on_n[2][38] = 4.31e-8; I_g_on_n[2][39] = 4.31e-8; I_g_on_n[2][40] = 4.31e-8;
+      I_g_on_n[2][41] = 4.31e-8; I_g_on_n[2][42] = 4.31e-8; I_g_on_n[2][43] = 4.31e-8; I_g_on_n[2][44] = 4.31e-8; I_g_on_n[2][45] = 4.31e-8; 
+      I_g_on_n[2][46] = 4.31e-8; I_g_on_n[2][47] = 4.31e-8; I_g_on_n[2][48] = 4.31e-8; I_g_on_n[2][49] = 4.31e-8; I_g_on_n[2][50] = 4.31e-8;
+      I_g_on_n[2][51] = 4.31e-8; I_g_on_n[2][52] = 4.31e-8; I_g_on_n[2][53] = 4.31e-8; I_g_on_n[2][54] = 4.31e-8; I_g_on_n[2][55] = 4.31e-8; 
+      I_g_on_n[2][56] = 4.31e-8; I_g_on_n[2][57] = 4.31e-8; I_g_on_n[2][58] = 4.31e-8; I_g_on_n[2][59] = 4.31e-8; I_g_on_n[2][60] = 4.31e-8;
+      I_g_on_n[2][61] = 4.31e-8; I_g_on_n[2][62] = 4.31e-8; I_g_on_n[2][63] = 4.31e-8; I_g_on_n[2][64] = 4.31e-8; I_g_on_n[2][65] = 4.31e-8; 
+      I_g_on_n[2][66] = 4.31e-8; I_g_on_n[2][67] = 4.31e-8; I_g_on_n[2][68] = 4.31e-8; I_g_on_n[2][69] = 4.31e-8; I_g_on_n[2][70] = 4.31e-8;
+      I_g_on_n[2][71] = 4.31e-8; I_g_on_n[2][72] = 4.31e-8; I_g_on_n[2][73] = 4.31e-8; I_g_on_n[2][74] = 4.31e-8; I_g_on_n[2][75] = 4.31e-8; 
+      I_g_on_n[2][76] = 4.31e-8; I_g_on_n[2][77] = 4.31e-8; I_g_on_n[2][78] = 4.31e-8; I_g_on_n[2][79] = 4.31e-8; I_g_on_n[2][80] = 4.31e-8;
+      I_g_on_n[2][81] = 4.31e-8; I_g_on_n[2][82] = 4.31e-8; I_g_on_n[2][83] = 4.31e-8; I_g_on_n[2][84] = 4.31e-8; I_g_on_n[2][85] = 4.31e-8; 
+      I_g_on_n[2][86] = 4.31e-8; I_g_on_n[2][87] = 4.31e-8; I_g_on_n[2][88] = 4.31e-8; I_g_on_n[2][89] = 4.31e-8; I_g_on_n[2][90] = 4.31e-8;
+      I_g_on_n[2][91] = 4.31e-8; I_g_on_n[2][92] = 4.31e-8; I_g_on_n[2][93] = 4.31e-8; I_g_on_n[2][94] = 4.31e-8; I_g_on_n[2][95] = 4.31e-8; 
+      I_g_on_n[2][96] = 4.31e-8; I_g_on_n[2][97] = 4.31e-8; I_g_on_n[2][98] = 4.31e-8; I_g_on_n[2][99] = 4.31e-8; I_g_on_n[2][100] = 4.31e-8;
+      I_off_n[2][0] = 2.14e-9; 
+      I_off_n[2][1] = 2.21e-9; I_off_n[2][2] = 2.28e-9; I_off_n[2][3] = 2.35e-9; I_off_n[2][4] = 2.42e-9; I_off_n[2][5] = 2.50e-9; 
+      I_off_n[2][6] = 2.57e-9; I_off_n[2][7] = 2.65e-9; I_off_n[2][8] = 2.73e-9; I_off_n[2][9] = 2.82e-9; I_off_n[2][10] = 2.90e-9;
+      I_off_n[2][11] = 2.99e-9; I_off_n[2][12] = 3.08e-9; I_off_n[2][13] = 3.17e-9; I_off_n[2][14] = 3.26e-9; I_off_n[2][15] = 3.36e-9; 
+      I_off_n[2][16] = 3.46e-9; I_off_n[2][17] = 3.56e-9; I_off_n[2][18] = 3.66e-9; I_off_n[2][19] = 3.76e-9; I_off_n[2][20] = 3.87e-9;
+      I_off_n[2][21] = 3.98e-9; I_off_n[2][22] = 4.09e-9; I_off_n[2][23] = 4.20e-9; I_off_n[2][24] = 4.32e-9; I_off_n[2][25] = 4.44e-9; 
+      I_off_n[2][26] = 4.56e-9; I_off_n[2][27] = 4.68e-9; I_off_n[2][28] = 4.81e-9; I_off_n[2][29] = 4.94e-9; I_off_n[2][30] = 5.07e-9;
+      I_off_n[2][31] = 5.20e-9; I_off_n[2][32] = 5.34e-9; I_off_n[2][33] = 5.48e-9; I_off_n[2][34] = 5.63e-9; I_off_n[2][35] = 5.77e-9; 
+      I_off_n[2][36] = 5.92e-9; I_off_n[2][37] = 6.07e-9; I_off_n[2][38] = 6.23e-9; I_off_n[2][39] = 6.38e-9; I_off_n[2][40] = 6.54e-9;
+      I_off_n[2][41] = 6.70e-9; I_off_n[2][42] = 6.86e-9; I_off_n[2][43] = 7.03e-9; I_off_n[2][44] = 7.20e-9; I_off_n[2][45] = 7.38e-9; 
+      I_off_n[2][46] = 7.55e-9; I_off_n[2][47] = 7.73e-9; I_off_n[2][48] = 7.91e-9; I_off_n[2][49] = 8.09e-9; I_off_n[2][50] = 8.27e-9;
+      I_off_n[2][51] = 8.46e-9; I_off_n[2][52] = 8.64e-9; I_off_n[2][53] = 8.84e-9; I_off_n[2][54] = 9.03e-9; I_off_n[2][55] = 9.23e-9; 
+      I_off_n[2][56] = 9.43e-9; I_off_n[2][57] = 9.62e-9; I_off_n[2][58] = 9.82e-9; I_off_n[2][59] = 1.00e-8; I_off_n[2][60] = 1.02e-8;
+      I_off_n[2][61] = 1.04e-8; I_off_n[2][62] = 1.06e-8; I_off_n[2][63] = 1.08e-8; I_off_n[2][64] = 1.09e-8; I_off_n[2][65] = 1.11e-8; 
+      I_off_n[2][66] = 1.13e-8; I_off_n[2][67] = 1.15e-8; I_off_n[2][68] = 1.17e-8; I_off_n[2][69] = 1.18e-8; I_off_n[2][70] = 1.20e-8;
+      I_off_n[2][71] = 1.22e-8; I_off_n[2][72] = 1.23e-8; I_off_n[2][73] = 1.25e-8; I_off_n[2][74] = 1.27e-8; I_off_n[2][75] = 1.28e-8; 
+      I_off_n[2][76] = 1.30e-8; I_off_n[2][77] = 1.31e-8; I_off_n[2][78] = 1.33e-8; I_off_n[2][79] = 1.34e-8; I_off_n[2][80] = 1.36e-8;
+      I_off_n[2][81] = 1.38e-8; I_off_n[2][82] = 1.39e-8; I_off_n[2][83] = 1.41e-8; I_off_n[2][84] = 1.42e-8; I_off_n[2][85] = 1.44e-8; 
+      I_off_n[2][86] = 1.45e-8; I_off_n[2][87] = 1.47e-8; I_off_n[2][88] = 1.49e-8; I_off_n[2][89] = 1.50e-8; I_off_n[2][90] = 1.52e-8;
+      I_off_n[2][91] = 1.54e-8; I_off_n[2][92] = 1.56e-8; I_off_n[2][93] = 1.58e-8; I_off_n[2][94] = 1.60e-8; I_off_n[2][95] = 1.62e-8; 
+      I_off_n[2][96] = 1.64e-8; I_off_n[2][97] = 1.66e-8; I_off_n[2][98] = 1.68e-8; I_off_n[2][99] = 1.71e-8; I_off_n[2][100] = 1.73e-8;
 
       if (ram_cell_tech_type == lp_dram)
       {
@@ -470,6 +665,7 @@
         Rnchannelon[3] = nmos_effective_resistance_multiplier * curr_vpp / I_on_n[3];
         Rpchannelon[3] = n_to_p_eff_curr_drv_ratio[3] * Rnchannelon[3];
         long_channel_leakage_reduction[3] = 1;
+/*
         I_off_n[3][0] = 1.42e-11;
         I_off_n[3][10] = 2.25e-11;
         I_off_n[3][20] = 3.46e-11;
@@ -481,6 +677,30 @@
         I_off_n[3][80] = 2.57e-10;
         I_off_n[3][90] = 3.14e-10;
         I_off_n[3][100] = 3.85e-10;
+*/
+        /* Leakage current data were interpolated to support full-range leakage feedback.
+           Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+        I_off_n[3][0] = 1.42e-11; 
+        I_off_n[3][1] = 1.49e-11; I_off_n[3][2] = 1.56e-11; I_off_n[3][3] = 1.63e-11; I_off_n[3][4] = 1.71e-11; I_off_n[3][5] = 1.79e-11; 
+        I_off_n[3][6] = 1.88e-11; I_off_n[3][7] = 1.97e-11; I_off_n[3][8] = 2.06e-11; I_off_n[3][9] = 2.15e-11; I_off_n[3][10] = 2.25e-11;
+        I_off_n[3][11] = 2.35e-11; I_off_n[3][12] = 2.46e-11; I_off_n[3][13] = 2.57e-11; I_off_n[3][14] = 2.68e-11; I_off_n[3][15] = 2.80e-11; 
+        I_off_n[3][16] = 2.92e-11; I_off_n[3][17] = 3.05e-11; I_off_n[3][18] = 3.18e-11; I_off_n[3][19] = 3.32e-11; I_off_n[3][20] = 3.46e-11;
+        I_off_n[3][21] = 3.61e-11; I_off_n[3][22] = 3.76e-11; I_off_n[3][23] = 3.91e-11; I_off_n[3][24] = 4.08e-11; I_off_n[3][25] = 4.25e-11; 
+        I_off_n[3][26] = 4.42e-11; I_off_n[3][27] = 4.60e-11; I_off_n[3][28] = 4.79e-11; I_off_n[3][29] = 4.98e-11; I_off_n[3][30] = 5.18e-11;
+        I_off_n[3][31] = 5.38e-11; I_off_n[3][32] = 5.60e-11; I_off_n[3][33] = 5.82e-11; I_off_n[3][34] = 6.05e-11; I_off_n[3][35] = 6.29e-11; 
+        I_off_n[3][36] = 6.53e-11; I_off_n[3][37] = 6.78e-11; I_off_n[3][38] = 7.04e-11; I_off_n[3][39] = 7.31e-11; I_off_n[3][40] = 7.58e-11;
+        I_off_n[3][41] = 7.86e-11; I_off_n[3][42] = 8.15e-11; I_off_n[3][43] = 8.45e-11; I_off_n[3][44] = 8.76e-11; I_off_n[3][45] = 9.07e-11; 
+        I_off_n[3][46] = 9.40e-11; I_off_n[3][47] = 9.74e-11; I_off_n[3][48] = 1.01e-10; I_off_n[3][49] = 1.04e-10; I_off_n[3][50] = 1.08e-10;
+        I_off_n[3][51] = 1.12e-10; I_off_n[3][52] = 1.16e-10; I_off_n[3][53] = 1.20e-10; I_off_n[3][54] = 1.24e-10; I_off_n[3][55] = 1.28e-10; 
+        I_off_n[3][56] = 1.33e-10; I_off_n[3][57] = 1.37e-10; I_off_n[3][58] = 1.42e-10; I_off_n[3][59] = 1.46e-10; I_off_n[3][60] = 1.51e-10;
+        I_off_n[3][61] = 1.56e-10; I_off_n[3][62] = 1.61e-10; I_off_n[3][63] = 1.66e-10; I_off_n[3][64] = 1.71e-10; I_off_n[3][65] = 1.76e-10; 
+        I_off_n[3][66] = 1.81e-10; I_off_n[3][67] = 1.86e-10; I_off_n[3][68] = 1.91e-10; I_off_n[3][69] = 1.97e-10; I_off_n[3][70] = 2.02e-10;
+        I_off_n[3][71] = 2.07e-10; I_off_n[3][72] = 2.13e-10; I_off_n[3][73] = 2.18e-10; I_off_n[3][74] = 2.24e-10; I_off_n[3][75] = 2.29e-10; 
+        I_off_n[3][76] = 2.35e-10; I_off_n[3][77] = 2.40e-10; I_off_n[3][78] = 2.46e-10; I_off_n[3][79] = 2.51e-10; I_off_n[3][80] = 2.57e-10;
+        I_off_n[3][81] = 2.63e-10; I_off_n[3][82] = 2.68e-10; I_off_n[3][83] = 2.74e-10; I_off_n[3][84] = 2.79e-10; I_off_n[3][85] = 2.85e-10; 
+        I_off_n[3][86] = 2.90e-10; I_off_n[3][87] = 2.96e-10; I_off_n[3][88] = 3.02e-10; I_off_n[3][89] = 3.08e-10; I_off_n[3][90] = 3.14e-10;
+        I_off_n[3][91] = 3.20e-10; I_off_n[3][92] = 3.27e-10; I_off_n[3][93] = 3.34e-10; I_off_n[3][94] = 3.41e-10; I_off_n[3][95] = 3.48e-10; 
+        I_off_n[3][96] = 3.55e-10; I_off_n[3][97] = 3.62e-10; I_off_n[3][98] = 3.70e-10; I_off_n[3][99] = 3.77e-10; I_off_n[3][100] = 3.85e-10;
       }
       else if (ram_cell_tech_type == comm_dram)
       {
@@ -517,6 +737,7 @@
         Rnchannelon[3] = nmos_effective_resistance_multiplier * curr_vpp / I_on_n[3];
         Rpchannelon[3] = n_to_p_eff_curr_drv_ratio[3] * Rnchannelon[3];
         long_channel_leakage_reduction[3] = 1;
+/*
         I_off_n[3][0] = 5.80e-15;
         I_off_n[3][10] = 1.21e-14;
         I_off_n[3][20] = 2.42e-14;
@@ -528,6 +749,30 @@
         I_off_n[3][80] = 7.17e-13;
         I_off_n[3][90] = 1.11e-12;
         I_off_n[3][100] = 1.67e-12;
+*/
+        /* Leakage current data were interpolated to support full-range leakage feedback.
+           Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+        I_off_n[3][0] = 5.80e-15; 
+        I_off_n[3][1] = 6.18e-15; I_off_n[3][2] = 6.63e-15; I_off_n[3][3] = 7.14e-15; I_off_n[3][4] = 7.71e-15; I_off_n[3][5] = 8.34e-15; 
+        I_off_n[3][6] = 9.02e-15; I_off_n[3][7] = 9.74e-15; I_off_n[3][8] = 1.05e-14; I_off_n[3][9] = 1.13e-14; I_off_n[3][10] = 1.21e-14;
+        I_off_n[3][11] = 1.30e-14; I_off_n[3][12] = 1.39e-14; I_off_n[3][13] = 1.49e-14; I_off_n[3][14] = 1.60e-14; I_off_n[3][15] = 1.72e-14; 
+        I_off_n[3][16] = 1.85e-14; I_off_n[3][17] = 1.98e-14; I_off_n[3][18] = 2.12e-14; I_off_n[3][19] = 2.27e-14; I_off_n[3][20] = 2.42e-14;
+        I_off_n[3][21] = 2.58e-14; I_off_n[3][22] = 2.76e-14; I_off_n[3][23] = 2.95e-14; I_off_n[3][24] = 3.16e-14; I_off_n[3][25] = 3.37e-14; 
+        I_off_n[3][26] = 3.61e-14; I_off_n[3][27] = 3.85e-14; I_off_n[3][28] = 4.10e-14; I_off_n[3][29] = 4.37e-14; I_off_n[3][30] = 4.65e-14;
+        I_off_n[3][31] = 4.95e-14; I_off_n[3][32] = 5.27e-14; I_off_n[3][33] = 5.61e-14; I_off_n[3][34] = 5.97e-14; I_off_n[3][35] = 6.36e-14; 
+        I_off_n[3][36] = 6.76e-14; I_off_n[3][37] = 7.19e-14; I_off_n[3][38] = 7.64e-14; I_off_n[3][39] = 8.11e-14; I_off_n[3][40] = 8.60e-14;
+        I_off_n[3][41] = 9.12e-14; I_off_n[3][42] = 9.68e-14; I_off_n[3][43] = 1.03e-13; I_off_n[3][44] = 1.09e-13; I_off_n[3][45] = 1.16e-13; 
+        I_off_n[3][46] = 1.23e-13; I_off_n[3][47] = 1.30e-13; I_off_n[3][48] = 1.38e-13; I_off_n[3][49] = 1.46e-13; I_off_n[3][50] = 1.54e-13;
+        I_off_n[3][51] = 1.63e-13; I_off_n[3][52] = 1.72e-13; I_off_n[3][53] = 1.82e-13; I_off_n[3][54] = 1.92e-13; I_off_n[3][55] = 2.03e-13; 
+        I_off_n[3][56] = 2.15e-13; I_off_n[3][57] = 2.27e-13; I_off_n[3][58] = 2.39e-13; I_off_n[3][59] = 2.52e-13; I_off_n[3][60] = 2.66e-13;
+        I_off_n[3][61] = 2.80e-13; I_off_n[3][62] = 2.95e-13; I_off_n[3][63] = 3.11e-13; I_off_n[3][64] = 3.28e-13; I_off_n[3][65] = 3.46e-13; 
+        I_off_n[3][66] = 3.64e-13; I_off_n[3][67] = 3.83e-13; I_off_n[3][68] = 4.03e-13; I_off_n[3][69] = 4.24e-13; I_off_n[3][70] = 4.45e-13;
+        I_off_n[3][71] = 4.67e-13; I_off_n[3][72] = 4.91e-13; I_off_n[3][73] = 5.15e-13; I_off_n[3][74] = 5.41e-13; I_off_n[3][75] = 5.68e-13; 
+        I_off_n[3][76] = 5.96e-13; I_off_n[3][77] = 6.25e-13; I_off_n[3][78] = 6.54e-13; I_off_n[3][79] = 6.85e-13; I_off_n[3][80] = 7.17e-13;
+        I_off_n[3][81] = 7.50e-13; I_off_n[3][82] = 7.84e-13; I_off_n[3][83] = 8.20e-13; I_off_n[3][84] = 8.57e-13; I_off_n[3][85] = 8.96e-13; 
+        I_off_n[3][86] = 9.36e-13; I_off_n[3][87] = 9.77e-13; I_off_n[3][88] = 1.02e-12; I_off_n[3][89] = 1.06e-12; I_off_n[3][90] = 1.11e-12;
+        I_off_n[3][91] = 1.16e-12; I_off_n[3][92] = 1.21e-12; I_off_n[3][93] = 1.26e-12; I_off_n[3][94] = 1.31e-12; I_off_n[3][95] = 1.37e-12; 
+        I_off_n[3][96] = 1.42e-12; I_off_n[3][97] = 1.48e-12; I_off_n[3][98] = 1.54e-12; I_off_n[3][99] = 1.61e-12; I_off_n[3][100] = 1.67e-12;
       }
 
       //SRAM cell properties
@@ -578,6 +823,7 @@
       long_channel_leakage_reduction[0] = 1/3.74;
       //Using MASTAR, @380K, increase Lgate until Ion reduces to 90% or Lgate increase by 10%, whichever comes first
       //Ioff(Lgate normal)/Ioff(Lgate long)= 3.74.
+/*
       I_off_n[0][0] = 1.96e-7;
       I_off_n[0][10] = 2.29e-7;
       I_off_n[0][20] = 2.66e-7;
@@ -589,6 +835,7 @@
       I_off_n[0][80] = 5.48e-7;
       I_off_n[0][90] = 5.94e-7;
       I_off_n[0][100] = 6.3e-7;
+
       I_g_on_n[0][0]  = 4.09e-8;//A/micron
       I_g_on_n[0][10] = 4.09e-8;
       I_g_on_n[0][20] = 4.09e-8;
@@ -600,6 +847,51 @@
       I_g_on_n[0][80] = 4.09e-8;
       I_g_on_n[0][90] = 4.09e-8;
       I_g_on_n[0][100] = 4.09e-8;
+*/
+      /* Leakage current data were interpolated to support full-range leakage feedback.
+         Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+      I_g_on_n[0][0] = 4.09e-8; 
+      I_g_on_n[0][1] = 4.09e-8; I_g_on_n[0][2] = 4.09e-8; I_g_on_n[0][3] = 4.09e-8; I_g_on_n[0][4] = 4.09e-8; I_g_on_n[0][5] = 4.09e-8; 
+      I_g_on_n[0][6] = 4.09e-8; I_g_on_n[0][7] = 4.09e-8; I_g_on_n[0][8] = 4.09e-8; I_g_on_n[0][9] = 4.09e-8; I_g_on_n[0][10] = 4.09e-8;
+      I_g_on_n[0][11] = 4.09e-8; I_g_on_n[0][12] = 4.09e-8; I_g_on_n[0][13] = 4.09e-8; I_g_on_n[0][14] = 4.09e-8; I_g_on_n[0][15] = 4.09e-8; 
+      I_g_on_n[0][16] = 4.09e-8; I_g_on_n[0][17] = 4.09e-8; I_g_on_n[0][18] = 4.09e-8; I_g_on_n[0][19] = 4.09e-8; I_g_on_n[0][20] = 4.09e-8;
+      I_g_on_n[0][21] = 4.09e-8; I_g_on_n[0][22] = 4.09e-8; I_g_on_n[0][23] = 4.09e-8; I_g_on_n[0][24] = 4.09e-8; I_g_on_n[0][25] = 4.09e-8; 
+      I_g_on_n[0][26] = 4.09e-8; I_g_on_n[0][27] = 4.09e-8; I_g_on_n[0][28] = 4.09e-8; I_g_on_n[0][29] = 4.09e-8; I_g_on_n[0][30] = 4.09e-8;
+      I_g_on_n[0][31] = 4.09e-8; I_g_on_n[0][32] = 4.09e-8; I_g_on_n[0][33] = 4.09e-8; I_g_on_n[0][34] = 4.09e-8; I_g_on_n[0][35] = 4.09e-8; 
+      I_g_on_n[0][36] = 4.09e-8; I_g_on_n[0][37] = 4.09e-8; I_g_on_n[0][38] = 4.09e-8; I_g_on_n[0][39] = 4.09e-8; I_g_on_n[0][40] = 4.09e-8;
+      I_g_on_n[0][41] = 4.09e-8; I_g_on_n[0][42] = 4.09e-8; I_g_on_n[0][43] = 4.09e-8; I_g_on_n[0][44] = 4.09e-8; I_g_on_n[0][45] = 4.09e-8; 
+      I_g_on_n[0][46] = 4.09e-8; I_g_on_n[0][47] = 4.09e-8; I_g_on_n[0][48] = 4.09e-8; I_g_on_n[0][49] = 4.09e-8; I_g_on_n[0][50] = 4.09e-8;
+      I_g_on_n[0][51] = 4.09e-8; I_g_on_n[0][52] = 4.09e-8; I_g_on_n[0][53] = 4.09e-8; I_g_on_n[0][54] = 4.09e-8; I_g_on_n[0][55] = 4.09e-8; 
+      I_g_on_n[0][56] = 4.09e-8; I_g_on_n[0][57] = 4.09e-8; I_g_on_n[0][58] = 4.09e-8; I_g_on_n[0][59] = 4.09e-8; I_g_on_n[0][60] = 4.09e-8;
+      I_g_on_n[0][61] = 4.09e-8; I_g_on_n[0][62] = 4.09e-8; I_g_on_n[0][63] = 4.09e-8; I_g_on_n[0][64] = 4.09e-8; I_g_on_n[0][65] = 4.09e-8; 
+      I_g_on_n[0][66] = 4.09e-8; I_g_on_n[0][67] = 4.09e-8; I_g_on_n[0][68] = 4.09e-8; I_g_on_n[0][69] = 4.09e-8; I_g_on_n[0][70] = 4.09e-8;
+      I_g_on_n[0][71] = 4.09e-8; I_g_on_n[0][72] = 4.09e-8; I_g_on_n[0][73] = 4.09e-8; I_g_on_n[0][74] = 4.09e-8; I_g_on_n[0][75] = 4.09e-8; 
+      I_g_on_n[0][76] = 4.09e-8; I_g_on_n[0][77] = 4.09e-8; I_g_on_n[0][78] = 4.09e-8; I_g_on_n[0][79] = 4.09e-8; I_g_on_n[0][80] = 4.09e-8;
+      I_g_on_n[0][81] = 4.09e-8; I_g_on_n[0][82] = 4.09e-8; I_g_on_n[0][83] = 4.09e-8; I_g_on_n[0][84] = 4.09e-8; I_g_on_n[0][85] = 4.09e-8; 
+      I_g_on_n[0][86] = 4.09e-8; I_g_on_n[0][87] = 4.09e-8; I_g_on_n[0][88] = 4.09e-8; I_g_on_n[0][89] = 4.09e-8; I_g_on_n[0][90] = 4.09e-8;
+      I_g_on_n[0][91] = 4.09e-8; I_g_on_n[0][92] = 4.09e-8; I_g_on_n[0][93] = 4.09e-8; I_g_on_n[0][94] = 4.09e-8; I_g_on_n[0][95] = 4.09e-8; 
+      I_g_on_n[0][96] = 4.09e-8; I_g_on_n[0][97] = 4.09e-8; I_g_on_n[0][98] = 4.09e-8; I_g_on_n[0][99] = 4.09e-8; I_g_on_n[0][100] = 4.09e-8;
+      I_off_n[0][0] = 1.96e-7; 
+      I_off_n[0][1] = 1.99e-7; I_off_n[0][2] = 2.02e-7; I_off_n[0][3] = 2.05e-7; I_off_n[0][4] = 2.09e-7; I_off_n[0][5] = 2.12e-7; 
+      I_off_n[0][6] = 2.15e-7; I_off_n[0][7] = 2.19e-7; I_off_n[0][8] = 2.22e-7; I_off_n[0][9] = 2.26e-7; I_off_n[0][10] = 2.29e-7;
+      I_off_n[0][11] = 2.33e-7; I_off_n[0][12] = 2.36e-7; I_off_n[0][13] = 2.40e-7; I_off_n[0][14] = 2.43e-7; I_off_n[0][15] = 2.47e-7; 
+      I_off_n[0][16] = 2.51e-7; I_off_n[0][17] = 2.55e-7; I_off_n[0][18] = 2.58e-7; I_off_n[0][19] = 2.62e-7; I_off_n[0][20] = 2.66e-7;
+      I_off_n[0][21] = 2.70e-7; I_off_n[0][22] = 2.74e-7; I_off_n[0][23] = 2.77e-7; I_off_n[0][24] = 2.81e-7; I_off_n[0][25] = 2.85e-7; 
+      I_off_n[0][26] = 2.89e-7; I_off_n[0][27] = 2.93e-7; I_off_n[0][28] = 2.97e-7; I_off_n[0][29] = 3.01e-7; I_off_n[0][30] = 3.05e-7;
+      I_off_n[0][31] = 3.09e-7; I_off_n[0][32] = 3.13e-7; I_off_n[0][33] = 3.18e-7; I_off_n[0][34] = 3.22e-7; I_off_n[0][35] = 3.27e-7; 
+      I_off_n[0][36] = 3.31e-7; I_off_n[0][37] = 3.35e-7; I_off_n[0][38] = 3.40e-7; I_off_n[0][39] = 3.44e-7; I_off_n[0][40] = 3.49e-7;
+      I_off_n[0][41] = 3.53e-7; I_off_n[0][42] = 3.58e-7; I_off_n[0][43] = 3.63e-7; I_off_n[0][44] = 3.67e-7; I_off_n[0][45] = 3.72e-7; 
+      I_off_n[0][46] = 3.76e-7; I_off_n[0][47] = 3.81e-7; I_off_n[0][48] = 3.86e-7; I_off_n[0][49] = 3.90e-7; I_off_n[0][50] = 3.95e-7;
+      I_off_n[0][51] = 4.00e-7; I_off_n[0][52] = 4.05e-7; I_off_n[0][53] = 4.10e-7; I_off_n[0][54] = 4.15e-7; I_off_n[0][55] = 4.20e-7; 
+      I_off_n[0][56] = 4.25e-7; I_off_n[0][57] = 4.30e-7; I_off_n[0][58] = 4.35e-7; I_off_n[0][59] = 4.40e-7; I_off_n[0][60] = 4.45e-7;
+      I_off_n[0][61] = 4.50e-7; I_off_n[0][62] = 4.55e-7; I_off_n[0][63] = 4.60e-7; I_off_n[0][64] = 4.66e-7; I_off_n[0][65] = 4.71e-7; 
+      I_off_n[0][66] = 4.76e-7; I_off_n[0][67] = 4.81e-7; I_off_n[0][68] = 4.87e-7; I_off_n[0][69] = 4.92e-7; I_off_n[0][70] = 4.97e-7;
+      I_off_n[0][71] = 5.02e-7; I_off_n[0][72] = 5.07e-7; I_off_n[0][73] = 5.13e-7; I_off_n[0][74] = 5.18e-7; I_off_n[0][75] = 5.23e-7; 
+      I_off_n[0][76] = 5.28e-7; I_off_n[0][77] = 5.33e-7; I_off_n[0][78] = 5.38e-7; I_off_n[0][79] = 5.43e-7; I_off_n[0][80] = 5.48e-7;
+      I_off_n[0][81] = 5.53e-7; I_off_n[0][82] = 5.58e-7; I_off_n[0][83] = 5.63e-7; I_off_n[0][84] = 5.67e-7; I_off_n[0][85] = 5.72e-7; 
+      I_off_n[0][86] = 5.77e-7; I_off_n[0][87] = 5.81e-7; I_off_n[0][88] = 5.86e-7; I_off_n[0][89] = 5.90e-7; I_off_n[0][90] = 5.94e-7;
+      I_off_n[0][91] = 5.98e-7; I_off_n[0][92] = 6.02e-7; I_off_n[0][93] = 6.06e-7; I_off_n[0][94] = 6.10e-7; I_off_n[0][95] = 6.13e-7; 
+      I_off_n[0][96] = 6.17e-7; I_off_n[0][97] = 6.20e-7; I_off_n[0][98] = 6.24e-7; I_off_n[0][99] = 6.27e-7; I_off_n[0][100] = 6.30e-7;
 
       //ITRS LSTP device type
       vdd[1] = 1.2;
@@ -621,6 +913,7 @@
       Rnchannelon[1] = nmos_effective_resistance_multiplier * vdd[1] / I_on_n[1];
       Rpchannelon[1] = n_to_p_eff_curr_drv_ratio[1] * Rnchannelon[1];
       long_channel_leakage_reduction[1] = 1/2.82;
+/*
       I_off_n[1][0] = 9.12e-12;
       I_off_n[1][10] = 1.49e-11;
       I_off_n[1][20] = 2.36e-11;
@@ -644,6 +937,51 @@
       I_g_on_n[1][80] = 1.09e-10;
       I_g_on_n[1][90] = 1.09e-10;
       I_g_on_n[1][100] = 1.09e-10;
+*/
+      /* Leakage current data were interpolated to support full-range leakage feedback.
+         Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+      I_g_on_n[1][0] = 1.09e-10; 
+      I_g_on_n[1][1] = 1.09e-10; I_g_on_n[1][2] = 1.09e-10; I_g_on_n[1][3] = 1.09e-10; I_g_on_n[1][4] = 1.09e-10; I_g_on_n[1][5] = 1.09e-10; 
+      I_g_on_n[1][6] = 1.09e-10; I_g_on_n[1][7] = 1.09e-10; I_g_on_n[1][8] = 1.09e-10; I_g_on_n[1][9] = 1.09e-10; I_g_on_n[1][10] = 1.09e-10;
+      I_g_on_n[1][11] = 1.09e-10; I_g_on_n[1][12] = 1.09e-10; I_g_on_n[1][13] = 1.09e-10; I_g_on_n[1][14] = 1.09e-10; I_g_on_n[1][15] = 1.09e-10; 
+      I_g_on_n[1][16] = 1.09e-10; I_g_on_n[1][17] = 1.09e-10; I_g_on_n[1][18] = 1.09e-10; I_g_on_n[1][19] = 1.09e-10; I_g_on_n[1][20] = 1.09e-10;
+      I_g_on_n[1][21] = 1.09e-10; I_g_on_n[1][22] = 1.09e-10; I_g_on_n[1][23] = 1.09e-10; I_g_on_n[1][24] = 1.09e-10; I_g_on_n[1][25] = 1.09e-10; 
+      I_g_on_n[1][26] = 1.09e-10; I_g_on_n[1][27] = 1.09e-10; I_g_on_n[1][28] = 1.09e-10; I_g_on_n[1][29] = 1.09e-10; I_g_on_n[1][30] = 1.09e-10;
+      I_g_on_n[1][31] = 1.09e-10; I_g_on_n[1][32] = 1.09e-10; I_g_on_n[1][33] = 1.09e-10; I_g_on_n[1][34] = 1.09e-10; I_g_on_n[1][35] = 1.09e-10; 
+      I_g_on_n[1][36] = 1.09e-10; I_g_on_n[1][37] = 1.09e-10; I_g_on_n[1][38] = 1.09e-10; I_g_on_n[1][39] = 1.09e-10; I_g_on_n[1][40] = 1.09e-10;
+      I_g_on_n[1][41] = 1.09e-10; I_g_on_n[1][42] = 1.09e-10; I_g_on_n[1][43] = 1.09e-10; I_g_on_n[1][44] = 1.09e-10; I_g_on_n[1][45] = 1.09e-10; 
+      I_g_on_n[1][46] = 1.09e-10; I_g_on_n[1][47] = 1.09e-10; I_g_on_n[1][48] = 1.09e-10; I_g_on_n[1][49] = 1.09e-10; I_g_on_n[1][50] = 1.09e-10;
+      I_g_on_n[1][51] = 1.09e-10; I_g_on_n[1][52] = 1.09e-10; I_g_on_n[1][53] = 1.09e-10; I_g_on_n[1][54] = 1.09e-10; I_g_on_n[1][55] = 1.09e-10; 
+      I_g_on_n[1][56] = 1.09e-10; I_g_on_n[1][57] = 1.09e-10; I_g_on_n[1][58] = 1.09e-10; I_g_on_n[1][59] = 1.09e-10; I_g_on_n[1][60] = 1.09e-10;
+      I_g_on_n[1][61] = 1.09e-10; I_g_on_n[1][62] = 1.09e-10; I_g_on_n[1][63] = 1.09e-10; I_g_on_n[1][64] = 1.09e-10; I_g_on_n[1][65] = 1.09e-10; 
+      I_g_on_n[1][66] = 1.09e-10; I_g_on_n[1][67] = 1.09e-10; I_g_on_n[1][68] = 1.09e-10; I_g_on_n[1][69] = 1.09e-10; I_g_on_n[1][70] = 1.09e-10;
+      I_g_on_n[1][71] = 1.09e-10; I_g_on_n[1][72] = 1.09e-10; I_g_on_n[1][73] = 1.09e-10; I_g_on_n[1][74] = 1.09e-10; I_g_on_n[1][75] = 1.09e-10; 
+      I_g_on_n[1][76] = 1.09e-10; I_g_on_n[1][77] = 1.09e-10; I_g_on_n[1][78] = 1.09e-10; I_g_on_n[1][79] = 1.09e-10; I_g_on_n[1][80] = 1.09e-10;
+      I_g_on_n[1][81] = 1.09e-10; I_g_on_n[1][82] = 1.09e-10; I_g_on_n[1][83] = 1.09e-10; I_g_on_n[1][84] = 1.09e-10; I_g_on_n[1][85] = 1.09e-10; 
+      I_g_on_n[1][86] = 1.09e-10; I_g_on_n[1][87] = 1.09e-10; I_g_on_n[1][88] = 1.09e-10; I_g_on_n[1][89] = 1.09e-10; I_g_on_n[1][90] = 1.09e-10;
+      I_g_on_n[1][91] = 1.09e-10; I_g_on_n[1][92] = 1.09e-10; I_g_on_n[1][93] = 1.09e-10; I_g_on_n[1][94] = 1.09e-10; I_g_on_n[1][95] = 1.09e-10; 
+      I_g_on_n[1][96] = 1.09e-10; I_g_on_n[1][97] = 1.09e-10; I_g_on_n[1][98] = 1.09e-10; I_g_on_n[1][99] = 1.09e-10; I_g_on_n[1][100] = 1.09e-10;
+      I_off_n[1][0] = 9.12e-12; 
+      I_off_n[1][1] = 9.57e-12; I_off_n[1][2] = 1.01e-11; I_off_n[1][3] = 1.06e-11; I_off_n[1][4] = 1.11e-11; I_off_n[1][5] = 1.17e-11; 
+      I_off_n[1][6] = 1.23e-11; I_off_n[1][7] = 1.29e-11; I_off_n[1][8] = 1.35e-11; I_off_n[1][9] = 1.42e-11; I_off_n[1][10] = 1.49e-11;
+      I_off_n[1][11] = 1.56e-11; I_off_n[1][12] = 1.64e-11; I_off_n[1][13] = 1.71e-11; I_off_n[1][14] = 1.80e-11; I_off_n[1][15] = 1.88e-11; 
+      I_off_n[1][16] = 1.97e-11; I_off_n[1][17] = 2.06e-11; I_off_n[1][18] = 2.16e-11; I_off_n[1][19] = 2.26e-11; I_off_n[1][20] = 2.36e-11;
+      I_off_n[1][21] = 2.47e-11; I_off_n[1][22] = 2.58e-11; I_off_n[1][23] = 2.69e-11; I_off_n[1][24] = 2.81e-11; I_off_n[1][25] = 2.94e-11; 
+      I_off_n[1][26] = 3.07e-11; I_off_n[1][27] = 3.21e-11; I_off_n[1][28] = 3.35e-11; I_off_n[1][29] = 3.49e-11; I_off_n[1][30] = 3.64e-11;
+      I_off_n[1][31] = 3.79e-11; I_off_n[1][32] = 3.96e-11; I_off_n[1][33] = 4.12e-11; I_off_n[1][34] = 4.30e-11; I_off_n[1][35] = 4.48e-11; 
+      I_off_n[1][36] = 4.67e-11; I_off_n[1][37] = 4.86e-11; I_off_n[1][38] = 5.06e-11; I_off_n[1][39] = 5.27e-11; I_off_n[1][40] = 5.48e-11;
+      I_off_n[1][41] = 5.70e-11; I_off_n[1][42] = 5.93e-11; I_off_n[1][43] = 6.16e-11; I_off_n[1][44] = 6.41e-11; I_off_n[1][45] = 6.66e-11; 
+      I_off_n[1][46] = 6.93e-11; I_off_n[1][47] = 7.20e-11; I_off_n[1][48] = 7.47e-11; I_off_n[1][49] = 7.76e-11; I_off_n[1][50] = 8.05e-11;
+      I_off_n[1][51] = 8.35e-11; I_off_n[1][52] = 8.66e-11; I_off_n[1][53] = 8.98e-11; I_off_n[1][54] = 9.32e-11; I_off_n[1][55] = 9.66e-11; 
+      I_off_n[1][56] = 1.00e-10; I_off_n[1][57] = 1.04e-10; I_off_n[1][58] = 1.07e-10; I_off_n[1][59] = 1.11e-10; I_off_n[1][60] = 1.15e-10;
+      I_off_n[1][61] = 1.19e-10; I_off_n[1][62] = 1.23e-10; I_off_n[1][63] = 1.27e-10; I_off_n[1][64] = 1.32e-10; I_off_n[1][65] = 1.36e-10; 
+      I_off_n[1][66] = 1.40e-10; I_off_n[1][67] = 1.45e-10; I_off_n[1][68] = 1.50e-10; I_off_n[1][69] = 1.54e-10; I_off_n[1][70] = 1.59e-10;
+      I_off_n[1][71] = 1.64e-10; I_off_n[1][72] = 1.69e-10; I_off_n[1][73] = 1.74e-10; I_off_n[1][74] = 1.79e-10; I_off_n[1][75] = 1.84e-10; 
+      I_off_n[1][76] = 1.89e-10; I_off_n[1][77] = 1.94e-10; I_off_n[1][78] = 2.00e-10; I_off_n[1][79] = 2.05e-10; I_off_n[1][80] = 2.10e-10;
+      I_off_n[1][81] = 2.15e-10; I_off_n[1][82] = 2.20e-10; I_off_n[1][83] = 2.25e-10; I_off_n[1][84] = 2.30e-10; I_off_n[1][85] = 2.36e-10; 
+      I_off_n[1][86] = 2.41e-10; I_off_n[1][87] = 2.46e-10; I_off_n[1][88] = 2.51e-10; I_off_n[1][89] = 2.57e-10; I_off_n[1][90] = 2.62e-10;
+      I_off_n[1][91] = 2.68e-10; I_off_n[1][92] = 2.73e-10; I_off_n[1][93] = 2.79e-10; I_off_n[1][94] = 2.85e-10; I_off_n[1][95] = 2.91e-10; 
+      I_off_n[1][96] = 2.97e-10; I_off_n[1][97] = 3.03e-10; I_off_n[1][98] = 3.09e-10; I_off_n[1][99] = 3.15e-10; I_off_n[1][100] = 3.21e-10;
 
       //ITRS LOP device type
       vdd[2] = 0.8;
@@ -665,6 +1003,7 @@
       Rnchannelon[2] = nmos_effective_resistance_multiplier * vdd[2] / I_on_n[2];
       Rpchannelon[2] = n_to_p_eff_curr_drv_ratio[2] * Rnchannelon[2];
       long_channel_leakage_reduction[2] = 1/2.05;
+/*
       I_off_n[2][0] = 4.9e-9;
       I_off_n[2][10] = 6.49e-9;
       I_off_n[2][20] = 8.45e-9;
@@ -688,6 +1027,51 @@
       I_g_on_n[2][80] = 9.61e-9;
       I_g_on_n[2][90] = 9.61e-9;
       I_g_on_n[2][100] = 9.61e-9;
+*/
+      /* Leakage current data were interpolated to support full-range leakage feedback.
+         Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+      I_g_on_n[2][0] = 9.61e-9; 
+      I_g_on_n[2][1] = 9.61e-9; I_g_on_n[2][2] = 9.61e-9; I_g_on_n[2][3] = 9.61e-9; I_g_on_n[2][4] = 9.61e-9; I_g_on_n[2][5] = 9.61e-9; 
+      I_g_on_n[2][6] = 9.61e-9; I_g_on_n[2][7] = 9.61e-9; I_g_on_n[2][8] = 9.61e-9; I_g_on_n[2][9] = 9.61e-9; I_g_on_n[2][10] = 9.61e-9;
+      I_g_on_n[2][11] = 9.61e-9; I_g_on_n[2][12] = 9.61e-9; I_g_on_n[2][13] = 9.61e-9; I_g_on_n[2][14] = 9.61e-9; I_g_on_n[2][15] = 9.61e-9; 
+      I_g_on_n[2][16] = 9.61e-9; I_g_on_n[2][17] = 9.61e-9; I_g_on_n[2][18] = 9.61e-9; I_g_on_n[2][19] = 9.61e-9; I_g_on_n[2][20] = 9.61e-9;
+      I_g_on_n[2][21] = 9.61e-9; I_g_on_n[2][22] = 9.61e-9; I_g_on_n[2][23] = 9.61e-9; I_g_on_n[2][24] = 9.61e-9; I_g_on_n[2][25] = 9.61e-9; 
+      I_g_on_n[2][26] = 9.61e-9; I_g_on_n[2][27] = 9.61e-9; I_g_on_n[2][28] = 9.61e-9; I_g_on_n[2][29] = 9.61e-9; I_g_on_n[2][30] = 9.61e-9;
+      I_g_on_n[2][31] = 9.61e-9; I_g_on_n[2][32] = 9.61e-9; I_g_on_n[2][33] = 9.61e-9; I_g_on_n[2][34] = 9.61e-9; I_g_on_n[2][35] = 9.61e-9; 
+      I_g_on_n[2][36] = 9.61e-9; I_g_on_n[2][37] = 9.61e-9; I_g_on_n[2][38] = 9.61e-9; I_g_on_n[2][39] = 9.61e-9; I_g_on_n[2][40] = 9.61e-9;
+      I_g_on_n[2][41] = 9.61e-9; I_g_on_n[2][42] = 9.61e-9; I_g_on_n[2][43] = 9.61e-9; I_g_on_n[2][44] = 9.61e-9; I_g_on_n[2][45] = 9.61e-9; 
+      I_g_on_n[2][46] = 9.61e-9; I_g_on_n[2][47] = 9.61e-9; I_g_on_n[2][48] = 9.61e-9; I_g_on_n[2][49] = 9.61e-9; I_g_on_n[2][50] = 9.61e-9;
+      I_g_on_n[2][51] = 9.61e-9; I_g_on_n[2][52] = 9.61e-9; I_g_on_n[2][53] = 9.61e-9; I_g_on_n[2][54] = 9.61e-9; I_g_on_n[2][55] = 9.61e-9; 
+      I_g_on_n[2][56] = 9.61e-9; I_g_on_n[2][57] = 9.61e-9; I_g_on_n[2][58] = 9.61e-9; I_g_on_n[2][59] = 9.61e-9; I_g_on_n[2][60] = 9.61e-9;
+      I_g_on_n[2][61] = 9.61e-9; I_g_on_n[2][62] = 9.61e-9; I_g_on_n[2][63] = 9.61e-9; I_g_on_n[2][64] = 9.61e-9; I_g_on_n[2][65] = 9.61e-9; 
+      I_g_on_n[2][66] = 9.61e-9; I_g_on_n[2][67] = 9.61e-9; I_g_on_n[2][68] = 9.61e-9; I_g_on_n[2][69] = 9.61e-9; I_g_on_n[2][70] = 9.61e-9;
+      I_g_on_n[2][71] = 9.61e-9; I_g_on_n[2][72] = 9.61e-9; I_g_on_n[2][73] = 9.61e-9; I_g_on_n[2][74] = 9.61e-9; I_g_on_n[2][75] = 9.61e-9; 
+      I_g_on_n[2][76] = 9.61e-9; I_g_on_n[2][77] = 9.61e-9; I_g_on_n[2][78] = 9.61e-9; I_g_on_n[2][79] = 9.61e-9; I_g_on_n[2][80] = 9.61e-9;
+      I_g_on_n[2][81] = 9.61e-9; I_g_on_n[2][82] = 9.61e-9; I_g_on_n[2][83] = 9.61e-9; I_g_on_n[2][84] = 9.61e-9; I_g_on_n[2][85] = 9.61e-9; 
+      I_g_on_n[2][86] = 9.61e-9; I_g_on_n[2][87] = 9.61e-9; I_g_on_n[2][88] = 9.61e-9; I_g_on_n[2][89] = 9.61e-9; I_g_on_n[2][90] = 9.61e-9;
+      I_g_on_n[2][91] = 9.61e-9; I_g_on_n[2][92] = 9.61e-9; I_g_on_n[2][93] = 9.61e-9; I_g_on_n[2][94] = 9.61e-9; I_g_on_n[2][95] = 9.61e-9; 
+      I_g_on_n[2][96] = 9.61e-9; I_g_on_n[2][97] = 9.61e-9; I_g_on_n[2][98] = 9.61e-9; I_g_on_n[2][99] = 9.61e-9; I_g_on_n[2][100] = 9.61e-9;
+      I_off_n[2][0] = 4.9e-9; 
+      I_off_n[2][1] = 5.04e-9; I_off_n[2][2] = 5.19e-9; I_off_n[2][3] = 5.34e-9; I_off_n[2][4] = 5.49e-9; I_off_n[2][5] = 5.65e-9; 
+      I_off_n[2][6] = 5.81e-9; I_off_n[2][7] = 5.98e-9; I_off_n[2][8] = 6.14e-9; I_off_n[2][9] = 6.32e-9; I_off_n[2][10] = 6.49e-9;
+      I_off_n[2][11] = 6.67e-9; I_off_n[2][12] = 6.85e-9; I_off_n[2][13] = 7.04e-9; I_off_n[2][14] = 7.23e-9; I_off_n[2][15] = 7.42e-9; 
+      I_off_n[2][16] = 7.62e-9; I_off_n[2][17] = 7.82e-9; I_off_n[2][18] = 8.03e-9; I_off_n[2][19] = 8.24e-9; I_off_n[2][20] = 8.45e-9;
+      I_off_n[2][21] = 8.67e-9; I_off_n[2][22] = 8.88e-9; I_off_n[2][23] = 9.11e-9; I_off_n[2][24] = 9.34e-9; I_off_n[2][25] = 9.57e-9; 
+      I_off_n[2][26] = 9.80e-9; I_off_n[2][27] = 1.00e-8; I_off_n[2][28] = 1.03e-8; I_off_n[2][29] = 1.05e-8; I_off_n[2][30] = 1.08e-8;
+      I_off_n[2][31] = 1.11e-8; I_off_n[2][32] = 1.13e-8; I_off_n[2][33] = 1.16e-8; I_off_n[2][34] = 1.19e-8; I_off_n[2][35] = 1.22e-8; 
+      I_off_n[2][36] = 1.25e-8; I_off_n[2][37] = 1.28e-8; I_off_n[2][38] = 1.31e-8; I_off_n[2][39] = 1.34e-8; I_off_n[2][40] = 1.37e-8;
+      I_off_n[2][41] = 1.40e-8; I_off_n[2][42] = 1.43e-8; I_off_n[2][43] = 1.47e-8; I_off_n[2][44] = 1.50e-8; I_off_n[2][45] = 1.53e-8; 
+      I_off_n[2][46] = 1.57e-8; I_off_n[2][47] = 1.60e-8; I_off_n[2][48] = 1.64e-8; I_off_n[2][49] = 1.67e-8; I_off_n[2][50] = 1.71e-8;
+      I_off_n[2][51] = 1.75e-8; I_off_n[2][52] = 1.78e-8; I_off_n[2][53] = 1.82e-8; I_off_n[2][54] = 1.86e-8; I_off_n[2][55] = 1.90e-8; 
+      I_off_n[2][56] = 1.94e-8; I_off_n[2][57] = 1.97e-8; I_off_n[2][58] = 2.01e-8; I_off_n[2][59] = 2.05e-8; I_off_n[2][60] = 2.09e-8;
+      I_off_n[2][61] = 2.13e-8; I_off_n[2][62] = 2.17e-8; I_off_n[2][63] = 2.21e-8; I_off_n[2][64] = 2.25e-8; I_off_n[2][65] = 2.29e-8; 
+      I_off_n[2][66] = 2.33e-8; I_off_n[2][67] = 2.36e-8; I_off_n[2][68] = 2.40e-8; I_off_n[2][69] = 2.44e-8; I_off_n[2][70] = 2.48e-8;
+      I_off_n[2][71] = 2.52e-8; I_off_n[2][72] = 2.56e-8; I_off_n[2][73] = 2.59e-8; I_off_n[2][74] = 2.63e-8; I_off_n[2][75] = 2.67e-8; 
+      I_off_n[2][76] = 2.70e-8; I_off_n[2][77] = 2.74e-8; I_off_n[2][78] = 2.77e-8; I_off_n[2][79] = 2.81e-8; I_off_n[2][80] = 2.84e-8;
+      I_off_n[2][81] = 2.87e-8; I_off_n[2][82] = 2.90e-8; I_off_n[2][83] = 2.93e-8; I_off_n[2][84] = 2.96e-8; I_off_n[2][85] = 2.99e-8; 
+      I_off_n[2][86] = 3.02e-8; I_off_n[2][87] = 3.04e-8; I_off_n[2][88] = 3.07e-8; I_off_n[2][89] = 3.10e-8; I_off_n[2][90] = 3.13e-8;
+      I_off_n[2][91] = 3.16e-8; I_off_n[2][92] = 3.19e-8; I_off_n[2][93] = 3.22e-8; I_off_n[2][94] = 3.25e-8; I_off_n[2][95] = 3.28e-8; 
+      I_off_n[2][96] = 3.30e-8; I_off_n[2][97] = 3.33e-8; I_off_n[2][98] = 3.36e-8; I_off_n[2][99] = 3.39e-8; I_off_n[2][100] = 3.42e-8;
 
       if (ram_cell_tech_type == lp_dram)
       {
@@ -724,6 +1108,7 @@
         Rnchannelon[3] = nmos_effective_resistance_multiplier * curr_vpp / I_on_n[3];
         Rpchannelon[3] = n_to_p_eff_curr_drv_ratio[3] * Rnchannelon[3];
         long_channel_leakage_reduction[3] = 1;
+/*
         I_off_n[3][0]  = 2.23e-11;
         I_off_n[3][10] = 3.46e-11;
         I_off_n[3][20] = 5.24e-11;
@@ -735,6 +1120,30 @@
         I_off_n[3][80] = 3.63e-10;
         I_off_n[3][90] = 4.41e-10;
         I_off_n[3][100] = 5.36e-10;
+*/
+        /* Leakage current data were interpolated to support full-range leakage feedback.
+           Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+        I_off_n[3][0] = 2.23e-11; 
+        I_off_n[3][1] = 2.33e-11; I_off_n[3][2] = 2.43e-11; I_off_n[3][3] = 2.54e-11; I_off_n[3][4] = 2.66e-11; I_off_n[3][5] = 2.78e-11; 
+        I_off_n[3][6] = 2.91e-11; I_off_n[3][7] = 3.04e-11; I_off_n[3][8] = 3.18e-11; I_off_n[3][9] = 3.32e-11; I_off_n[3][10] = 3.46e-11;
+        I_off_n[3][11] = 3.61e-11; I_off_n[3][12] = 3.76e-11; I_off_n[3][13] = 3.93e-11; I_off_n[3][14] = 4.10e-11; I_off_n[3][15] = 4.27e-11; 
+        I_off_n[3][16] = 4.45e-11; I_off_n[3][17] = 4.64e-11; I_off_n[3][18] = 4.83e-11; I_off_n[3][19] = 5.03e-11; I_off_n[3][20] = 5.24e-11;
+        I_off_n[3][21] = 5.45e-11; I_off_n[3][22] = 5.67e-11; I_off_n[3][23] = 5.91e-11; I_off_n[3][24] = 6.14e-11; I_off_n[3][25] = 6.39e-11; 
+        I_off_n[3][26] = 6.65e-11; I_off_n[3][27] = 6.91e-11; I_off_n[3][28] = 7.18e-11; I_off_n[3][29] = 7.46e-11; I_off_n[3][30] = 7.75e-11;
+        I_off_n[3][31] = 8.05e-11; I_off_n[3][32] = 8.35e-11; I_off_n[3][33] = 8.67e-11; I_off_n[3][34] = 9.00e-11; I_off_n[3][35] = 9.35e-11; 
+        I_off_n[3][36] = 9.70e-11; I_off_n[3][37] = 1.01e-10; I_off_n[3][38] = 1.04e-10; I_off_n[3][39] = 1.08e-10; I_off_n[3][40] = 1.12e-10;
+        I_off_n[3][41] = 1.16e-10; I_off_n[3][42] = 1.20e-10; I_off_n[3][43] = 1.24e-10; I_off_n[3][44] = 1.29e-10; I_off_n[3][45] = 1.33e-10; 
+        I_off_n[3][46] = 1.38e-10; I_off_n[3][47] = 1.43e-10; I_off_n[3][48] = 1.48e-10; I_off_n[3][49] = 1.53e-10; I_off_n[3][50] = 1.58e-10;
+        I_off_n[3][51] = 1.63e-10; I_off_n[3][52] = 1.69e-10; I_off_n[3][53] = 1.75e-10; I_off_n[3][54] = 1.80e-10; I_off_n[3][55] = 1.86e-10; 
+        I_off_n[3][56] = 1.93e-10; I_off_n[3][57] = 1.99e-10; I_off_n[3][58] = 2.05e-10; I_off_n[3][59] = 2.12e-10; I_off_n[3][60] = 2.18e-10;
+        I_off_n[3][61] = 2.25e-10; I_off_n[3][62] = 2.31e-10; I_off_n[3][63] = 2.38e-10; I_off_n[3][64] = 2.45e-10; I_off_n[3][65] = 2.52e-10; 
+        I_off_n[3][66] = 2.59e-10; I_off_n[3][67] = 2.66e-10; I_off_n[3][68] = 2.74e-10; I_off_n[3][69] = 2.81e-10; I_off_n[3][70] = 2.88e-10;
+        I_off_n[3][71] = 2.95e-10; I_off_n[3][72] = 3.03e-10; I_off_n[3][73] = 3.10e-10; I_off_n[3][74] = 3.17e-10; I_off_n[3][75] = 3.25e-10; 
+        I_off_n[3][76] = 3.33e-10; I_off_n[3][77] = 3.40e-10; I_off_n[3][78] = 3.48e-10; I_off_n[3][79] = 3.55e-10; I_off_n[3][80] = 3.63e-10;
+        I_off_n[3][81] = 3.71e-10; I_off_n[3][82] = 3.78e-10; I_off_n[3][83] = 3.86e-10; I_off_n[3][84] = 3.93e-10; I_off_n[3][85] = 4.01e-10; 
+        I_off_n[3][86] = 4.09e-10; I_off_n[3][87] = 4.16e-10; I_off_n[3][88] = 4.24e-10; I_off_n[3][89] = 4.33e-10; I_off_n[3][90] = 4.41e-10;
+        I_off_n[3][91] = 4.50e-10; I_off_n[3][92] = 4.59e-10; I_off_n[3][93] = 4.68e-10; I_off_n[3][94] = 4.77e-10; I_off_n[3][95] = 4.86e-10; 
+        I_off_n[3][96] = 4.96e-10; I_off_n[3][97] = 5.06e-10; I_off_n[3][98] = 5.16e-10; I_off_n[3][99] = 5.26e-10; I_off_n[3][100] = 5.36e-10;
       }
       else if (ram_cell_tech_type == comm_dram)
       {
@@ -771,6 +1180,7 @@
         Rnchannelon[3] = nmos_effective_resistance_multiplier * curr_vpp / I_on_n[3];
         Rpchannelon[3] = n_to_p_eff_curr_drv_ratio[3] * Rnchannelon[3];
         long_channel_leakage_reduction[3] = 1;
+/*
         I_off_n[3][0]  = 1.80e-14;
         I_off_n[3][10] = 3.64e-14;
         I_off_n[3][20] = 7.03e-14;
@@ -782,6 +1192,30 @@
         I_off_n[3][80] = 1.78e-12;
         I_off_n[3][90] = 2.71e-12;
         I_off_n[3][100] = 3.99e-12;
+*/
+        /* Leakage current data were interpolated to support full-range leakage feedback.
+           Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+        I_off_n[3][0] = 1.80e-14; 
+        I_off_n[3][1] = 1.92e-14; I_off_n[3][2] = 2.05e-14; I_off_n[3][3] = 2.20e-14; I_off_n[3][4] = 2.37e-14; I_off_n[3][5] = 2.55e-14; 
+        I_off_n[3][6] = 2.75e-14; I_off_n[3][7] = 2.96e-14; I_off_n[3][8] = 3.18e-14; I_off_n[3][9] = 3.40e-14; I_off_n[3][10] = 3.64e-14;
+        I_off_n[3][11] = 3.89e-14; I_off_n[3][12] = 4.16e-14; I_off_n[3][13] = 4.45e-14; I_off_n[3][14] = 4.76e-14; I_off_n[3][15] = 5.09e-14; 
+        I_off_n[3][16] = 5.44e-14; I_off_n[3][17] = 5.81e-14; I_off_n[3][18] = 6.20e-14; I_off_n[3][19] = 6.60e-14; I_off_n[3][20] = 7.03e-14;
+        I_off_n[3][21] = 7.48e-14; I_off_n[3][22] = 7.97e-14; I_off_n[3][23] = 8.50e-14; I_off_n[3][24] = 9.06e-14; I_off_n[3][25] = 9.65e-14; 
+        I_off_n[3][26] = 1.03e-13; I_off_n[3][27] = 1.09e-13; I_off_n[3][28] = 1.16e-13; I_off_n[3][29] = 1.23e-13; I_off_n[3][30] = 1.31e-13;
+        I_off_n[3][31] = 1.39e-13; I_off_n[3][32] = 1.47e-13; I_off_n[3][33] = 1.57e-13; I_off_n[3][34] = 1.66e-13; I_off_n[3][35] = 1.76e-13; 
+        I_off_n[3][36] = 1.87e-13; I_off_n[3][37] = 1.98e-13; I_off_n[3][38] = 2.10e-13; I_off_n[3][39] = 2.22e-13; I_off_n[3][40] = 2.35e-13;
+        I_off_n[3][41] = 2.48e-13; I_off_n[3][42] = 2.63e-13; I_off_n[3][43] = 2.78e-13; I_off_n[3][44] = 2.94e-13; I_off_n[3][45] = 3.11e-13; 
+        I_off_n[3][46] = 3.29e-13; I_off_n[3][47] = 3.48e-13; I_off_n[3][48] = 3.68e-13; I_off_n[3][49] = 3.88e-13; I_off_n[3][50] = 4.09e-13;
+        I_off_n[3][51] = 4.31e-13; I_off_n[3][52] = 4.55e-13; I_off_n[3][53] = 4.79e-13; I_off_n[3][54] = 5.06e-13; I_off_n[3][55] = 5.33e-13; 
+        I_off_n[3][56] = 5.62e-13; I_off_n[3][57] = 5.92e-13; I_off_n[3][58] = 6.23e-13; I_off_n[3][59] = 6.55e-13; I_off_n[3][60] = 6.89e-13;
+        I_off_n[3][61] = 7.24e-13; I_off_n[3][62] = 7.62e-13; I_off_n[3][63] = 8.02e-13; I_off_n[3][64] = 8.43e-13; I_off_n[3][65] = 8.87e-13; 
+        I_off_n[3][66] = 9.32e-13; I_off_n[3][67] = 9.79e-13; I_off_n[3][68] = 1.03e-12; I_off_n[3][69] = 1.08e-12; I_off_n[3][70] = 1.13e-12;
+        I_off_n[3][71] = 1.18e-12; I_off_n[3][72] = 1.24e-12; I_off_n[3][73] = 1.30e-12; I_off_n[3][74] = 1.36e-12; I_off_n[3][75] = 1.43e-12; 
+        I_off_n[3][76] = 1.49e-12; I_off_n[3][77] = 1.56e-12; I_off_n[3][78] = 1.63e-12; I_off_n[3][79] = 1.70e-12; I_off_n[3][80] = 1.78e-12;
+        I_off_n[3][81] = 1.86e-12; I_off_n[3][82] = 1.94e-12; I_off_n[3][83] = 2.03e-12; I_off_n[3][84] = 2.11e-12; I_off_n[3][85] = 2.21e-12; 
+        I_off_n[3][86] = 2.30e-12; I_off_n[3][87] = 2.40e-12; I_off_n[3][88] = 2.50e-12; I_off_n[3][89] = 2.60e-12; I_off_n[3][90] = 2.71e-12;
+        I_off_n[3][91] = 2.82e-12; I_off_n[3][92] = 2.93e-12; I_off_n[3][93] = 3.05e-12; I_off_n[3][94] = 3.18e-12; I_off_n[3][95] = 3.30e-12; 
+        I_off_n[3][96] = 3.43e-12; I_off_n[3][97] = 3.57e-12; I_off_n[3][98] = 3.71e-12; I_off_n[3][99] = 3.85e-12; I_off_n[3][100] = 3.99e-12;
       }
 
       //SRAM cell properties
@@ -830,6 +1264,7 @@
       Rnchannelon[0] = nmos_effective_resistance_multiplier * vdd[0] / I_on_n[0];
       Rpchannelon[0] = n_to_p_eff_curr_drv_ratio[0] * Rnchannelon[0];
       long_channel_leakage_reduction[0] = 1/3.546;//Using MASTAR, @380K, increase Lgate until Ion reduces to 90%, Ioff(Lgate normal)/Ioff(Lgate long)= 3.74
+/*
       I_off_n[0][0] = 2.8e-7;
       I_off_n[0][10] = 3.28e-7;
       I_off_n[0][20] = 3.81e-7;
@@ -853,6 +1288,51 @@
       I_g_on_n[0][80] = 3.59e-8;
       I_g_on_n[0][90] = 3.59e-8;
       I_g_on_n[0][100] = 3.59e-8;
+*/
+      /* Leakage current data were interpolated to support full-range leakage feedback.
+         Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+        I_g_on_n[0][0] = 3.59e-8; 
+        I_g_on_n[0][1] = 3.59e-8; I_g_on_n[0][2] = 3.59e-8; I_g_on_n[0][3] = 3.59e-8; I_g_on_n[0][4] = 3.59e-8; I_g_on_n[0][5] = 3.59e-8; 
+        I_g_on_n[0][6] = 3.59e-8; I_g_on_n[0][7] = 3.59e-8; I_g_on_n[0][8] = 3.59e-8; I_g_on_n[0][9] = 3.59e-8; I_g_on_n[0][10] = 3.59e-8;
+        I_g_on_n[0][11] = 3.59e-8; I_g_on_n[0][12] = 3.59e-8; I_g_on_n[0][13] = 3.59e-8; I_g_on_n[0][14] = 3.59e-8; I_g_on_n[0][15] = 3.59e-8; 
+        I_g_on_n[0][16] = 3.59e-8; I_g_on_n[0][17] = 3.59e-8; I_g_on_n[0][18] = 3.59e-8; I_g_on_n[0][19] = 3.59e-8; I_g_on_n[0][20] = 3.59e-8;
+        I_g_on_n[0][21] = 3.59e-8; I_g_on_n[0][22] = 3.59e-8; I_g_on_n[0][23] = 3.59e-8; I_g_on_n[0][24] = 3.59e-8; I_g_on_n[0][25] = 3.59e-8; 
+        I_g_on_n[0][26] = 3.59e-8; I_g_on_n[0][27] = 3.59e-8; I_g_on_n[0][28] = 3.59e-8; I_g_on_n[0][29] = 3.59e-8; I_g_on_n[0][30] = 3.59e-8;
+        I_g_on_n[0][31] = 3.59e-8; I_g_on_n[0][32] = 3.59e-8; I_g_on_n[0][33] = 3.59e-8; I_g_on_n[0][34] = 3.59e-8; I_g_on_n[0][35] = 3.59e-8; 
+        I_g_on_n[0][36] = 3.59e-8; I_g_on_n[0][37] = 3.59e-8; I_g_on_n[0][38] = 3.59e-8; I_g_on_n[0][39] = 3.59e-8; I_g_on_n[0][40] = 3.59e-8;
+        I_g_on_n[0][41] = 3.59e-8; I_g_on_n[0][42] = 3.59e-8; I_g_on_n[0][43] = 3.59e-8; I_g_on_n[0][44] = 3.59e-8; I_g_on_n[0][45] = 3.59e-8; 
+        I_g_on_n[0][46] = 3.59e-8; I_g_on_n[0][47] = 3.59e-8; I_g_on_n[0][48] = 3.59e-8; I_g_on_n[0][49] = 3.59e-8; I_g_on_n[0][50] = 3.59e-8;
+        I_g_on_n[0][51] = 3.59e-8; I_g_on_n[0][52] = 3.59e-8; I_g_on_n[0][53] = 3.59e-8; I_g_on_n[0][54] = 3.59e-8; I_g_on_n[0][55] = 3.59e-8; 
+        I_g_on_n[0][56] = 3.59e-8; I_g_on_n[0][57] = 3.59e-8; I_g_on_n[0][58] = 3.59e-8; I_g_on_n[0][59] = 3.59e-8; I_g_on_n[0][60] = 3.59e-8;
+        I_g_on_n[0][61] = 3.59e-8; I_g_on_n[0][62] = 3.59e-8; I_g_on_n[0][63] = 3.59e-8; I_g_on_n[0][64] = 3.59e-8; I_g_on_n[0][65] = 3.59e-8; 
+        I_g_on_n[0][66] = 3.59e-8; I_g_on_n[0][67] = 3.59e-8; I_g_on_n[0][68] = 3.59e-8; I_g_on_n[0][69] = 3.59e-8; I_g_on_n[0][70] = 3.59e-8;
+        I_g_on_n[0][71] = 3.59e-8; I_g_on_n[0][72] = 3.59e-8; I_g_on_n[0][73] = 3.59e-8; I_g_on_n[0][74] = 3.59e-8; I_g_on_n[0][75] = 3.59e-8; 
+        I_g_on_n[0][76] = 3.59e-8; I_g_on_n[0][77] = 3.59e-8; I_g_on_n[0][78] = 3.59e-8; I_g_on_n[0][79] = 3.59e-8; I_g_on_n[0][80] = 3.59e-8;
+        I_g_on_n[0][81] = 3.59e-8; I_g_on_n[0][82] = 3.59e-8; I_g_on_n[0][83] = 3.59e-8; I_g_on_n[0][84] = 3.59e-8; I_g_on_n[0][85] = 3.59e-8; 
+        I_g_on_n[0][86] = 3.59e-8; I_g_on_n[0][87] = 3.59e-8; I_g_on_n[0][88] = 3.59e-8; I_g_on_n[0][89] = 3.59e-8; I_g_on_n[0][90] = 3.59e-8;
+        I_g_on_n[0][91] = 3.59e-8; I_g_on_n[0][92] = 3.59e-8; I_g_on_n[0][93] = 3.59e-8; I_g_on_n[0][94] = 3.59e-8; I_g_on_n[0][95] = 3.59e-8; 
+        I_g_on_n[0][96] = 3.59e-8; I_g_on_n[0][97] = 3.59e-8; I_g_on_n[0][98] = 3.59e-8; I_g_on_n[0][99] = 3.59e-8; I_g_on_n[0][100] = 3.59e-8;
+        I_off_n[0][0] = 2.80e-7; 
+        I_off_n[0][1] = 2.85e-7; I_off_n[0][2] = 2.89e-7; I_off_n[0][3] = 2.94e-7; I_off_n[0][4] = 2.99e-7; I_off_n[0][5] = 3.03e-7; 
+        I_off_n[0][6] = 3.08e-7; I_off_n[0][7] = 3.13e-7; I_off_n[0][8] = 3.18e-7; I_off_n[0][9] = 3.23e-7; I_off_n[0][10] = 3.28e-7;
+        I_off_n[0][11] = 3.33e-7; I_off_n[0][12] = 3.38e-7; I_off_n[0][13] = 3.43e-7; I_off_n[0][14] = 3.49e-7; I_off_n[0][15] = 3.54e-7; 
+        I_off_n[0][16] = 3.59e-7; I_off_n[0][17] = 3.65e-7; I_off_n[0][18] = 3.70e-7; I_off_n[0][19] = 3.75e-7; I_off_n[0][20] = 3.81e-7;
+        I_off_n[0][21] = 3.87e-7; I_off_n[0][22] = 3.92e-7; I_off_n[0][23] = 3.98e-7; I_off_n[0][24] = 4.04e-7; I_off_n[0][25] = 4.09e-7; 
+        I_off_n[0][26] = 4.15e-7; I_off_n[0][27] = 4.21e-7; I_off_n[0][28] = 4.27e-7; I_off_n[0][29] = 4.33e-7; I_off_n[0][30] = 4.39e-7;
+        I_off_n[0][31] = 4.45e-7; I_off_n[0][32] = 4.51e-7; I_off_n[0][33] = 4.57e-7; I_off_n[0][34] = 4.64e-7; I_off_n[0][35] = 4.70e-7; 
+        I_off_n[0][36] = 4.76e-7; I_off_n[0][37] = 4.83e-7; I_off_n[0][38] = 4.89e-7; I_off_n[0][39] = 4.96e-7; I_off_n[0][40] = 5.02e-7;
+        I_off_n[0][41] = 5.09e-7; I_off_n[0][42] = 5.15e-7; I_off_n[0][43] = 5.22e-7; I_off_n[0][44] = 5.28e-7; I_off_n[0][45] = 5.35e-7; 
+        I_off_n[0][46] = 5.42e-7; I_off_n[0][47] = 5.48e-7; I_off_n[0][48] = 5.55e-7; I_off_n[0][49] = 5.62e-7; I_off_n[0][50] = 5.69e-7;
+        I_off_n[0][51] = 5.76e-7; I_off_n[0][52] = 5.83e-7; I_off_n[0][53] = 5.90e-7; I_off_n[0][54] = 5.98e-7; I_off_n[0][55] = 6.05e-7; 
+        I_off_n[0][56] = 6.12e-7; I_off_n[0][57] = 6.20e-7; I_off_n[0][58] = 6.27e-7; I_off_n[0][59] = 6.34e-7; I_off_n[0][60] = 6.42e-7;
+        I_off_n[0][61] = 6.50e-7; I_off_n[0][62] = 6.57e-7; I_off_n[0][63] = 6.65e-7; I_off_n[0][64] = 6.73e-7; I_off_n[0][65] = 6.80e-7; 
+        I_off_n[0][66] = 6.88e-7; I_off_n[0][67] = 6.96e-7; I_off_n[0][68] = 7.04e-7; I_off_n[0][69] = 7.12e-7; I_off_n[0][70] = 7.20e-7;
+        I_off_n[0][71] = 7.28e-7; I_off_n[0][72] = 7.36e-7; I_off_n[0][73] = 7.44e-7; I_off_n[0][74] = 7.53e-7; I_off_n[0][75] = 7.61e-7; 
+        I_off_n[0][76] = 7.69e-7; I_off_n[0][77] = 7.78e-7; I_off_n[0][78] = 7.86e-7; I_off_n[0][79] = 7.94e-7; I_off_n[0][80] = 8.03e-7;
+        I_off_n[0][81] = 8.12e-7; I_off_n[0][82] = 8.20e-7; I_off_n[0][83] = 8.29e-7; I_off_n[0][84] = 8.38e-7; I_off_n[0][85] = 8.46e-7; 
+        I_off_n[0][86] = 8.55e-7; I_off_n[0][87] = 8.64e-7; I_off_n[0][88] = 8.73e-7; I_off_n[0][89] = 8.82e-7; I_off_n[0][90] = 8.91e-7;
+        I_off_n[0][91] = 9.00e-7; I_off_n[0][92] = 9.09e-7; I_off_n[0][93] = 9.18e-7; I_off_n[0][94] = 9.28e-7; I_off_n[0][95] = 9.37e-7; 
+        I_off_n[0][96] = 9.46e-7; I_off_n[0][97] = 9.56e-7; I_off_n[0][98] = 9.65e-7; I_off_n[0][99] = 9.74e-7; I_off_n[0][100] = 9.84e-7;
 
       //ITRS LSTP device type
       vdd[1] = 1.1;
@@ -874,6 +1354,7 @@
       Rnchannelon[1] = nmos_effective_resistance_multiplier * vdd[1] / I_on_n[1];
       Rpchannelon[1] = n_to_p_eff_curr_drv_ratio[1] * Rnchannelon[1];
       long_channel_leakage_reduction[1] = 1/2.08;
+/*
       I_off_n[1][0] = 1.01e-11;
       I_off_n[1][10] = 1.65e-11;
       I_off_n[1][20] = 2.62e-11;
@@ -897,6 +1378,51 @@
       I_g_on_n[1][80] = 9.47e-12;
       I_g_on_n[1][90] = 9.47e-12;
       I_g_on_n[1][100] = 9.47e-12;
+*/
+      /* Leakage current data were interpolated to support full-range leakage feedback.
+         Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+        I_g_on_n[1][0] = 9.47e-12; 
+        I_g_on_n[1][1] = 9.47e-12; I_g_on_n[1][2] = 9.47e-12; I_g_on_n[1][3] = 9.47e-12; I_g_on_n[1][4] = 9.47e-12; I_g_on_n[1][5] = 9.47e-12; 
+        I_g_on_n[1][6] = 9.47e-12; I_g_on_n[1][7] = 9.47e-12; I_g_on_n[1][8] = 9.47e-12; I_g_on_n[1][9] = 9.47e-12; I_g_on_n[1][10] = 9.47e-12;
+        I_g_on_n[1][11] = 9.47e-12; I_g_on_n[1][12] = 9.47e-12; I_g_on_n[1][13] = 9.47e-12; I_g_on_n[1][14] = 9.47e-12; I_g_on_n[1][15] = 9.47e-12; 
+        I_g_on_n[1][16] = 9.47e-12; I_g_on_n[1][17] = 9.47e-12; I_g_on_n[1][18] = 9.47e-12; I_g_on_n[1][19] = 9.47e-12; I_g_on_n[1][20] = 9.47e-12;
+        I_g_on_n[1][21] = 9.47e-12; I_g_on_n[1][22] = 9.47e-12; I_g_on_n[1][23] = 9.47e-12; I_g_on_n[1][24] = 9.47e-12; I_g_on_n[1][25] = 9.47e-12; 
+        I_g_on_n[1][26] = 9.47e-12; I_g_on_n[1][27] = 9.47e-12; I_g_on_n[1][28] = 9.47e-12; I_g_on_n[1][29] = 9.47e-12; I_g_on_n[1][30] = 9.47e-12;
+        I_g_on_n[1][31] = 9.47e-12; I_g_on_n[1][32] = 9.47e-12; I_g_on_n[1][33] = 9.47e-12; I_g_on_n[1][34] = 9.47e-12; I_g_on_n[1][35] = 9.47e-12; 
+        I_g_on_n[1][36] = 9.47e-12; I_g_on_n[1][37] = 9.47e-12; I_g_on_n[1][38] = 9.47e-12; I_g_on_n[1][39] = 9.47e-12; I_g_on_n[1][40] = 9.47e-12;
+        I_g_on_n[1][41] = 9.47e-12; I_g_on_n[1][42] = 9.47e-12; I_g_on_n[1][43] = 9.47e-12; I_g_on_n[1][44] = 9.47e-12; I_g_on_n[1][45] = 9.47e-12; 
+        I_g_on_n[1][46] = 9.47e-12; I_g_on_n[1][47] = 9.47e-12; I_g_on_n[1][48] = 9.47e-12; I_g_on_n[1][49] = 9.47e-12; I_g_on_n[1][50] = 9.47e-12;
+        I_g_on_n[1][51] = 9.47e-12; I_g_on_n[1][52] = 9.47e-12; I_g_on_n[1][53] = 9.47e-12; I_g_on_n[1][54] = 9.47e-12; I_g_on_n[1][55] = 9.47e-12; 
+        I_g_on_n[1][56] = 9.47e-12; I_g_on_n[1][57] = 9.47e-12; I_g_on_n[1][58] = 9.47e-12; I_g_on_n[1][59] = 9.47e-12; I_g_on_n[1][60] = 9.47e-12;
+        I_g_on_n[1][61] = 9.47e-12; I_g_on_n[1][62] = 9.47e-12; I_g_on_n[1][63] = 9.47e-12; I_g_on_n[1][64] = 9.47e-12; I_g_on_n[1][65] = 9.47e-12; 
+        I_g_on_n[1][66] = 9.47e-12; I_g_on_n[1][67] = 9.47e-12; I_g_on_n[1][68] = 9.47e-12; I_g_on_n[1][69] = 9.47e-12; I_g_on_n[1][70] = 9.47e-12;
+        I_g_on_n[1][71] = 9.47e-12; I_g_on_n[1][72] = 9.47e-12; I_g_on_n[1][73] = 9.47e-12; I_g_on_n[1][74] = 9.47e-12; I_g_on_n[1][75] = 9.47e-12; 
+        I_g_on_n[1][76] = 9.47e-12; I_g_on_n[1][77] = 9.47e-12; I_g_on_n[1][78] = 9.47e-12; I_g_on_n[1][79] = 9.47e-12; I_g_on_n[1][80] = 9.47e-12;
+        I_g_on_n[1][81] = 9.47e-12; I_g_on_n[1][82] = 9.47e-12; I_g_on_n[1][83] = 9.47e-12; I_g_on_n[1][84] = 9.47e-12; I_g_on_n[1][85] = 9.47e-12; 
+        I_g_on_n[1][86] = 9.47e-12; I_g_on_n[1][87] = 9.47e-12; I_g_on_n[1][88] = 9.47e-12; I_g_on_n[1][89] = 9.47e-12; I_g_on_n[1][90] = 9.47e-12;
+        I_g_on_n[1][91] = 9.47e-12; I_g_on_n[1][92] = 9.47e-12; I_g_on_n[1][93] = 9.47e-12; I_g_on_n[1][94] = 9.47e-12; I_g_on_n[1][95] = 9.47e-12; 
+        I_g_on_n[1][96] = 9.47e-12; I_g_on_n[1][97] = 9.47e-12; I_g_on_n[1][98] = 9.47e-12; I_g_on_n[1][99] = 9.47e-12; I_g_on_n[1][100] = 9.47e-12;
+        I_off_n[1][0] = 1.01e-11; 
+        I_off_n[1][1] = 1.06e-11; I_off_n[1][2] = 1.11e-11; I_off_n[1][3] = 1.17e-11; I_off_n[1][4] = 1.23e-11; I_off_n[1][5] = 1.29e-11; 
+        I_off_n[1][6] = 1.36e-11; I_off_n[1][7] = 1.43e-11; I_off_n[1][8] = 1.50e-11; I_off_n[1][9] = 1.57e-11; I_off_n[1][10] = 1.65e-11;
+        I_off_n[1][11] = 1.73e-11; I_off_n[1][12] = 1.81e-11; I_off_n[1][13] = 1.90e-11; I_off_n[1][14] = 1.99e-11; I_off_n[1][15] = 2.09e-11; 
+        I_off_n[1][16] = 2.19e-11; I_off_n[1][17] = 2.29e-11; I_off_n[1][18] = 2.40e-11; I_off_n[1][19] = 2.51e-11; I_off_n[1][20] = 2.62e-11;
+        I_off_n[1][21] = 2.74e-11; I_off_n[1][22] = 2.86e-11; I_off_n[1][23] = 2.99e-11; I_off_n[1][24] = 3.13e-11; I_off_n[1][25] = 3.27e-11; 
+        I_off_n[1][26] = 3.42e-11; I_off_n[1][27] = 3.57e-11; I_off_n[1][28] = 3.73e-11; I_off_n[1][29] = 3.89e-11; I_off_n[1][30] = 4.06e-11;
+        I_off_n[1][31] = 4.23e-11; I_off_n[1][32] = 4.41e-11; I_off_n[1][33] = 4.60e-11; I_off_n[1][34] = 4.80e-11; I_off_n[1][35] = 5.00e-11; 
+        I_off_n[1][36] = 5.21e-11; I_off_n[1][37] = 5.43e-11; I_off_n[1][38] = 5.65e-11; I_off_n[1][39] = 5.88e-11; I_off_n[1][40] = 6.12e-11;
+        I_off_n[1][41] = 6.37e-11; I_off_n[1][42] = 6.62e-11; I_off_n[1][43] = 6.89e-11; I_off_n[1][44] = 7.17e-11; I_off_n[1][45] = 7.45e-11; 
+        I_off_n[1][46] = 7.75e-11; I_off_n[1][47] = 8.05e-11; I_off_n[1][48] = 8.37e-11; I_off_n[1][49] = 8.69e-11; I_off_n[1][50] = 9.02e-11;
+        I_off_n[1][51] = 9.36e-11; I_off_n[1][52] = 9.72e-11; I_off_n[1][53] = 1.01e-10; I_off_n[1][54] = 1.05e-10; I_off_n[1][55] = 1.09e-10; 
+        I_off_n[1][56] = 1.13e-10; I_off_n[1][57] = 1.17e-10; I_off_n[1][58] = 1.21e-10; I_off_n[1][59] = 1.26e-10; I_off_n[1][60] = 1.30e-10;
+        I_off_n[1][61] = 1.35e-10; I_off_n[1][62] = 1.39e-10; I_off_n[1][63] = 1.44e-10; I_off_n[1][64] = 1.49e-10; I_off_n[1][65] = 1.55e-10; 
+        I_off_n[1][66] = 1.60e-10; I_off_n[1][67] = 1.66e-10; I_off_n[1][68] = 1.71e-10; I_off_n[1][69] = 1.77e-10; I_off_n[1][70] = 1.83e-10;
+        I_off_n[1][71] = 1.89e-10; I_off_n[1][72] = 1.95e-10; I_off_n[1][73] = 2.02e-10; I_off_n[1][74] = 2.09e-10; I_off_n[1][75] = 2.15e-10; 
+        I_off_n[1][76] = 2.22e-10; I_off_n[1][77] = 2.29e-10; I_off_n[1][78] = 2.37e-10; I_off_n[1][79] = 2.44e-10; I_off_n[1][80] = 2.51e-10;
+        I_off_n[1][81] = 2.58e-10; I_off_n[1][82] = 2.66e-10; I_off_n[1][83] = 2.74e-10; I_off_n[1][84] = 2.81e-10; I_off_n[1][85] = 2.89e-10; 
+        I_off_n[1][86] = 2.97e-10; I_off_n[1][87] = 3.05e-10; I_off_n[1][88] = 3.13e-10; I_off_n[1][89] = 3.21e-10; I_off_n[1][90] = 3.29e-10;
+        I_off_n[1][91] = 3.37e-10; I_off_n[1][92] = 3.45e-10; I_off_n[1][93] = 3.53e-10; I_off_n[1][94] = 3.61e-10; I_off_n[1][95] = 3.69e-10; 
+        I_off_n[1][96] = 3.77e-10; I_off_n[1][97] = 3.85e-10; I_off_n[1][98] = 3.94e-10; I_off_n[1][99] = 4.02e-10; I_off_n[1][100] = 4.10e-10;
 
       //ITRS LOP device type
       vdd[2] = 0.7;
@@ -918,6 +1444,7 @@
       Rnchannelon[2] = nmos_effective_resistance_multiplier * vdd[2] / I_on_n[2];
       Rpchannelon[2] = n_to_p_eff_curr_drv_ratio[2] * Rnchannelon[2];
       long_channel_leakage_reduction[2] = 1/1.92;
+/*
       I_off_n[2][0] = 4.03e-9;
       I_off_n[2][10] = 5.02e-9;
       I_off_n[2][20] = 6.18e-9;
@@ -941,6 +1468,51 @@
       I_g_on_n[2][80] = 1.29e-7;
       I_g_on_n[2][90] = 1.43e-7;
       I_g_on_n[2][100] = 1.54e-7;
+*/
+      /* Leakage current data were interpolated to support full-range leakage feedback.
+         Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+        I_g_on_n[2][0] = 3.24e-8; 
+        I_g_on_n[2][1] = 3.31e-8; I_g_on_n[2][2] = 3.38e-8; I_g_on_n[2][3] = 3.46e-8; I_g_on_n[2][4] = 3.53e-8; I_g_on_n[2][5] = 3.61e-8; 
+        I_g_on_n[2][6] = 3.69e-8; I_g_on_n[2][7] = 3.77e-8; I_g_on_n[2][8] = 3.85e-8; I_g_on_n[2][9] = 3.93e-8; I_g_on_n[2][10] = 4.01e-8;
+        I_g_on_n[2][11] = 4.09e-8; I_g_on_n[2][12] = 4.18e-8; I_g_on_n[2][13] = 4.26e-8; I_g_on_n[2][14] = 4.35e-8; I_g_on_n[2][15] = 4.44e-8; 
+        I_g_on_n[2][16] = 4.53e-8; I_g_on_n[2][17] = 4.62e-8; I_g_on_n[2][18] = 4.71e-8; I_g_on_n[2][19] = 4.81e-8; I_g_on_n[2][20] = 4.90e-8;
+        I_g_on_n[2][21] = 5.00e-8; I_g_on_n[2][22] = 5.09e-8; I_g_on_n[2][23] = 5.19e-8; I_g_on_n[2][24] = 5.29e-8; I_g_on_n[2][25] = 5.39e-8; 
+        I_g_on_n[2][26] = 5.50e-8; I_g_on_n[2][27] = 5.60e-8; I_g_on_n[2][28] = 5.71e-8; I_g_on_n[2][29] = 5.81e-8; I_g_on_n[2][30] = 5.92e-8;
+        I_g_on_n[2][31] = 6.03e-8; I_g_on_n[2][32] = 6.14e-8; I_g_on_n[2][33] = 6.25e-8; I_g_on_n[2][34] = 6.37e-8; I_g_on_n[2][35] = 6.48e-8; 
+        I_g_on_n[2][36] = 6.60e-8; I_g_on_n[2][37] = 6.72e-8; I_g_on_n[2][38] = 6.84e-8; I_g_on_n[2][39] = 6.96e-8; I_g_on_n[2][40] = 7.08e-8;
+        I_g_on_n[2][41] = 7.20e-8; I_g_on_n[2][42] = 7.33e-8; I_g_on_n[2][43] = 7.45e-8; I_g_on_n[2][44] = 7.58e-8; I_g_on_n[2][45] = 7.71e-8; 
+        I_g_on_n[2][46] = 7.84e-8; I_g_on_n[2][47] = 7.98e-8; I_g_on_n[2][48] = 8.11e-8; I_g_on_n[2][49] = 8.24e-8; I_g_on_n[2][50] = 8.38e-8;
+        I_g_on_n[2][51] = 8.52e-8; I_g_on_n[2][52] = 8.66e-8; I_g_on_n[2][53] = 8.80e-8; I_g_on_n[2][54] = 8.94e-8; I_g_on_n[2][55] = 9.08e-8; 
+        I_g_on_n[2][56] = 9.23e-8; I_g_on_n[2][57] = 9.37e-8; I_g_on_n[2][58] = 9.52e-8; I_g_on_n[2][59] = 9.67e-8; I_g_on_n[2][60] = 9.82e-8;
+        I_g_on_n[2][61] = 9.97e-8; I_g_on_n[2][62] = 1.01e-7; I_g_on_n[2][63] = 1.03e-7; I_g_on_n[2][64] = 1.04e-7; I_g_on_n[2][65] = 1.06e-7; 
+        I_g_on_n[2][66] = 1.08e-7; I_g_on_n[2][67] = 1.09e-7; I_g_on_n[2][68] = 1.11e-7; I_g_on_n[2][69] = 1.12e-7; I_g_on_n[2][70] = 1.14e-7;
+        I_g_on_n[2][71] = 1.16e-7; I_g_on_n[2][72] = 1.17e-7; I_g_on_n[2][73] = 1.19e-7; I_g_on_n[2][74] = 1.20e-7; I_g_on_n[2][75] = 1.22e-7; 
+        I_g_on_n[2][76] = 1.23e-7; I_g_on_n[2][77] = 1.25e-7; I_g_on_n[2][78] = 1.26e-7; I_g_on_n[2][79] = 1.28e-7; I_g_on_n[2][80] = 1.29e-7;
+        I_g_on_n[2][81] = 1.30e-7; I_g_on_n[2][82] = 1.32e-7; I_g_on_n[2][83] = 1.33e-7; I_g_on_n[2][84] = 1.35e-7; I_g_on_n[2][85] = 1.36e-7; 
+        I_g_on_n[2][86] = 1.38e-7; I_g_on_n[2][87] = 1.39e-7; I_g_on_n[2][88] = 1.40e-7; I_g_on_n[2][89] = 1.42e-7; I_g_on_n[2][90] = 1.43e-7;
+        I_g_on_n[2][91] = 1.44e-7; I_g_on_n[2][92] = 1.45e-7; I_g_on_n[2][93] = 1.47e-7; I_g_on_n[2][94] = 1.48e-7; I_g_on_n[2][95] = 1.49e-7; 
+        I_g_on_n[2][96] = 1.50e-7; I_g_on_n[2][97] = 1.51e-7; I_g_on_n[2][98] = 1.52e-7; I_g_on_n[2][99] = 1.53e-7; I_g_on_n[2][100] = 1.54e-7;
+        I_off_n[2][0] = 4.03e-9; 
+        I_off_n[2][1] = 4.12e-9; I_off_n[2][2] = 4.21e-9; I_off_n[2][3] = 4.31e-9; I_off_n[2][4] = 4.41e-9; I_off_n[2][5] = 4.50e-9; 
+        I_off_n[2][6] = 4.60e-9; I_off_n[2][7] = 4.71e-9; I_off_n[2][8] = 4.81e-9; I_off_n[2][9] = 4.91e-9; I_off_n[2][10] = 5.02e-9;
+        I_off_n[2][11] = 5.13e-9; I_off_n[2][12] = 5.24e-9; I_off_n[2][13] = 5.35e-9; I_off_n[2][14] = 5.46e-9; I_off_n[2][15] = 5.58e-9; 
+        I_off_n[2][16] = 5.70e-9; I_off_n[2][17] = 5.81e-9; I_off_n[2][18] = 5.93e-9; I_off_n[2][19] = 6.06e-9; I_off_n[2][20] = 6.18e-9;
+        I_off_n[2][21] = 6.30e-9; I_off_n[2][22] = 6.43e-9; I_off_n[2][23] = 6.56e-9; I_off_n[2][24] = 6.69e-9; I_off_n[2][25] = 6.82e-9; 
+        I_off_n[2][26] = 6.96e-9; I_off_n[2][27] = 7.09e-9; I_off_n[2][28] = 7.23e-9; I_off_n[2][29] = 7.37e-9; I_off_n[2][30] = 7.51e-9;
+        I_off_n[2][31] = 7.65e-9; I_off_n[2][32] = 7.80e-9; I_off_n[2][33] = 7.95e-9; I_off_n[2][34] = 8.10e-9; I_off_n[2][35] = 8.25e-9; 
+        I_off_n[2][36] = 8.40e-9; I_off_n[2][37] = 8.56e-9; I_off_n[2][38] = 8.72e-9; I_off_n[2][39] = 8.88e-9; I_off_n[2][40] = 9.04e-9;
+        I_off_n[2][41] = 9.21e-9; I_off_n[2][42] = 9.37e-9; I_off_n[2][43] = 9.55e-9; I_off_n[2][44] = 9.72e-9; I_off_n[2][45] = 9.90e-9; 
+        I_off_n[2][46] = 1.01e-8; I_off_n[2][47] = 1.03e-8; I_off_n[2][48] = 1.04e-8; I_off_n[2][49] = 1.06e-8; I_off_n[2][50] = 1.08e-8;
+        I_off_n[2][51] = 1.10e-8; I_off_n[2][52] = 1.12e-8; I_off_n[2][53] = 1.14e-8; I_off_n[2][54] = 1.15e-8; I_off_n[2][55] = 1.17e-8; 
+        I_off_n[2][56] = 1.19e-8; I_off_n[2][57] = 1.21e-8; I_off_n[2][58] = 1.23e-8; I_off_n[2][59] = 1.25e-8; I_off_n[2][60] = 1.27e-8;
+        I_off_n[2][61] = 1.29e-8; I_off_n[2][62] = 1.31e-8; I_off_n[2][63] = 1.33e-8; I_off_n[2][64] = 1.35e-8; I_off_n[2][65] = 1.37e-8; 
+        I_off_n[2][66] = 1.39e-8; I_off_n[2][67] = 1.41e-8; I_off_n[2][68] = 1.43e-8; I_off_n[2][69] = 1.45e-8; I_off_n[2][70] = 1.47e-8;
+        I_off_n[2][71] = 1.49e-8; I_off_n[2][72] = 1.51e-8; I_off_n[2][73] = 1.53e-8; I_off_n[2][74] = 1.55e-8; I_off_n[2][75] = 1.57e-8; 
+        I_off_n[2][76] = 1.59e-8; I_off_n[2][77] = 1.60e-8; I_off_n[2][78] = 1.62e-8; I_off_n[2][79] = 1.64e-8; I_off_n[2][80] = 1.66e-8;
+        I_off_n[2][81] = 1.68e-8; I_off_n[2][82] = 1.70e-8; I_off_n[2][83] = 1.71e-8; I_off_n[2][84] = 1.73e-8; I_off_n[2][85] = 1.75e-8; 
+        I_off_n[2][86] = 1.77e-8; I_off_n[2][87] = 1.79e-8; I_off_n[2][88] = 1.80e-8; I_off_n[2][89] = 1.82e-8; I_off_n[2][90] = 1.84e-8;
+        I_off_n[2][91] = 1.86e-8; I_off_n[2][92] = 1.88e-8; I_off_n[2][93] = 1.90e-8; I_off_n[2][94] = 1.91e-8; I_off_n[2][95] = 1.93e-8; 
+        I_off_n[2][96] = 1.95e-8; I_off_n[2][97] = 1.97e-8; I_off_n[2][98] = 1.99e-8; I_off_n[2][99] = 2.01e-8; I_off_n[2][100] = 2.03e-8;
 
       if (ram_cell_tech_type == lp_dram)
       {
@@ -977,6 +1549,7 @@
         Rnchannelon[3] = nmos_effective_resistance_multiplier * curr_vpp / I_on_n[3];
         Rpchannelon[3] = n_to_p_eff_curr_drv_ratio[3] * Rnchannelon[3];
         long_channel_leakage_reduction[3] = 1;
+/*
         I_off_n[3][0] = 2.54e-11;
         I_off_n[3][10] = 3.94e-11;
         I_off_n[3][20] = 5.95e-11;
@@ -988,6 +1561,30 @@
         I_off_n[3][80] = 4.26e-10;
         I_off_n[3][90] = 5.27e-10;
         I_off_n[3][100] = 6.46e-10;
+*/
+        /* Leakage current data were interpolated to support full-range leakage feedback.
+           Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+        I_off_n[3][0] = 2.54e-11; 
+        I_off_n[3][1] = 2.65e-11; I_off_n[3][2] = 2.77e-11; I_off_n[3][3] = 2.90e-11; I_off_n[3][4] = 3.03e-11; I_off_n[3][5] = 3.17e-11; 
+        I_off_n[3][6] = 3.31e-11; I_off_n[3][7] = 3.46e-11; I_off_n[3][8] = 3.62e-11; I_off_n[3][9] = 3.78e-11; I_off_n[3][10] = 3.94e-11;
+        I_off_n[3][11] = 4.11e-11; I_off_n[3][12] = 4.28e-11; I_off_n[3][13] = 4.47e-11; I_off_n[3][14] = 4.66e-11; I_off_n[3][15] = 4.86e-11; 
+        I_off_n[3][16] = 5.06e-11; I_off_n[3][17] = 5.27e-11; I_off_n[3][18] = 5.49e-11; I_off_n[3][19] = 5.72e-11; I_off_n[3][20] = 5.95e-11;
+        I_off_n[3][21] = 6.19e-11; I_off_n[3][22] = 6.44e-11; I_off_n[3][23] = 6.70e-11; I_off_n[3][24] = 6.97e-11; I_off_n[3][25] = 7.25e-11; 
+        I_off_n[3][26] = 7.54e-11; I_off_n[3][27] = 7.84e-11; I_off_n[3][28] = 8.15e-11; I_off_n[3][29] = 8.47e-11; I_off_n[3][30] = 8.79e-11;
+        I_off_n[3][31] = 9.13e-11; I_off_n[3][32] = 9.47e-11; I_off_n[3][33] = 9.84e-11; I_off_n[3][34] = 1.02e-10; I_off_n[3][35] = 1.06e-10; 
+        I_off_n[3][36] = 1.10e-10; I_off_n[3][37] = 1.14e-10; I_off_n[3][38] = 1.18e-10; I_off_n[3][39] = 1.23e-10; I_off_n[3][40] = 1.27e-10;
+        I_off_n[3][41] = 1.32e-10; I_off_n[3][42] = 1.36e-10; I_off_n[3][43] = 1.41e-10; I_off_n[3][44] = 1.46e-10; I_off_n[3][45] = 1.51e-10; 
+        I_off_n[3][46] = 1.56e-10; I_off_n[3][47] = 1.62e-10; I_off_n[3][48] = 1.67e-10; I_off_n[3][49] = 1.73e-10; I_off_n[3][50] = 1.79e-10;
+        I_off_n[3][51] = 1.85e-10; I_off_n[3][52] = 1.91e-10; I_off_n[3][53] = 1.98e-10; I_off_n[3][54] = 2.04e-10; I_off_n[3][55] = 2.11e-10; 
+        I_off_n[3][56] = 2.18e-10; I_off_n[3][57] = 2.25e-10; I_off_n[3][58] = 2.32e-10; I_off_n[3][59] = 2.40e-10; I_off_n[3][60] = 2.47e-10;
+        I_off_n[3][61] = 2.55e-10; I_off_n[3][62] = 2.63e-10; I_off_n[3][63] = 2.71e-10; I_off_n[3][64] = 2.79e-10; I_off_n[3][65] = 2.87e-10; 
+        I_off_n[3][66] = 2.96e-10; I_off_n[3][67] = 3.04e-10; I_off_n[3][68] = 3.13e-10; I_off_n[3][69] = 3.22e-10; I_off_n[3][70] = 3.31e-10;
+        I_off_n[3][71] = 3.40e-10; I_off_n[3][72] = 3.49e-10; I_off_n[3][73] = 3.58e-10; I_off_n[3][74] = 3.68e-10; I_off_n[3][75] = 3.77e-10; 
+        I_off_n[3][76] = 3.87e-10; I_off_n[3][77] = 3.97e-10; I_off_n[3][78] = 4.06e-10; I_off_n[3][79] = 4.16e-10; I_off_n[3][80] = 4.26e-10;
+        I_off_n[3][81] = 4.36e-10; I_off_n[3][82] = 4.46e-10; I_off_n[3][83] = 4.55e-10; I_off_n[3][84] = 4.65e-10; I_off_n[3][85] = 4.75e-10; 
+        I_off_n[3][86] = 4.85e-10; I_off_n[3][87] = 4.95e-10; I_off_n[3][88] = 5.06e-10; I_off_n[3][89] = 5.16e-10; I_off_n[3][90] = 5.27e-10;
+        I_off_n[3][91] = 5.38e-10; I_off_n[3][92] = 5.49e-10; I_off_n[3][93] = 5.61e-10; I_off_n[3][94] = 5.72e-10; I_off_n[3][95] = 5.84e-10; 
+        I_off_n[3][96] = 5.96e-10; I_off_n[3][97] = 6.08e-10; I_off_n[3][98] = 6.21e-10; I_off_n[3][99] = 6.33e-10; I_off_n[3][100] = 6.46e-10;
       }
       else if (ram_cell_tech_type == comm_dram)
       {
@@ -1024,6 +1621,7 @@
         Rnchannelon[3] = nmos_effective_resistance_multiplier * curr_vpp / I_on_n[3];
         Rpchannelon[3] = n_to_p_eff_curr_drv_ratio[3] * Rnchannelon[3];
         long_channel_leakage_reduction[3] = 1;
+/*
         I_off_n[3][0] = 1.31e-14;
         I_off_n[3][10] = 2.68e-14;
         I_off_n[3][20] = 5.25e-14;
@@ -1035,6 +1633,30 @@
         I_off_n[3][80] = 1.42e-12;
         I_off_n[3][90] = 2.20e-12;
         I_off_n[3][100] = 3.29e-12;
+*/
+        /* Leakage current data were interpolated to support full-range leakage feedback.
+           Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+        I_off_n[3][0] = 1.31e-14; 
+        I_off_n[3][1] = 1.39e-14; I_off_n[3][2] = 1.49e-14; I_off_n[3][3] = 1.61e-14; I_off_n[3][4] = 1.73e-14; I_off_n[3][5] = 1.87e-14; 
+        I_off_n[3][6] = 2.01e-14; I_off_n[3][7] = 2.17e-14; I_off_n[3][8] = 2.33e-14; I_off_n[3][9] = 2.50e-14; I_off_n[3][10] = 2.68e-14;
+        I_off_n[3][11] = 2.87e-14; I_off_n[3][12] = 3.07e-14; I_off_n[3][13] = 3.29e-14; I_off_n[3][14] = 3.52e-14; I_off_n[3][15] = 3.78e-14; 
+        I_off_n[3][16] = 4.04e-14; I_off_n[3][17] = 4.32e-14; I_off_n[3][18] = 4.62e-14; I_off_n[3][19] = 4.93e-14; I_off_n[3][20] = 5.25e-14;
+        I_off_n[3][21] = 5.59e-14; I_off_n[3][22] = 5.97e-14; I_off_n[3][23] = 6.37e-14; I_off_n[3][24] = 6.79e-14; I_off_n[3][25] = 7.24e-14; 
+        I_off_n[3][26] = 7.72e-14; I_off_n[3][27] = 8.23e-14; I_off_n[3][28] = 8.75e-14; I_off_n[3][29] = 9.30e-14; I_off_n[3][30] = 9.88e-14;
+        I_off_n[3][31] = 1.05e-13; I_off_n[3][32] = 1.11e-13; I_off_n[3][33] = 1.18e-13; I_off_n[3][34] = 1.26e-13; I_off_n[3][35] = 1.34e-13; 
+        I_off_n[3][36] = 1.42e-13; I_off_n[3][37] = 1.51e-13; I_off_n[3][38] = 1.60e-13; I_off_n[3][39] = 1.69e-13; I_off_n[3][40] = 1.79e-13;
+        I_off_n[3][41] = 1.89e-13; I_off_n[3][42] = 2.01e-13; I_off_n[3][43] = 2.13e-13; I_off_n[3][44] = 2.25e-13; I_off_n[3][45] = 2.39e-13; 
+        I_off_n[3][46] = 2.53e-13; I_off_n[3][47] = 2.67e-13; I_off_n[3][48] = 2.83e-13; I_off_n[3][49] = 2.98e-13; I_off_n[3][50] = 3.15e-13;
+        I_off_n[3][51] = 3.32e-13; I_off_n[3][52] = 3.51e-13; I_off_n[3][53] = 3.70e-13; I_off_n[3][54] = 3.91e-13; I_off_n[3][55] = 4.13e-13; 
+        I_off_n[3][56] = 4.35e-13; I_off_n[3][57] = 4.59e-13; I_off_n[3][58] = 4.84e-13; I_off_n[3][59] = 5.09e-13; I_off_n[3][60] = 5.36e-13;
+        I_off_n[3][61] = 5.64e-13; I_off_n[3][62] = 5.94e-13; I_off_n[3][63] = 6.25e-13; I_off_n[3][64] = 6.58e-13; I_off_n[3][65] = 6.92e-13; 
+        I_off_n[3][66] = 7.28e-13; I_off_n[3][67] = 7.65e-13; I_off_n[3][68] = 8.04e-13; I_off_n[3][69] = 8.44e-13; I_off_n[3][70] = 8.86e-13;
+        I_off_n[3][71] = 9.29e-13; I_off_n[3][72] = 9.75e-13; I_off_n[3][73] = 1.02e-12; I_off_n[3][74] = 1.07e-12; I_off_n[3][75] = 1.13e-12; 
+        I_off_n[3][76] = 1.18e-12; I_off_n[3][77] = 1.24e-12; I_off_n[3][78] = 1.30e-12; I_off_n[3][79] = 1.36e-12; I_off_n[3][80] = 1.42e-12;
+        I_off_n[3][81] = 1.49e-12; I_off_n[3][82] = 1.55e-12; I_off_n[3][83] = 1.62e-12; I_off_n[3][84] = 1.70e-12; I_off_n[3][85] = 1.78e-12; 
+        I_off_n[3][86] = 1.86e-12; I_off_n[3][87] = 1.94e-12; I_off_n[3][88] = 2.02e-12; I_off_n[3][89] = 2.11e-12; I_off_n[3][90] = 2.20e-12;
+        I_off_n[3][91] = 2.29e-12; I_off_n[3][92] = 2.39e-12; I_off_n[3][93] = 2.49e-12; I_off_n[3][94] = 2.60e-12; I_off_n[3][95] = 2.70e-12; 
+        I_off_n[3][96] = 2.81e-12; I_off_n[3][97] = 2.93e-12; I_off_n[3][98] = 3.05e-12; I_off_n[3][99] = 3.17e-12; I_off_n[3][100] = 3.29e-12;
       }
 
 
@@ -1086,6 +1708,7 @@
       long_channel_leakage_reduction[0] = 1/3.706;
       //Using MASTAR, @300K (380K does not work in MASTAR), increase Lgate until Ion reduces to 95% or Lgate increase by 5% (DG device can only increase by 5%),
       //whichever comes first
+/*
       I_off_n[0][0] = 1.52e-7;
       I_off_n[0][10] = 1.55e-7;
       I_off_n[0][20] = 1.59e-7;
@@ -1109,6 +1732,51 @@
       I_g_on_n[0][80] = 6.55e-8;
       I_g_on_n[0][90] = 6.55e-8;
       I_g_on_n[0][100] = 6.55e-8;
+*/
+      /* Leakage current data were interpolated to support full-range leakage feedback.
+         Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+      I_g_on_n[0][0] = 6.55e-8; 
+      I_g_on_n[0][1] = 6.55e-8; I_g_on_n[0][2] = 6.55e-8; I_g_on_n[0][3] = 6.55e-8; I_g_on_n[0][4] = 6.55e-8; I_g_on_n[0][5] = 6.55e-8; 
+      I_g_on_n[0][6] = 6.55e-8; I_g_on_n[0][7] = 6.55e-8; I_g_on_n[0][8] = 6.55e-8; I_g_on_n[0][9] = 6.55e-8; I_g_on_n[0][10] = 6.55e-8;
+      I_g_on_n[0][11] = 6.55e-8; I_g_on_n[0][12] = 6.55e-8; I_g_on_n[0][13] = 6.55e-8; I_g_on_n[0][14] = 6.55e-8; I_g_on_n[0][15] = 6.55e-8; 
+      I_g_on_n[0][16] = 6.55e-8; I_g_on_n[0][17] = 6.55e-8; I_g_on_n[0][18] = 6.55e-8; I_g_on_n[0][19] = 6.55e-8; I_g_on_n[0][20] = 6.55e-8;
+      I_g_on_n[0][21] = 6.55e-8; I_g_on_n[0][22] = 6.55e-8; I_g_on_n[0][23] = 6.55e-8; I_g_on_n[0][24] = 6.55e-8; I_g_on_n[0][25] = 6.55e-8; 
+      I_g_on_n[0][26] = 6.55e-8; I_g_on_n[0][27] = 6.55e-8; I_g_on_n[0][28] = 6.55e-8; I_g_on_n[0][29] = 6.55e-8; I_g_on_n[0][30] = 6.55e-8;
+      I_g_on_n[0][31] = 6.55e-8; I_g_on_n[0][32] = 6.55e-8; I_g_on_n[0][33] = 6.55e-8; I_g_on_n[0][34] = 6.55e-8; I_g_on_n[0][35] = 6.55e-8; 
+      I_g_on_n[0][36] = 6.55e-8; I_g_on_n[0][37] = 6.55e-8; I_g_on_n[0][38] = 6.55e-8; I_g_on_n[0][39] = 6.55e-8; I_g_on_n[0][40] = 6.55e-8;
+      I_g_on_n[0][41] = 6.55e-8; I_g_on_n[0][42] = 6.55e-8; I_g_on_n[0][43] = 6.55e-8; I_g_on_n[0][44] = 6.55e-8; I_g_on_n[0][45] = 6.55e-8; 
+      I_g_on_n[0][46] = 6.55e-8; I_g_on_n[0][47] = 6.55e-8; I_g_on_n[0][48] = 6.55e-8; I_g_on_n[0][49] = 6.55e-8; I_g_on_n[0][50] = 6.55e-8;
+      I_g_on_n[0][51] = 6.55e-8; I_g_on_n[0][52] = 6.55e-8; I_g_on_n[0][53] = 6.55e-8; I_g_on_n[0][54] = 6.55e-8; I_g_on_n[0][55] = 6.55e-8; 
+      I_g_on_n[0][56] = 6.55e-8; I_g_on_n[0][57] = 6.55e-8; I_g_on_n[0][58] = 6.55e-8; I_g_on_n[0][59] = 6.55e-8; I_g_on_n[0][60] = 6.55e-8;
+      I_g_on_n[0][61] = 6.55e-8; I_g_on_n[0][62] = 6.55e-8; I_g_on_n[0][63] = 6.55e-8; I_g_on_n[0][64] = 6.55e-8; I_g_on_n[0][65] = 6.55e-8; 
+      I_g_on_n[0][66] = 6.55e-8; I_g_on_n[0][67] = 6.55e-8; I_g_on_n[0][68] = 6.55e-8; I_g_on_n[0][69] = 6.55e-8; I_g_on_n[0][70] = 6.55e-8;
+      I_g_on_n[0][71] = 6.55e-8; I_g_on_n[0][72] = 6.55e-8; I_g_on_n[0][73] = 6.55e-8; I_g_on_n[0][74] = 6.55e-8; I_g_on_n[0][75] = 6.55e-8; 
+      I_g_on_n[0][76] = 6.55e-8; I_g_on_n[0][77] = 6.55e-8; I_g_on_n[0][78] = 6.55e-8; I_g_on_n[0][79] = 6.55e-8; I_g_on_n[0][80] = 6.55e-8;
+      I_g_on_n[0][81] = 6.55e-8; I_g_on_n[0][82] = 6.55e-8; I_g_on_n[0][83] = 6.55e-8; I_g_on_n[0][84] = 6.55e-8; I_g_on_n[0][85] = 6.55e-8; 
+      I_g_on_n[0][86] = 6.55e-8; I_g_on_n[0][87] = 6.55e-8; I_g_on_n[0][88] = 6.55e-8; I_g_on_n[0][89] = 6.55e-8; I_g_on_n[0][90] = 6.55e-8;
+      I_g_on_n[0][91] = 6.55e-8; I_g_on_n[0][92] = 6.55e-8; I_g_on_n[0][93] = 6.55e-8; I_g_on_n[0][94] = 6.55e-8; I_g_on_n[0][95] = 6.55e-8; 
+      I_g_on_n[0][96] = 6.55e-8; I_g_on_n[0][97] = 6.55e-8; I_g_on_n[0][98] = 6.55e-8; I_g_on_n[0][99] = 6.55e-8; I_g_on_n[0][100] = 6.55e-8;
+      I_off_n[0][0] = 1.52e-7; 
+      I_off_n[0][1] = 1.52e-7; I_off_n[0][2] = 1.53e-7; I_off_n[0][3] = 1.53e-7; I_off_n[0][4] = 1.53e-7; I_off_n[0][5] = 1.53e-7; 
+      I_off_n[0][6] = 1.54e-7; I_off_n[0][7] = 1.54e-7; I_off_n[0][8] = 1.54e-7; I_off_n[0][9] = 1.55e-7; I_off_n[0][10] = 1.55e-7;
+      I_off_n[0][11] = 1.55e-7; I_off_n[0][12] = 1.56e-7; I_off_n[0][13] = 1.56e-7; I_off_n[0][14] = 1.56e-7; I_off_n[0][15] = 1.57e-7; 
+      I_off_n[0][16] = 1.57e-7; I_off_n[0][17] = 1.58e-7; I_off_n[0][18] = 1.58e-7; I_off_n[0][19] = 1.58e-7; I_off_n[0][20] = 1.59e-7;
+      I_off_n[0][21] = 1.60e-7; I_off_n[0][22] = 1.60e-7; I_off_n[0][23] = 1.61e-7; I_off_n[0][24] = 1.62e-7; I_off_n[0][25] = 1.63e-7; 
+      I_off_n[0][26] = 1.64e-7; I_off_n[0][27] = 1.65e-7; I_off_n[0][28] = 1.66e-7; I_off_n[0][29] = 1.67e-7; I_off_n[0][30] = 1.68e-7;
+      I_off_n[0][31] = 1.69e-7; I_off_n[0][32] = 1.71e-7; I_off_n[0][33] = 1.72e-7; I_off_n[0][34] = 1.74e-7; I_off_n[0][35] = 1.76e-7; 
+      I_off_n[0][36] = 1.79e-7; I_off_n[0][37] = 1.81e-7; I_off_n[0][38] = 1.84e-7; I_off_n[0][39] = 1.87e-7; I_off_n[0][40] = 1.90e-7;
+      I_off_n[0][41] = 1.94e-7; I_off_n[0][42] = 1.99e-7; I_off_n[0][43] = 2.04e-7; I_off_n[0][44] = 2.11e-7; I_off_n[0][45] = 2.19e-7; 
+      I_off_n[0][46] = 2.27e-7; I_off_n[0][47] = 2.36e-7; I_off_n[0][48] = 2.46e-7; I_off_n[0][49] = 2.57e-7; I_off_n[0][50] = 2.69e-7;
+      I_off_n[0][51] = 2.83e-7; I_off_n[0][52] = 3.01e-7; I_off_n[0][53] = 3.22e-7; I_off_n[0][54] = 3.46e-7; I_off_n[0][55] = 3.73e-7; 
+      I_off_n[0][56] = 4.02e-7; I_off_n[0][57] = 4.33e-7; I_off_n[0][58] = 4.65e-7; I_off_n[0][59] = 4.98e-7; I_off_n[0][60] = 5.32e-7;
+      I_off_n[0][61] = 5.69e-7; I_off_n[0][62] = 6.09e-7; I_off_n[0][63] = 6.54e-7; I_off_n[0][64] = 7.01e-7; I_off_n[0][65] = 7.51e-7; 
+      I_off_n[0][66] = 8.04e-7; I_off_n[0][67] = 8.57e-7; I_off_n[0][68] = 9.11e-7; I_off_n[0][69] = 9.66e-7; I_off_n[0][70] = 1.02e-6;
+      I_off_n[0][71] = 1.07e-6; I_off_n[0][72] = 1.13e-6; I_off_n[0][73] = 1.18e-6; I_off_n[0][74] = 1.23e-6; I_off_n[0][75] = 1.29e-6; 
+      I_off_n[0][76] = 1.35e-6; I_off_n[0][77] = 1.41e-6; I_off_n[0][78] = 1.48e-6; I_off_n[0][79] = 1.54e-6; I_off_n[0][80] = 1.62e-6;
+      I_off_n[0][81] = 1.70e-6; I_off_n[0][82] = 1.78e-6; I_off_n[0][83] = 1.87e-6; I_off_n[0][84] = 1.96e-6; I_off_n[0][85] = 2.06e-6; 
+      I_off_n[0][86] = 2.17e-6; I_off_n[0][87] = 2.29e-6; I_off_n[0][88] = 2.43e-6; I_off_n[0][89] = 2.57e-6; I_off_n[0][90] = 2.73e-6;
+      I_off_n[0][91] = 2.92e-6; I_off_n[0][92] = 3.15e-6; I_off_n[0][93] = 3.42e-6; I_off_n[0][94] = 3.72e-6; I_off_n[0][95] = 4.06e-6; 
+      I_off_n[0][96] = 4.43e-6; I_off_n[0][97] = 4.82e-6; I_off_n[0][98] = 5.23e-6; I_off_n[0][99] = 5.66e-6; I_off_n[0][100] = 6.10e-6;
 
 //      32 DG
 //      I_g_on_n[0][0]  = 2.71e-9;//A/micron
@@ -1143,6 +1811,7 @@
       Rnchannelon[1] = nmos_effective_resistance_multiplier * vdd[1] / I_on_n[1];
       Rpchannelon[1] = n_to_p_eff_curr_drv_ratio[1] * Rnchannelon[1];
       long_channel_leakage_reduction[1] = 1/1.93;
+/*
       I_off_n[1][0] = 2.06e-11;
       I_off_n[1][10] = 3.30e-11;
       I_off_n[1][20] = 5.15e-11;
@@ -1166,7 +1835,51 @@
       I_g_on_n[1][80] = 3.73e-11;
       I_g_on_n[1][90] = 3.73e-11;
       I_g_on_n[1][100] = 3.73e-11;
-
+*/
+      /* Leakage current data were interpolated to support full-range leakage feedback.
+         Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+      I_g_on_n[1][0] = 3.73e-11; 
+      I_g_on_n[1][1] = 3.73e-11; I_g_on_n[1][2] = 3.73e-11; I_g_on_n[1][3] = 3.73e-11; I_g_on_n[1][4] = 3.73e-11; I_g_on_n[1][5] = 3.73e-11; 
+      I_g_on_n[1][6] = 3.73e-11; I_g_on_n[1][7] = 3.73e-11; I_g_on_n[1][8] = 3.73e-11; I_g_on_n[1][9] = 3.73e-11; I_g_on_n[1][10] = 3.73e-11;
+      I_g_on_n[1][11] = 3.73e-11; I_g_on_n[1][12] = 3.73e-11; I_g_on_n[1][13] = 3.73e-11; I_g_on_n[1][14] = 3.73e-11; I_g_on_n[1][15] = 3.73e-11; 
+      I_g_on_n[1][16] = 3.73e-11; I_g_on_n[1][17] = 3.73e-11; I_g_on_n[1][18] = 3.73e-11; I_g_on_n[1][19] = 3.73e-11; I_g_on_n[1][20] = 3.73e-11;
+      I_g_on_n[1][21] = 3.73e-11; I_g_on_n[1][22] = 3.73e-11; I_g_on_n[1][23] = 3.73e-11; I_g_on_n[1][24] = 3.73e-11; I_g_on_n[1][25] = 3.73e-11; 
+      I_g_on_n[1][26] = 3.73e-11; I_g_on_n[1][27] = 3.73e-11; I_g_on_n[1][28] = 3.73e-11; I_g_on_n[1][29] = 3.73e-11; I_g_on_n[1][30] = 3.73e-11;
+      I_g_on_n[1][31] = 3.73e-11; I_g_on_n[1][32] = 3.73e-11; I_g_on_n[1][33] = 3.73e-11; I_g_on_n[1][34] = 3.73e-11; I_g_on_n[1][35] = 3.73e-11; 
+      I_g_on_n[1][36] = 3.73e-11; I_g_on_n[1][37] = 3.73e-11; I_g_on_n[1][38] = 3.73e-11; I_g_on_n[1][39] = 3.73e-11; I_g_on_n[1][40] = 3.73e-11;
+      I_g_on_n[1][41] = 3.73e-11; I_g_on_n[1][42] = 3.73e-11; I_g_on_n[1][43] = 3.73e-11; I_g_on_n[1][44] = 3.73e-11; I_g_on_n[1][45] = 3.73e-11; 
+      I_g_on_n[1][46] = 3.73e-11; I_g_on_n[1][47] = 3.73e-11; I_g_on_n[1][48] = 3.73e-11; I_g_on_n[1][49] = 3.73e-11; I_g_on_n[1][50] = 3.73e-11;
+      I_g_on_n[1][51] = 3.73e-11; I_g_on_n[1][52] = 3.73e-11; I_g_on_n[1][53] = 3.73e-11; I_g_on_n[1][54] = 3.73e-11; I_g_on_n[1][55] = 3.73e-11; 
+      I_g_on_n[1][56] = 3.73e-11; I_g_on_n[1][57] = 3.73e-11; I_g_on_n[1][58] = 3.73e-11; I_g_on_n[1][59] = 3.73e-11; I_g_on_n[1][60] = 3.73e-11;
+      I_g_on_n[1][61] = 3.73e-11; I_g_on_n[1][62] = 3.73e-11; I_g_on_n[1][63] = 3.73e-11; I_g_on_n[1][64] = 3.73e-11; I_g_on_n[1][65] = 3.73e-11; 
+      I_g_on_n[1][66] = 3.73e-11; I_g_on_n[1][67] = 3.73e-11; I_g_on_n[1][68] = 3.73e-11; I_g_on_n[1][69] = 3.73e-11; I_g_on_n[1][70] = 3.73e-11;
+      I_g_on_n[1][71] = 3.73e-11; I_g_on_n[1][72] = 3.73e-11; I_g_on_n[1][73] = 3.73e-11; I_g_on_n[1][74] = 3.73e-11; I_g_on_n[1][75] = 3.73e-11; 
+      I_g_on_n[1][76] = 3.73e-11; I_g_on_n[1][77] = 3.73e-11; I_g_on_n[1][78] = 3.73e-11; I_g_on_n[1][79] = 3.73e-11; I_g_on_n[1][80] = 3.73e-11;
+      I_g_on_n[1][81] = 3.73e-11; I_g_on_n[1][82] = 3.73e-11; I_g_on_n[1][83] = 3.73e-11; I_g_on_n[1][84] = 3.73e-11; I_g_on_n[1][85] = 3.73e-11; 
+      I_g_on_n[1][86] = 3.73e-11; I_g_on_n[1][87] = 3.73e-11; I_g_on_n[1][88] = 3.73e-11; I_g_on_n[1][89] = 3.73e-11; I_g_on_n[1][90] = 3.73e-11;
+      I_g_on_n[1][91] = 3.73e-11; I_g_on_n[1][92] = 3.73e-11; I_g_on_n[1][93] = 3.73e-11; I_g_on_n[1][94] = 3.73e-11; I_g_on_n[1][95] = 3.73e-11; 
+      I_g_on_n[1][96] = 3.73e-11; I_g_on_n[1][97] = 3.73e-11; I_g_on_n[1][98] = 3.73e-11; I_g_on_n[1][99] = 3.73e-11; I_g_on_n[1][100] = 3.73e-11;
+      I_off_n[1][0] = 2.06e-11; 
+      I_off_n[1][1] = 2.16e-11; I_off_n[1][2] = 2.26e-11; I_off_n[1][3] = 2.37e-11; I_off_n[1][4] = 2.49e-11; I_off_n[1][5] = 2.61e-11; 
+      I_off_n[1][6] = 2.74e-11; I_off_n[1][7] = 2.87e-11; I_off_n[1][8] = 3.01e-11; I_off_n[1][9] = 3.15e-11; I_off_n[1][10] = 3.30e-11;
+      I_off_n[1][11] = 3.45e-11; I_off_n[1][12] = 3.61e-11; I_off_n[1][13] = 3.78e-11; I_off_n[1][14] = 3.95e-11; I_off_n[1][15] = 4.14e-11; 
+      I_off_n[1][16] = 4.33e-11; I_off_n[1][17] = 4.52e-11; I_off_n[1][18] = 4.72e-11; I_off_n[1][19] = 4.93e-11; I_off_n[1][20] = 5.15e-11;
+      I_off_n[1][21] = 5.37e-11; I_off_n[1][22] = 5.61e-11; I_off_n[1][23] = 5.85e-11; I_off_n[1][24] = 6.11e-11; I_off_n[1][25] = 6.37e-11; 
+      I_off_n[1][26] = 6.65e-11; I_off_n[1][27] = 6.93e-11; I_off_n[1][28] = 7.22e-11; I_off_n[1][29] = 7.52e-11; I_off_n[1][30] = 7.83e-11;
+      I_off_n[1][31] = 8.15e-11; I_off_n[1][32] = 8.48e-11; I_off_n[1][33] = 8.83e-11; I_off_n[1][34] = 9.19e-11; I_off_n[1][35] = 9.56e-11; 
+      I_off_n[1][36] = 9.94e-11; I_off_n[1][37] = 1.03e-10; I_off_n[1][38] = 1.07e-10; I_off_n[1][39] = 1.12e-10; I_off_n[1][40] = 1.16e-10;
+      I_off_n[1][41] = 1.21e-10; I_off_n[1][42] = 1.25e-10; I_off_n[1][43] = 1.30e-10; I_off_n[1][44] = 1.35e-10; I_off_n[1][45] = 1.40e-10; 
+      I_off_n[1][46] = 1.46e-10; I_off_n[1][47] = 1.51e-10; I_off_n[1][48] = 1.57e-10; I_off_n[1][49] = 1.63e-10; I_off_n[1][50] = 1.69e-10;
+      I_off_n[1][51] = 1.75e-10; I_off_n[1][52] = 1.82e-10; I_off_n[1][53] = 1.88e-10; I_off_n[1][54] = 1.95e-10; I_off_n[1][55] = 2.02e-10; 
+      I_off_n[1][56] = 2.09e-10; I_off_n[1][57] = 2.17e-10; I_off_n[1][58] = 2.24e-10; I_off_n[1][59] = 2.32e-10; I_off_n[1][60] = 2.40e-10;
+      I_off_n[1][61] = 2.48e-10; I_off_n[1][62] = 2.57e-10; I_off_n[1][63] = 2.66e-10; I_off_n[1][64] = 2.75e-10; I_off_n[1][65] = 2.84e-10; 
+      I_off_n[1][66] = 2.93e-10; I_off_n[1][67] = 3.03e-10; I_off_n[1][68] = 3.13e-10; I_off_n[1][69] = 3.24e-10; I_off_n[1][70] = 3.34e-10;
+      I_off_n[1][71] = 3.45e-10; I_off_n[1][72] = 3.56e-10; I_off_n[1][73] = 3.67e-10; I_off_n[1][74] = 3.79e-10; I_off_n[1][75] = 3.91e-10; 
+      I_off_n[1][76] = 4.03e-10; I_off_n[1][77] = 4.16e-10; I_off_n[1][78] = 4.28e-10; I_off_n[1][79] = 4.41e-10; I_off_n[1][80] = 4.54e-10;
+      I_off_n[1][81] = 4.67e-10; I_off_n[1][82] = 4.81e-10; I_off_n[1][83] = 4.95e-10; I_off_n[1][84] = 5.09e-10; I_off_n[1][85] = 5.23e-10; 
+      I_off_n[1][86] = 5.38e-10; I_off_n[1][87] = 5.52e-10; I_off_n[1][88] = 5.67e-10; I_off_n[1][89] = 5.81e-10; I_off_n[1][90] = 5.96e-10;
+      I_off_n[1][91] = 6.11e-10; I_off_n[1][92] = 6.25e-10; I_off_n[1][93] = 6.40e-10; I_off_n[1][94] = 6.54e-10; I_off_n[1][95] = 6.69e-10; 
+      I_off_n[1][96] = 6.84e-10; I_off_n[1][97] = 6.99e-10; I_off_n[1][98] = 7.14e-10; I_off_n[1][99] = 7.29e-10; I_off_n[1][100] = 7.44e-10;
 
       //LOP device type
       vdd[2] = 0.6;
@@ -1188,6 +1901,7 @@
       Rnchannelon[2] = nmos_effective_resistance_multiplier * vdd[2] / I_on_n[2];
       Rpchannelon[2] = n_to_p_eff_curr_drv_ratio[2] * Rnchannelon[2];
       long_channel_leakage_reduction[2] = 1/1.89;
+/*
       I_off_n[2][0] = 5.94e-8;
       I_off_n[2][10] = 7.23e-8;
       I_off_n[2][20] = 8.7e-8;
@@ -1211,6 +1925,51 @@
       I_g_on_n[2][80] = 2.93e-9;
       I_g_on_n[2][90] = 2.93e-9;
       I_g_on_n[2][100] = 2.93e-9;
+*/
+      /* Leakage current data were interpolated to support full-range leakage feedback.
+         Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+        I_g_on_n[2][0] = 2.93e-9; 
+        I_g_on_n[2][1] = 2.93e-9; I_g_on_n[2][2] = 2.93e-9; I_g_on_n[2][3] = 2.93e-9; I_g_on_n[2][4] = 2.93e-9; I_g_on_n[2][5] = 2.93e-9; 
+        I_g_on_n[2][6] = 2.93e-9; I_g_on_n[2][7] = 2.93e-9; I_g_on_n[2][8] = 2.93e-9; I_g_on_n[2][9] = 2.93e-9; I_g_on_n[2][10] = 2.93e-9;
+        I_g_on_n[2][11] = 2.93e-9; I_g_on_n[2][12] = 2.93e-9; I_g_on_n[2][13] = 2.93e-9; I_g_on_n[2][14] = 2.93e-9; I_g_on_n[2][15] = 2.93e-9; 
+        I_g_on_n[2][16] = 2.93e-9; I_g_on_n[2][17] = 2.93e-9; I_g_on_n[2][18] = 2.93e-9; I_g_on_n[2][19] = 2.93e-9; I_g_on_n[2][20] = 2.93e-9;
+        I_g_on_n[2][21] = 2.93e-9; I_g_on_n[2][22] = 2.93e-9; I_g_on_n[2][23] = 2.93e-9; I_g_on_n[2][24] = 2.93e-9; I_g_on_n[2][25] = 2.93e-9; 
+        I_g_on_n[2][26] = 2.93e-9; I_g_on_n[2][27] = 2.93e-9; I_g_on_n[2][28] = 2.93e-9; I_g_on_n[2][29] = 2.93e-9; I_g_on_n[2][30] = 2.93e-9;
+        I_g_on_n[2][31] = 2.93e-9; I_g_on_n[2][32] = 2.93e-9; I_g_on_n[2][33] = 2.93e-9; I_g_on_n[2][34] = 2.93e-9; I_g_on_n[2][35] = 2.93e-9; 
+        I_g_on_n[2][36] = 2.93e-9; I_g_on_n[2][37] = 2.93e-9; I_g_on_n[2][38] = 2.93e-9; I_g_on_n[2][39] = 2.93e-9; I_g_on_n[2][40] = 2.93e-9;
+        I_g_on_n[2][41] = 2.93e-9; I_g_on_n[2][42] = 2.93e-9; I_g_on_n[2][43] = 2.93e-9; I_g_on_n[2][44] = 2.93e-9; I_g_on_n[2][45] = 2.93e-9; 
+        I_g_on_n[2][46] = 2.93e-9; I_g_on_n[2][47] = 2.93e-9; I_g_on_n[2][48] = 2.93e-9; I_g_on_n[2][49] = 2.93e-9; I_g_on_n[2][50] = 2.93e-9;
+        I_g_on_n[2][51] = 2.93e-9; I_g_on_n[2][52] = 2.93e-9; I_g_on_n[2][53] = 2.93e-9; I_g_on_n[2][54] = 2.93e-9; I_g_on_n[2][55] = 2.93e-9; 
+        I_g_on_n[2][56] = 2.93e-9; I_g_on_n[2][57] = 2.93e-9; I_g_on_n[2][58] = 2.93e-9; I_g_on_n[2][59] = 2.93e-9; I_g_on_n[2][60] = 2.93e-9;
+        I_g_on_n[2][61] = 2.93e-9; I_g_on_n[2][62] = 2.93e-9; I_g_on_n[2][63] = 2.93e-9; I_g_on_n[2][64] = 2.93e-9; I_g_on_n[2][65] = 2.93e-9; 
+        I_g_on_n[2][66] = 2.93e-9; I_g_on_n[2][67] = 2.93e-9; I_g_on_n[2][68] = 2.93e-9; I_g_on_n[2][69] = 2.93e-9; I_g_on_n[2][70] = 2.93e-9;
+        I_g_on_n[2][71] = 2.93e-9; I_g_on_n[2][72] = 2.93e-9; I_g_on_n[2][73] = 2.93e-9; I_g_on_n[2][74] = 2.93e-9; I_g_on_n[2][75] = 2.93e-9; 
+        I_g_on_n[2][76] = 2.93e-9; I_g_on_n[2][77] = 2.93e-9; I_g_on_n[2][78] = 2.93e-9; I_g_on_n[2][79] = 2.93e-9; I_g_on_n[2][80] = 2.93e-9;
+        I_g_on_n[2][81] = 2.93e-9; I_g_on_n[2][82] = 2.93e-9; I_g_on_n[2][83] = 2.93e-9; I_g_on_n[2][84] = 2.93e-9; I_g_on_n[2][85] = 2.93e-9; 
+        I_g_on_n[2][86] = 2.93e-9; I_g_on_n[2][87] = 2.93e-9; I_g_on_n[2][88] = 2.93e-9; I_g_on_n[2][89] = 2.93e-9; I_g_on_n[2][90] = 2.93e-9;
+        I_g_on_n[2][91] = 2.93e-9; I_g_on_n[2][92] = 2.93e-9; I_g_on_n[2][93] = 2.93e-9; I_g_on_n[2][94] = 2.93e-9; I_g_on_n[2][95] = 2.93e-9; 
+        I_g_on_n[2][96] = 2.93e-9; I_g_on_n[2][97] = 2.93e-9; I_g_on_n[2][98] = 2.93e-9; I_g_on_n[2][99] = 2.93e-9; I_g_on_n[2][100] = 2.93e-9;
+        I_off_n[2][0] = 5.94e-8; 
+        I_off_n[2][1] = 6.06e-8; I_off_n[2][2] = 6.18e-8; I_off_n[2][3] = 6.31e-8; I_off_n[2][4] = 6.43e-8; I_off_n[2][5] = 6.56e-8; 
+        I_off_n[2][6] = 6.69e-8; I_off_n[2][7] = 6.82e-8; I_off_n[2][8] = 6.96e-8; I_off_n[2][9] = 7.09e-8; I_off_n[2][10] = 7.23e-8;
+        I_off_n[2][11] = 7.37e-8; I_off_n[2][12] = 7.51e-8; I_off_n[2][13] = 7.65e-8; I_off_n[2][14] = 7.79e-8; I_off_n[2][15] = 7.94e-8; 
+        I_off_n[2][16] = 8.09e-8; I_off_n[2][17] = 8.24e-8; I_off_n[2][18] = 8.39e-8; I_off_n[2][19] = 8.54e-8; I_off_n[2][20] = 8.70e-8;
+        I_off_n[2][21] = 8.86e-8; I_off_n[2][22] = 9.02e-8; I_off_n[2][23] = 9.19e-8; I_off_n[2][24] = 9.36e-8; I_off_n[2][25] = 9.53e-8; 
+        I_off_n[2][26] = 9.70e-8; I_off_n[2][27] = 9.88e-8; I_off_n[2][28] = 1.00e-7; I_off_n[2][29] = 1.02e-7; I_off_n[2][30] = 1.04e-7;
+        I_off_n[2][31] = 1.06e-7; I_off_n[2][32] = 1.07e-7; I_off_n[2][33] = 1.09e-7; I_off_n[2][34] = 1.11e-7; I_off_n[2][35] = 1.13e-7; 
+        I_off_n[2][36] = 1.15e-7; I_off_n[2][37] = 1.16e-7; I_off_n[2][38] = 1.18e-7; I_off_n[2][39] = 1.20e-7; I_off_n[2][40] = 1.22e-7;
+        I_off_n[2][41] = 1.24e-7; I_off_n[2][42] = 1.26e-7; I_off_n[2][43] = 1.28e-7; I_off_n[2][44] = 1.30e-7; I_off_n[2][45] = 1.32e-7; 
+        I_off_n[2][46] = 1.34e-7; I_off_n[2][47] = 1.37e-7; I_off_n[2][48] = 1.39e-7; I_off_n[2][49] = 1.41e-7; I_off_n[2][50] = 1.43e-7;
+        I_off_n[2][51] = 1.45e-7; I_off_n[2][52] = 1.47e-7; I_off_n[2][53] = 1.49e-7; I_off_n[2][54] = 1.52e-7; I_off_n[2][55] = 1.54e-7; 
+        I_off_n[2][56] = 1.56e-7; I_off_n[2][57] = 1.58e-7; I_off_n[2][58] = 1.60e-7; I_off_n[2][59] = 1.63e-7; I_off_n[2][60] = 1.65e-7;
+        I_off_n[2][61] = 1.67e-7; I_off_n[2][62] = 1.70e-7; I_off_n[2][63] = 1.72e-7; I_off_n[2][64] = 1.75e-7; I_off_n[2][65] = 1.77e-7; 
+        I_off_n[2][66] = 1.80e-7; I_off_n[2][67] = 1.82e-7; I_off_n[2][68] = 1.85e-7; I_off_n[2][69] = 1.87e-7; I_off_n[2][70] = 1.90e-7;
+        I_off_n[2][71] = 1.93e-7; I_off_n[2][72] = 1.95e-7; I_off_n[2][73] = 1.98e-7; I_off_n[2][74] = 2.00e-7; I_off_n[2][75] = 2.03e-7; 
+        I_off_n[2][76] = 2.05e-7; I_off_n[2][77] = 2.08e-7; I_off_n[2][78] = 2.10e-7; I_off_n[2][79] = 2.13e-7; I_off_n[2][80] = 2.15e-7;
+        I_off_n[2][81] = 2.17e-7; I_off_n[2][82] = 2.20e-7; I_off_n[2][83] = 2.22e-7; I_off_n[2][84] = 2.25e-7; I_off_n[2][85] = 2.27e-7; 
+        I_off_n[2][86] = 2.29e-7; I_off_n[2][87] = 2.32e-7; I_off_n[2][88] = 2.34e-7; I_off_n[2][89] = 2.37e-7; I_off_n[2][90] = 2.39e-7;
+        I_off_n[2][91] = 2.41e-7; I_off_n[2][92] = 2.44e-7; I_off_n[2][93] = 2.46e-7; I_off_n[2][94] = 2.49e-7; I_off_n[2][95] = 2.51e-7; 
+        I_off_n[2][96] = 2.53e-7; I_off_n[2][97] = 2.56e-7; I_off_n[2][98] = 2.58e-7; I_off_n[2][99] = 2.61e-7; I_off_n[2][100] = 2.63e-7;
 
       if (ram_cell_tech_type == lp_dram)
       {
@@ -1247,6 +2006,7 @@
         Rnchannelon[3] = nmos_effective_resistance_multiplier * curr_vpp / I_on_n[3];
         Rpchannelon[3] = n_to_p_eff_curr_drv_ratio[3] * Rnchannelon[3];
         long_channel_leakage_reduction[3] = 1;
+/*
         I_off_n[3][0]  = 3.57e-11;
         I_off_n[3][10] = 5.51e-11;
         I_off_n[3][20] = 8.27e-11;
@@ -1258,6 +2018,30 @@
         I_off_n[3][80] = 5.87e-10;
         I_off_n[3][90] = 7.29e-10;
         I_off_n[3][100] = 8.87e-10;
+*/
+        /* Leakage current data were interpolated to support full-range leakage feedback.
+           Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+        I_off_n[3][0] = 3.57e-11; 
+        I_off_n[3][1] = 3.73e-11; I_off_n[3][2] = 3.89e-11; I_off_n[3][3] = 4.07e-11; I_off_n[3][4] = 4.25e-11; I_off_n[3][5] = 4.45e-11; 
+        I_off_n[3][6] = 4.65e-11; I_off_n[3][7] = 4.85e-11; I_off_n[3][8] = 5.07e-11; I_off_n[3][9] = 5.28e-11; I_off_n[3][10] = 5.51e-11;
+        I_off_n[3][11] = 5.74e-11; I_off_n[3][12] = 5.99e-11; I_off_n[3][13] = 6.24e-11; I_off_n[3][14] = 6.50e-11; I_off_n[3][15] = 6.77e-11; 
+        I_off_n[3][16] = 7.06e-11; I_off_n[3][17] = 7.35e-11; I_off_n[3][18] = 7.65e-11; I_off_n[3][19] = 7.95e-11; I_off_n[3][20] = 8.27e-11;
+        I_off_n[3][21] = 8.60e-11; I_off_n[3][22] = 8.94e-11; I_off_n[3][23] = 9.29e-11; I_off_n[3][24] = 9.65e-11; I_off_n[3][25] = 1.00e-10; 
+        I_off_n[3][26] = 1.04e-10; I_off_n[3][27] = 1.08e-10; I_off_n[3][28] = 1.12e-10; I_off_n[3][29] = 1.17e-10; I_off_n[3][30] = 1.21e-10;
+        I_off_n[3][31] = 1.26e-10; I_off_n[3][32] = 1.30e-10; I_off_n[3][33] = 1.35e-10; I_off_n[3][34] = 1.40e-10; I_off_n[3][35] = 1.45e-10; 
+        I_off_n[3][36] = 1.51e-10; I_off_n[3][37] = 1.56e-10; I_off_n[3][38] = 1.62e-10; I_off_n[3][39] = 1.68e-10; I_off_n[3][40] = 1.74e-10;
+        I_off_n[3][41] = 1.80e-10; I_off_n[3][42] = 1.87e-10; I_off_n[3][43] = 1.93e-10; I_off_n[3][44] = 2.00e-10; I_off_n[3][45] = 2.07e-10; 
+        I_off_n[3][46] = 2.14e-10; I_off_n[3][47] = 2.22e-10; I_off_n[3][48] = 2.29e-10; I_off_n[3][49] = 2.37e-10; I_off_n[3][50] = 2.45e-10;
+        I_off_n[3][51] = 2.53e-10; I_off_n[3][52] = 2.62e-10; I_off_n[3][53] = 2.70e-10; I_off_n[3][54] = 2.79e-10; I_off_n[3][55] = 2.89e-10; 
+        I_off_n[3][56] = 2.98e-10; I_off_n[3][57] = 3.08e-10; I_off_n[3][58] = 3.18e-10; I_off_n[3][59] = 3.28e-10; I_off_n[3][60] = 3.38e-10;
+        I_off_n[3][61] = 3.48e-10; I_off_n[3][62] = 3.59e-10; I_off_n[3][63] = 3.70e-10; I_off_n[3][64] = 3.81e-10; I_off_n[3][65] = 3.93e-10; 
+        I_off_n[3][66] = 4.05e-10; I_off_n[3][67] = 4.16e-10; I_off_n[3][68] = 4.28e-10; I_off_n[3][69] = 4.41e-10; I_off_n[3][70] = 4.53e-10;
+        I_off_n[3][71] = 4.66e-10; I_off_n[3][72] = 4.78e-10; I_off_n[3][73] = 4.91e-10; I_off_n[3][74] = 5.05e-10; I_off_n[3][75] = 5.18e-10; 
+        I_off_n[3][76] = 5.32e-10; I_off_n[3][77] = 5.46e-10; I_off_n[3][78] = 5.59e-10; I_off_n[3][79] = 5.73e-10; I_off_n[3][80] = 5.87e-10;
+        I_off_n[3][81] = 6.01e-10; I_off_n[3][82] = 6.15e-10; I_off_n[3][83] = 6.29e-10; I_off_n[3][84] = 6.42e-10; I_off_n[3][85] = 6.57e-10; 
+        I_off_n[3][86] = 6.71e-10; I_off_n[3][87] = 6.85e-10; I_off_n[3][88] = 6.99e-10; I_off_n[3][89] = 7.14e-10; I_off_n[3][90] = 7.29e-10;
+        I_off_n[3][91] = 7.44e-10; I_off_n[3][92] = 7.59e-10; I_off_n[3][93] = 7.75e-10; I_off_n[3][94] = 7.90e-10; I_off_n[3][95] = 8.06e-10; 
+        I_off_n[3][96] = 8.22e-10; I_off_n[3][97] = 8.38e-10; I_off_n[3][98] = 8.54e-10; I_off_n[3][99] = 8.70e-10; I_off_n[3][100] = 8.87e-10;
       }
       else if (ram_cell_tech_type == comm_dram)
       {
@@ -1294,6 +2078,7 @@
         Rnchannelon[3] = nmos_effective_resistance_multiplier * curr_vpp / I_on_n[3];
         Rpchannelon[3] = n_to_p_eff_curr_drv_ratio[3] * Rnchannelon[3];
         long_channel_leakage_reduction[3] = 1;
+/*
         I_off_n[3][0]  = 3.63e-14;
         I_off_n[3][10] = 7.18e-14;
         I_off_n[3][20] = 1.36e-13;
@@ -1305,6 +2090,30 @@
         I_off_n[3][80] = 3.19e-12;
         I_off_n[3][90] = 4.87e-12;
         I_off_n[3][100] = 7.16e-12;
+*/
+        /* Leakage current data were interpolated to support full-range leakage feedback.
+           Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+        I_off_n[3][0] = 3.63e-14; 
+        I_off_n[3][1] = 3.86e-14; I_off_n[3][2] = 4.12e-14; I_off_n[3][3] = 4.42e-14; I_off_n[3][4] = 4.75e-14; I_off_n[3][5] = 5.10e-14; 
+        I_off_n[3][6] = 5.48e-14; I_off_n[3][7] = 5.87e-14; I_off_n[3][8] = 6.29e-14; I_off_n[3][9] = 6.73e-14; I_off_n[3][10] = 7.18e-14;
+        I_off_n[3][11] = 7.66e-14; I_off_n[3][12] = 8.17e-14; I_off_n[3][13] = 8.72e-14; I_off_n[3][14] = 9.31e-14; I_off_n[3][15] = 9.94e-14; 
+        I_off_n[3][16] = 1.06e-13; I_off_n[3][17] = 1.13e-13; I_off_n[3][18] = 1.20e-13; I_off_n[3][19] = 1.28e-13; I_off_n[3][20] = 1.36e-13;
+        I_off_n[3][21] = 1.45e-13; I_off_n[3][22] = 1.54e-13; I_off_n[3][23] = 1.63e-13; I_off_n[3][24] = 1.74e-13; I_off_n[3][25] = 1.85e-13; 
+        I_off_n[3][26] = 1.97e-13; I_off_n[3][27] = 2.09e-13; I_off_n[3][28] = 2.22e-13; I_off_n[3][29] = 2.35e-13; I_off_n[3][30] = 2.49e-13;
+        I_off_n[3][31] = 2.64e-13; I_off_n[3][32] = 2.80e-13; I_off_n[3][33] = 2.96e-13; I_off_n[3][34] = 3.14e-13; I_off_n[3][35] = 3.33e-13; 
+        I_off_n[3][36] = 3.53e-13; I_off_n[3][37] = 3.73e-13; I_off_n[3][38] = 3.95e-13; I_off_n[3][39] = 4.18e-13; I_off_n[3][40] = 4.41e-13;
+        I_off_n[3][41] = 4.66e-13; I_off_n[3][42] = 4.92e-13; I_off_n[3][43] = 5.19e-13; I_off_n[3][44] = 5.49e-13; I_off_n[3][45] = 5.79e-13; 
+        I_off_n[3][46] = 6.12e-13; I_off_n[3][47] = 6.45e-13; I_off_n[3][48] = 6.80e-13; I_off_n[3][49] = 7.17e-13; I_off_n[3][50] = 7.55e-13;
+        I_off_n[3][51] = 7.95e-13; I_off_n[3][52] = 8.38e-13; I_off_n[3][53] = 8.83e-13; I_off_n[3][54] = 9.30e-13; I_off_n[3][55] = 9.80e-13; 
+        I_off_n[3][56] = 1.03e-12; I_off_n[3][57] = 1.09e-12; I_off_n[3][58] = 1.14e-12; I_off_n[3][59] = 1.20e-12; I_off_n[3][60] = 1.26e-12;
+        I_off_n[3][61] = 1.32e-12; I_off_n[3][62] = 1.39e-12; I_off_n[3][63] = 1.46e-12; I_off_n[3][64] = 1.53e-12; I_off_n[3][65] = 1.61e-12; 
+        I_off_n[3][66] = 1.68e-12; I_off_n[3][67] = 1.77e-12; I_off_n[3][68] = 1.85e-12; I_off_n[3][69] = 1.94e-12; I_off_n[3][70] = 2.03e-12;
+        I_off_n[3][71] = 2.13e-12; I_off_n[3][72] = 2.23e-12; I_off_n[3][73] = 2.33e-12; I_off_n[3][74] = 2.44e-12; I_off_n[3][75] = 2.55e-12; 
+        I_off_n[3][76] = 2.67e-12; I_off_n[3][77] = 2.80e-12; I_off_n[3][78] = 2.92e-12; I_off_n[3][79] = 3.05e-12; I_off_n[3][80] = 3.19e-12;
+        I_off_n[3][81] = 3.33e-12; I_off_n[3][82] = 3.48e-12; I_off_n[3][83] = 3.63e-12; I_off_n[3][84] = 3.79e-12; I_off_n[3][85] = 3.96e-12; 
+        I_off_n[3][86] = 4.13e-12; I_off_n[3][87] = 4.31e-12; I_off_n[3][88] = 4.49e-12; I_off_n[3][89] = 4.68e-12; I_off_n[3][90] = 4.87e-12;
+        I_off_n[3][91] = 5.07e-12; I_off_n[3][92] = 5.27e-12; I_off_n[3][93] = 5.49e-12; I_off_n[3][94] = 5.71e-12; I_off_n[3][95] = 5.93e-12; 
+        I_off_n[3][96] = 6.17e-12; I_off_n[3][97] = 6.41e-12; I_off_n[3][98] = 6.65e-12; I_off_n[3][99] = 6.90e-12; I_off_n[3][100] = 7.16e-12;
       }
 
       //SRAM cell properties
@@ -1329,7 +2138,7 @@
 
     if(tech == 22){
         SENSE_AMP_D = .03e-9; // s
-	SENSE_AMP_P = 2.16e-15; // J
+        SENSE_AMP_P = 2.16e-15; // J
     	//For 2016, MPU/ASIC stagger-contacted M1 half-pitch is 22 nm (so this is 22 nm
     	//technology i.e. FEATURESIZE = 0.022). Using the DG process numbers for HP.
     	//22 nm HP
@@ -1353,6 +2162,7 @@
         Rnchannelon[0] = nmos_effective_resistance_multiplier * vdd[0] / I_on_n[0];//ohm-micron
         Rpchannelon[0] = n_to_p_eff_curr_drv_ratio[0] * Rnchannelon[0];//ohm-micron
         long_channel_leakage_reduction[0] = 1/3.274;
+/*
         I_off_n[0][0] = 1.52e-7/1.5*1.2;//From 22nm, leakage current are directly from ITRS report rather than MASTAR, since MASTAR has serious bugs there.
         I_off_n[0][10] = 1.55e-7/1.5*1.2;
         I_off_n[0][20] = 1.59e-7/1.5*1.2;
@@ -1376,6 +2186,51 @@
         I_g_on_n[0][80] = 1.81e-9;
         I_g_on_n[0][90] = 1.81e-9;
         I_g_on_n[0][100] = 1.81e-9;
+*/
+        /* Leakage current data were interpolated to support full-range leakage feedback.
+           Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+        I_g_on_n[0][0] = 1.81e-9; 
+        I_g_on_n[0][1] = 1.81e-9; I_g_on_n[0][2] = 1.81e-9; I_g_on_n[0][3] = 1.81e-9; I_g_on_n[0][4] = 1.81e-9; I_g_on_n[0][5] = 1.81e-9; 
+        I_g_on_n[0][6] = 1.81e-9; I_g_on_n[0][7] = 1.81e-9; I_g_on_n[0][8] = 1.81e-9; I_g_on_n[0][9] = 1.81e-9; I_g_on_n[0][10] = 1.81e-9;
+        I_g_on_n[0][11] = 1.81e-9; I_g_on_n[0][12] = 1.81e-9; I_g_on_n[0][13] = 1.81e-9; I_g_on_n[0][14] = 1.81e-9; I_g_on_n[0][15] = 1.81e-9; 
+        I_g_on_n[0][16] = 1.81e-9; I_g_on_n[0][17] = 1.81e-9; I_g_on_n[0][18] = 1.81e-9; I_g_on_n[0][19] = 1.81e-9; I_g_on_n[0][20] = 1.81e-9;
+        I_g_on_n[0][21] = 1.81e-9; I_g_on_n[0][22] = 1.81e-9; I_g_on_n[0][23] = 1.81e-9; I_g_on_n[0][24] = 1.81e-9; I_g_on_n[0][25] = 1.81e-9; 
+        I_g_on_n[0][26] = 1.81e-9; I_g_on_n[0][27] = 1.81e-9; I_g_on_n[0][28] = 1.81e-9; I_g_on_n[0][29] = 1.81e-9; I_g_on_n[0][30] = 1.81e-9;
+        I_g_on_n[0][31] = 1.81e-9; I_g_on_n[0][32] = 1.81e-9; I_g_on_n[0][33] = 1.81e-9; I_g_on_n[0][34] = 1.81e-9; I_g_on_n[0][35] = 1.81e-9; 
+        I_g_on_n[0][36] = 1.81e-9; I_g_on_n[0][37] = 1.81e-9; I_g_on_n[0][38] = 1.81e-9; I_g_on_n[0][39] = 1.81e-9; I_g_on_n[0][40] = 1.81e-9;
+        I_g_on_n[0][41] = 1.81e-9; I_g_on_n[0][42] = 1.81e-9; I_g_on_n[0][43] = 1.81e-9; I_g_on_n[0][44] = 1.81e-9; I_g_on_n[0][45] = 1.81e-9; 
+        I_g_on_n[0][46] = 1.81e-9; I_g_on_n[0][47] = 1.81e-9; I_g_on_n[0][48] = 1.81e-9; I_g_on_n[0][49] = 1.81e-9; I_g_on_n[0][50] = 1.81e-9;
+        I_g_on_n[0][51] = 1.81e-9; I_g_on_n[0][52] = 1.81e-9; I_g_on_n[0][53] = 1.81e-9; I_g_on_n[0][54] = 1.81e-9; I_g_on_n[0][55] = 1.81e-9; 
+        I_g_on_n[0][56] = 1.81e-9; I_g_on_n[0][57] = 1.81e-9; I_g_on_n[0][58] = 1.81e-9; I_g_on_n[0][59] = 1.81e-9; I_g_on_n[0][60] = 1.81e-9;
+        I_g_on_n[0][61] = 1.81e-9; I_g_on_n[0][62] = 1.81e-9; I_g_on_n[0][63] = 1.81e-9; I_g_on_n[0][64] = 1.81e-9; I_g_on_n[0][65] = 1.81e-9; 
+        I_g_on_n[0][66] = 1.81e-9; I_g_on_n[0][67] = 1.81e-9; I_g_on_n[0][68] = 1.81e-9; I_g_on_n[0][69] = 1.81e-9; I_g_on_n[0][70] = 1.81e-9;
+        I_g_on_n[0][71] = 1.81e-9; I_g_on_n[0][72] = 1.81e-9; I_g_on_n[0][73] = 1.81e-9; I_g_on_n[0][74] = 1.81e-9; I_g_on_n[0][75] = 1.81e-9; 
+        I_g_on_n[0][76] = 1.81e-9; I_g_on_n[0][77] = 1.81e-9; I_g_on_n[0][78] = 1.81e-9; I_g_on_n[0][79] = 1.81e-9; I_g_on_n[0][80] = 1.81e-9;
+        I_g_on_n[0][81] = 1.81e-9; I_g_on_n[0][82] = 1.81e-9; I_g_on_n[0][83] = 1.81e-9; I_g_on_n[0][84] = 1.81e-9; I_g_on_n[0][85] = 1.81e-9; 
+        I_g_on_n[0][86] = 1.81e-9; I_g_on_n[0][87] = 1.81e-9; I_g_on_n[0][88] = 1.81e-9; I_g_on_n[0][89] = 1.81e-9; I_g_on_n[0][90] = 1.81e-9;
+        I_g_on_n[0][91] = 1.81e-9; I_g_on_n[0][92] = 1.81e-9; I_g_on_n[0][93] = 1.81e-9; I_g_on_n[0][94] = 1.81e-9; I_g_on_n[0][95] = 1.81e-9; 
+        I_g_on_n[0][96] = 1.81e-9; I_g_on_n[0][97] = 1.81e-9; I_g_on_n[0][98] = 1.81e-9; I_g_on_n[0][99] = 1.81e-9; I_g_on_n[0][100] = 1.81e-9;
+        I_off_n[0][0] = 1.22e-7; 
+        I_off_n[0][1] = 1.22e-7; I_off_n[0][2] = 1.22e-7; I_off_n[0][3] = 1.22e-7; I_off_n[0][4] = 1.22e-7; I_off_n[0][5] = 1.23e-7; 
+        I_off_n[0][6] = 1.23e-7; I_off_n[0][7] = 1.23e-7; I_off_n[0][8] = 1.23e-7; I_off_n[0][9] = 1.24e-7; I_off_n[0][10] = 1.24e-7;
+        I_off_n[0][11] = 1.24e-7; I_off_n[0][12] = 1.25e-7; I_off_n[0][13] = 1.25e-7; I_off_n[0][14] = 1.25e-7; I_off_n[0][15] = 1.25e-7; 
+        I_off_n[0][16] = 1.26e-7; I_off_n[0][17] = 1.26e-7; I_off_n[0][18] = 1.26e-7; I_off_n[0][19] = 1.27e-7; I_off_n[0][20] = 1.27e-7;
+        I_off_n[0][21] = 1.28e-7; I_off_n[0][22] = 1.28e-7; I_off_n[0][23] = 1.29e-7; I_off_n[0][24] = 1.29e-7; I_off_n[0][25] = 1.30e-7; 
+        I_off_n[0][26] = 1.31e-7; I_off_n[0][27] = 1.32e-7; I_off_n[0][28] = 1.32e-7; I_off_n[0][29] = 1.33e-7; I_off_n[0][30] = 1.34e-7;
+        I_off_n[0][31] = 1.35e-7; I_off_n[0][32] = 1.37e-7; I_off_n[0][33] = 1.38e-7; I_off_n[0][34] = 1.39e-7; I_off_n[0][35] = 1.41e-7; 
+        I_off_n[0][36] = 1.43e-7; I_off_n[0][37] = 1.45e-7; I_off_n[0][38] = 1.47e-7; I_off_n[0][39] = 1.49e-7; I_off_n[0][40] = 1.52e-7;
+        I_off_n[0][41] = 1.55e-7; I_off_n[0][42] = 1.59e-7; I_off_n[0][43] = 1.64e-7; I_off_n[0][44] = 1.69e-7; I_off_n[0][45] = 1.75e-7; 
+        I_off_n[0][46] = 1.82e-7; I_off_n[0][47] = 1.89e-7; I_off_n[0][48] = 1.97e-7; I_off_n[0][49] = 2.06e-7; I_off_n[0][50] = 2.15e-7;
+        I_off_n[0][51] = 2.27e-7; I_off_n[0][52] = 2.41e-7; I_off_n[0][53] = 2.58e-7; I_off_n[0][54] = 2.77e-7; I_off_n[0][55] = 2.98e-7; 
+        I_off_n[0][56] = 3.21e-7; I_off_n[0][57] = 3.46e-7; I_off_n[0][58] = 3.72e-7; I_off_n[0][59] = 3.98e-7; I_off_n[0][60] = 4.26e-7;
+        I_off_n[0][61] = 4.55e-7; I_off_n[0][62] = 4.87e-7; I_off_n[0][63] = 5.23e-7; I_off_n[0][64] = 5.61e-7; I_off_n[0][65] = 6.01e-7; 
+        I_off_n[0][66] = 6.43e-7; I_off_n[0][67] = 6.86e-7; I_off_n[0][68] = 7.29e-7; I_off_n[0][69] = 7.73e-7; I_off_n[0][70] = 8.16e-7;
+        I_off_n[0][71] = 8.59e-7; I_off_n[0][72] = 9.01e-7; I_off_n[0][73] = 9.44e-7; I_off_n[0][74] = 9.87e-7; I_off_n[0][75] = 1.03e-6; 
+        I_off_n[0][76] = 1.08e-6; I_off_n[0][77] = 1.13e-6; I_off_n[0][78] = 1.18e-6; I_off_n[0][79] = 1.24e-6; I_off_n[0][80] = 1.30e-6;
+        I_off_n[0][81] = 1.36e-6; I_off_n[0][82] = 1.43e-6; I_off_n[0][83] = 1.50e-6; I_off_n[0][84] = 1.57e-6; I_off_n[0][85] = 1.65e-6; 
+        I_off_n[0][86] = 1.74e-6; I_off_n[0][87] = 1.84e-6; I_off_n[0][88] = 1.94e-6; I_off_n[0][89] = 2.06e-6; I_off_n[0][90] = 2.18e-6;
+        I_off_n[0][91] = 2.34e-6; I_off_n[0][92] = 2.52e-6; I_off_n[0][93] = 2.74e-6; I_off_n[0][94] = 2.98e-6; I_off_n[0][95] = 3.25e-6; 
+        I_off_n[0][96] = 3.54e-6; I_off_n[0][97] = 3.85e-6; I_off_n[0][98] = 4.18e-6; I_off_n[0][99] = 4.52e-6; I_off_n[0][100] = 4.88e-6;
 
     	//22 nm LSTP DG
     	vdd[1] = 0.8;
@@ -1397,6 +2252,7 @@
     	Rnchannelon[1] = nmos_effective_resistance_multiplier * vdd[1] / I_on_n[1];//ohm-micron
     	Rpchannelon[1] = n_to_p_eff_curr_drv_ratio[1] * Rnchannelon[1];//ohm-micron
     	long_channel_leakage_reduction[1] = 1/1.89;
+/*
     	I_off_n[1][0] = 2.43e-11;
     	I_off_n[1][10] = 4.85e-11;
     	I_off_n[1][20] = 9.68e-11;
@@ -1420,6 +2276,51 @@
     	I_g_on_n[1][80] = 4.51e-10;
     	I_g_on_n[1][90] = 4.51e-10;
     	I_g_on_n[1][100] = 4.51e-10;
+*/
+        /* Leakage current data were interpolated to support full-range leakage feedback.
+           Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+        I_g_on_n[1][0] = 4.51e-10; 
+        I_g_on_n[1][1] = 4.51e-10; I_g_on_n[1][2] = 4.51e-10; I_g_on_n[1][3] = 4.51e-10; I_g_on_n[1][4] = 4.51e-10; I_g_on_n[1][5] = 4.51e-10; 
+        I_g_on_n[1][6] = 4.51e-10; I_g_on_n[1][7] = 4.51e-10; I_g_on_n[1][8] = 4.51e-10; I_g_on_n[1][9] = 4.51e-10; I_g_on_n[1][10] = 4.51e-10;
+        I_g_on_n[1][11] = 4.51e-10; I_g_on_n[1][12] = 4.51e-10; I_g_on_n[1][13] = 4.51e-10; I_g_on_n[1][14] = 4.51e-10; I_g_on_n[1][15] = 4.51e-10; 
+        I_g_on_n[1][16] = 4.51e-10; I_g_on_n[1][17] = 4.51e-10; I_g_on_n[1][18] = 4.51e-10; I_g_on_n[1][19] = 4.51e-10; I_g_on_n[1][20] = 4.51e-10;
+        I_g_on_n[1][21] = 4.51e-10; I_g_on_n[1][22] = 4.51e-10; I_g_on_n[1][23] = 4.51e-10; I_g_on_n[1][24] = 4.51e-10; I_g_on_n[1][25] = 4.51e-10; 
+        I_g_on_n[1][26] = 4.51e-10; I_g_on_n[1][27] = 4.51e-10; I_g_on_n[1][28] = 4.51e-10; I_g_on_n[1][29] = 4.51e-10; I_g_on_n[1][30] = 4.51e-10;
+        I_g_on_n[1][31] = 4.51e-10; I_g_on_n[1][32] = 4.51e-10; I_g_on_n[1][33] = 4.51e-10; I_g_on_n[1][34] = 4.51e-10; I_g_on_n[1][35] = 4.51e-10; 
+        I_g_on_n[1][36] = 4.51e-10; I_g_on_n[1][37] = 4.51e-10; I_g_on_n[1][38] = 4.51e-10; I_g_on_n[1][39] = 4.51e-10; I_g_on_n[1][40] = 4.51e-10;
+        I_g_on_n[1][41] = 4.51e-10; I_g_on_n[1][42] = 4.51e-10; I_g_on_n[1][43] = 4.51e-10; I_g_on_n[1][44] = 4.51e-10; I_g_on_n[1][45] = 4.51e-10; 
+        I_g_on_n[1][46] = 4.51e-10; I_g_on_n[1][47] = 4.51e-10; I_g_on_n[1][48] = 4.51e-10; I_g_on_n[1][49] = 4.51e-10; I_g_on_n[1][50] = 4.51e-10;
+        I_g_on_n[1][51] = 4.51e-10; I_g_on_n[1][52] = 4.51e-10; I_g_on_n[1][53] = 4.51e-10; I_g_on_n[1][54] = 4.51e-10; I_g_on_n[1][55] = 4.51e-10; 
+        I_g_on_n[1][56] = 4.51e-10; I_g_on_n[1][57] = 4.51e-10; I_g_on_n[1][58] = 4.51e-10; I_g_on_n[1][59] = 4.51e-10; I_g_on_n[1][60] = 4.51e-10;
+        I_g_on_n[1][61] = 4.51e-10; I_g_on_n[1][62] = 4.51e-10; I_g_on_n[1][63] = 4.51e-10; I_g_on_n[1][64] = 4.51e-10; I_g_on_n[1][65] = 4.51e-10; 
+        I_g_on_n[1][66] = 4.51e-10; I_g_on_n[1][67] = 4.51e-10; I_g_on_n[1][68] = 4.51e-10; I_g_on_n[1][69] = 4.51e-10; I_g_on_n[1][70] = 4.51e-10;
+        I_g_on_n[1][71] = 4.51e-10; I_g_on_n[1][72] = 4.51e-10; I_g_on_n[1][73] = 4.51e-10; I_g_on_n[1][74] = 4.51e-10; I_g_on_n[1][75] = 4.51e-10; 
+        I_g_on_n[1][76] = 4.51e-10; I_g_on_n[1][77] = 4.51e-10; I_g_on_n[1][78] = 4.51e-10; I_g_on_n[1][79] = 4.51e-10; I_g_on_n[1][80] = 4.51e-10;
+        I_g_on_n[1][81] = 4.51e-10; I_g_on_n[1][82] = 4.51e-10; I_g_on_n[1][83] = 4.51e-10; I_g_on_n[1][84] = 4.51e-10; I_g_on_n[1][85] = 4.51e-10; 
+        I_g_on_n[1][86] = 4.51e-10; I_g_on_n[1][87] = 4.51e-10; I_g_on_n[1][88] = 4.51e-10; I_g_on_n[1][89] = 4.51e-10; I_g_on_n[1][90] = 4.51e-10;
+        I_g_on_n[1][91] = 4.51e-10; I_g_on_n[1][92] = 4.51e-10; I_g_on_n[1][93] = 4.51e-10; I_g_on_n[1][94] = 4.51e-10; I_g_on_n[1][95] = 4.51e-10; 
+        I_g_on_n[1][96] = 4.51e-10; I_g_on_n[1][97] = 4.51e-10; I_g_on_n[1][98] = 4.51e-10; I_g_on_n[1][99] = 4.51e-10; I_g_on_n[1][100] = 4.51e-10;
+        I_off_n[1][0] = 2.43e-11; 
+        I_off_n[1][1] = 2.57e-11; I_off_n[1][2] = 2.73e-11; I_off_n[1][3] = 2.93e-11; I_off_n[1][4] = 3.15e-11; I_off_n[1][5] = 3.39e-11; 
+        I_off_n[1][6] = 3.65e-11; I_off_n[1][7] = 3.93e-11; I_off_n[1][8] = 4.22e-11; I_off_n[1][9] = 4.53e-11; I_off_n[1][10] = 4.85e-11;
+        I_off_n[1][11] = 5.19e-11; I_off_n[1][12] = 5.56e-11; I_off_n[1][13] = 5.96e-11; I_off_n[1][14] = 6.39e-11; I_off_n[1][15] = 6.86e-11; 
+        I_off_n[1][16] = 7.36e-11; I_off_n[1][17] = 7.89e-11; I_off_n[1][18] = 8.45e-11; I_off_n[1][19] = 9.05e-11; I_off_n[1][20] = 9.68e-11;
+        I_off_n[1][21] = 1.04e-10; I_off_n[1][22] = 1.11e-10; I_off_n[1][23] = 1.19e-10; I_off_n[1][24] = 1.28e-10; I_off_n[1][25] = 1.37e-10; 
+        I_off_n[1][26] = 1.47e-10; I_off_n[1][27] = 1.58e-10; I_off_n[1][28] = 1.69e-10; I_off_n[1][29] = 1.81e-10; I_off_n[1][30] = 1.94e-10;
+        I_off_n[1][31] = 2.08e-10; I_off_n[1][32] = 2.22e-10; I_off_n[1][33] = 2.38e-10; I_off_n[1][34] = 2.56e-10; I_off_n[1][35] = 2.74e-10; 
+        I_off_n[1][36] = 2.94e-10; I_off_n[1][37] = 3.16e-10; I_off_n[1][38] = 3.38e-10; I_off_n[1][39] = 3.62e-10; I_off_n[1][40] = 3.87e-10;
+        I_off_n[1][41] = 4.14e-10; I_off_n[1][42] = 4.44e-10; I_off_n[1][43] = 4.76e-10; I_off_n[1][44] = 5.10e-10; I_off_n[1][45] = 5.48e-10; 
+        I_off_n[1][46] = 5.88e-10; I_off_n[1][47] = 6.30e-10; I_off_n[1][48] = 6.75e-10; I_off_n[1][49] = 7.23e-10; I_off_n[1][50] = 7.73e-10;
+        I_off_n[1][51] = 8.27e-10; I_off_n[1][52] = 8.87e-10; I_off_n[1][53] = 9.52e-10; I_off_n[1][54] = 1.02e-9; I_off_n[1][55] = 1.10e-9; 
+        I_off_n[1][56] = 1.18e-9; I_off_n[1][57] = 1.26e-9; I_off_n[1][58] = 1.35e-9; I_off_n[1][59] = 1.45e-9; I_off_n[1][60] = 1.55e-9;
+        I_off_n[1][61] = 1.66e-9; I_off_n[1][62] = 1.78e-9; I_off_n[1][63] = 1.90e-9; I_off_n[1][64] = 2.04e-9; I_off_n[1][65] = 2.19e-9; 
+        I_off_n[1][66] = 2.35e-9; I_off_n[1][67] = 2.52e-9; I_off_n[1][68] = 2.70e-9; I_off_n[1][69] = 2.89e-9; I_off_n[1][70] = 3.09e-9;
+        I_off_n[1][71] = 3.31e-9; I_off_n[1][72] = 3.54e-9; I_off_n[1][73] = 3.80e-9; I_off_n[1][74] = 4.08e-9; I_off_n[1][75] = 4.38e-9; 
+        I_off_n[1][76] = 4.70e-9; I_off_n[1][77] = 5.04e-9; I_off_n[1][78] = 5.40e-9; I_off_n[1][79] = 5.79e-9; I_off_n[1][80] = 6.19e-9;
+        I_off_n[1][81] = 6.62e-9; I_off_n[1][82] = 7.10e-9; I_off_n[1][83] = 7.62e-9; I_off_n[1][84] = 8.18e-9; I_off_n[1][85] = 8.78e-9; 
+        I_off_n[1][86] = 9.42e-9; I_off_n[1][87] = 1.01e-8; I_off_n[1][88] = 1.08e-8; I_off_n[1][89] = 1.16e-8; I_off_n[1][90] = 1.24e-8;
+        I_off_n[1][91] = 1.33e-8; I_off_n[1][92] = 1.43e-8; I_off_n[1][93] = 1.53e-8; I_off_n[1][94] = 1.65e-8; I_off_n[1][95] = 1.77e-8; 
+        I_off_n[1][96] = 1.90e-8; I_off_n[1][97] = 2.04e-8; I_off_n[1][98] = 2.18e-8; I_off_n[1][99] = 2.33e-8; I_off_n[1][100] = 2.48e-8;
 
     	//22 nm LOP
     	vdd[2] = 0.6;
@@ -1441,7 +2342,7 @@
     	Rnchannelon[2] = nmos_effective_resistance_multiplier * vdd[2] / I_on_n[2];//ohm-micron
     	Rpchannelon[2] = n_to_p_eff_curr_drv_ratio[2] * Rnchannelon[2];//ohm-micron
     	long_channel_leakage_reduction[2] = 1/2.38;
-
+/*
     	I_off_n[2][0] = 1.31e-8;
     	I_off_n[2][10] = 2.60e-8;
     	I_off_n[2][20] = 5.14e-8;
@@ -1465,8 +2366,51 @@
     	I_g_on_n[2][80] = 2.74e-9;
     	I_g_on_n[2][90] = 2.74e-9;
     	I_g_on_n[2][100] = 2.74e-9;
-
-
+*/
+        /* Leakage current data were interpolated to support full-range leakage feedback.
+           Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+        I_g_on_n[2][0] = 2.74e-9; 
+        I_g_on_n[2][1] = 2.74e-9; I_g_on_n[2][2] = 2.74e-9; I_g_on_n[2][3] = 2.74e-9; I_g_on_n[2][4] = 2.74e-9; I_g_on_n[2][5] = 2.74e-9; 
+        I_g_on_n[2][6] = 2.74e-9; I_g_on_n[2][7] = 2.74e-9; I_g_on_n[2][8] = 2.74e-9; I_g_on_n[2][9] = 2.74e-9; I_g_on_n[2][10] = 2.74e-9;
+        I_g_on_n[2][11] = 2.74e-9; I_g_on_n[2][12] = 2.74e-9; I_g_on_n[2][13] = 2.74e-9; I_g_on_n[2][14] = 2.74e-9; I_g_on_n[2][15] = 2.74e-9; 
+        I_g_on_n[2][16] = 2.74e-9; I_g_on_n[2][17] = 2.74e-9; I_g_on_n[2][18] = 2.74e-9; I_g_on_n[2][19] = 2.74e-9; I_g_on_n[2][20] = 2.74e-9;
+        I_g_on_n[2][21] = 2.74e-9; I_g_on_n[2][22] = 2.74e-9; I_g_on_n[2][23] = 2.74e-9; I_g_on_n[2][24] = 2.74e-9; I_g_on_n[2][25] = 2.74e-9; 
+        I_g_on_n[2][26] = 2.74e-9; I_g_on_n[2][27] = 2.74e-9; I_g_on_n[2][28] = 2.74e-9; I_g_on_n[2][29] = 2.74e-9; I_g_on_n[2][30] = 2.74e-9;
+        I_g_on_n[2][31] = 2.74e-9; I_g_on_n[2][32] = 2.74e-9; I_g_on_n[2][33] = 2.74e-9; I_g_on_n[2][34] = 2.74e-9; I_g_on_n[2][35] = 2.74e-9; 
+        I_g_on_n[2][36] = 2.74e-9; I_g_on_n[2][37] = 2.74e-9; I_g_on_n[2][38] = 2.74e-9; I_g_on_n[2][39] = 2.74e-9; I_g_on_n[2][40] = 2.74e-9;
+        I_g_on_n[2][41] = 2.74e-9; I_g_on_n[2][42] = 2.74e-9; I_g_on_n[2][43] = 2.74e-9; I_g_on_n[2][44] = 2.74e-9; I_g_on_n[2][45] = 2.74e-9; 
+        I_g_on_n[2][46] = 2.74e-9; I_g_on_n[2][47] = 2.74e-9; I_g_on_n[2][48] = 2.74e-9; I_g_on_n[2][49] = 2.74e-9; I_g_on_n[2][50] = 2.74e-9;
+        I_g_on_n[2][51] = 2.74e-9; I_g_on_n[2][52] = 2.74e-9; I_g_on_n[2][53] = 2.74e-9; I_g_on_n[2][54] = 2.74e-9; I_g_on_n[2][55] = 2.74e-9; 
+        I_g_on_n[2][56] = 2.74e-9; I_g_on_n[2][57] = 2.74e-9; I_g_on_n[2][58] = 2.74e-9; I_g_on_n[2][59] = 2.74e-9; I_g_on_n[2][60] = 2.74e-9;
+        I_g_on_n[2][61] = 2.74e-9; I_g_on_n[2][62] = 2.74e-9; I_g_on_n[2][63] = 2.74e-9; I_g_on_n[2][64] = 2.74e-9; I_g_on_n[2][65] = 2.74e-9; 
+        I_g_on_n[2][66] = 2.74e-9; I_g_on_n[2][67] = 2.74e-9; I_g_on_n[2][68] = 2.74e-9; I_g_on_n[2][69] = 2.74e-9; I_g_on_n[2][70] = 2.74e-9;
+        I_g_on_n[2][71] = 2.74e-9; I_g_on_n[2][72] = 2.74e-9; I_g_on_n[2][73] = 2.74e-9; I_g_on_n[2][74] = 2.74e-9; I_g_on_n[2][75] = 2.74e-9; 
+        I_g_on_n[2][76] = 2.74e-9; I_g_on_n[2][77] = 2.74e-9; I_g_on_n[2][78] = 2.74e-9; I_g_on_n[2][79] = 2.74e-9; I_g_on_n[2][80] = 2.74e-9;
+        I_g_on_n[2][81] = 2.74e-9; I_g_on_n[2][82] = 2.74e-9; I_g_on_n[2][83] = 2.74e-9; I_g_on_n[2][84] = 2.74e-9; I_g_on_n[2][85] = 2.74e-9; 
+        I_g_on_n[2][86] = 2.74e-9; I_g_on_n[2][87] = 2.74e-9; I_g_on_n[2][88] = 2.74e-9; I_g_on_n[2][89] = 2.74e-9; I_g_on_n[2][90] = 2.74e-9;
+        I_g_on_n[2][91] = 2.74e-9; I_g_on_n[2][92] = 2.74e-9; I_g_on_n[2][93] = 2.74e-9; I_g_on_n[2][94] = 2.74e-9; I_g_on_n[2][95] = 2.74e-9; 
+        I_g_on_n[2][96] = 2.74e-9; I_g_on_n[2][97] = 2.74e-9; I_g_on_n[2][98] = 2.74e-9; I_g_on_n[2][99] = 2.74e-9; I_g_on_n[2][100] = 2.74e-9;
+        I_off_n[2][0] = 1.31e-8; 
+        I_off_n[2][1] = 1.38e-8; I_off_n[2][2] = 1.47e-8; I_off_n[2][3] = 1.58e-8; I_off_n[2][4] = 1.70e-8; I_off_n[2][5] = 1.82e-8; 
+        I_off_n[2][6] = 1.96e-8; I_off_n[2][7] = 2.11e-8; I_off_n[2][8] = 2.27e-8; I_off_n[2][9] = 2.43e-8; I_off_n[2][10] = 2.60e-8;
+        I_off_n[2][11] = 2.27e-8; I_off_n[2][12] = 2.97e-8; I_off_n[2][13] = 3.19e-8; I_off_n[2][14] = 3.42e-8; I_off_n[2][15] = 3.66e-8; 
+        I_off_n[2][16] = 3.92e-8; I_off_n[2][17] = 4.20e-8; I_off_n[2][18] = 4.50e-8; I_off_n[2][19] = 4.81e-8; I_off_n[2][20] = 5.14e-8;
+        I_off_n[2][21] = 5.50e-8; I_off_n[2][22] = 5.88e-8; I_off_n[2][23] = 6.31e-8; I_off_n[2][24] = 6.76e-8; I_off_n[2][25] = 7.25e-8; 
+        I_off_n[2][26] = 7.78e-8; I_off_n[2][27] = 8.33e-8; I_off_n[2][28] = 8.92e-8; I_off_n[2][29] = 9.54e-8; I_off_n[2][30] = 1.02e-7;
+        I_off_n[2][31] = 1.09e-7; I_off_n[2][32] = 1.17e-7; I_off_n[2][33] = 1.25e-7; I_off_n[2][34] = 1.34e-7; I_off_n[2][35] = 1.44e-7; 
+        I_off_n[2][36] = 1.54e-7; I_off_n[2][37] = 1.65e-7; I_off_n[2][38] = 1.77e-7; I_off_n[2][39] = 1.89e-7; I_off_n[2][40] = 2.02e-7;
+        I_off_n[2][41] = 2.16e-7; I_off_n[2][42] = 2.31e-7; I_off_n[2][43] = 2.48e-7; I_off_n[2][44] = 2.65e-7; I_off_n[2][45] = 2.84e-7; 
+        I_off_n[2][46] = 3.05e-7; I_off_n[2][47] = 3.26e-7; I_off_n[2][48] = 3.49e-7; I_off_n[2][49] = 3.73e-7; I_off_n[2][50] = 3.99e-7;
+        I_off_n[2][51] = 4.28e-7; I_off_n[2][52] = 4.62e-7; I_off_n[2][53] = 5.01e-7; I_off_n[2][54] = 5.42e-7; I_off_n[2][55] = 5.85e-7; 
+        I_off_n[2][56] = 6.29e-7; I_off_n[2][57] = 6.73e-7; I_off_n[2][58] = 7.15e-7; I_off_n[2][59] = 7.55e-7; I_off_n[2][60] = 7.91e-7;
+        I_off_n[2][61] = 8.23e-7; I_off_n[2][62] = 8.51e-7; I_off_n[2][63] = 8.76e-7; I_off_n[2][64] = 9.01e-7; I_off_n[2][65] = 9.25e-7; 
+        I_off_n[2][66] = 9.51e-7; I_off_n[2][67] = 9.79e-7; I_off_n[2][68] = 1.01e-6; I_off_n[2][69] = 1.05e-6; I_off_n[2][70] = 1.09e-6;
+        I_off_n[2][71] = 1.14e-6; I_off_n[2][72] = 1.21e-6; I_off_n[2][73] = 1.29e-6; I_off_n[2][74] = 1.38e-6; I_off_n[2][75] = 1.48e-6; 
+        I_off_n[2][76] = 1.59e-6; I_off_n[2][77] = 1.71e-6; I_off_n[2][78] = 1.83e-6; I_off_n[2][79] = 1.96e-6; I_off_n[2][80] = 2.09e-6;
+        I_off_n[2][81] = 2.25e-6; I_off_n[2][82] = 2.44e-6; I_off_n[2][83] = 2.66e-6; I_off_n[2][84] = 2.90e-6; I_off_n[2][85] = 3.14e-6; 
+        I_off_n[2][86] = 3.38e-6; I_off_n[2][87] = 3.60e-6; I_off_n[2][88] = 3.79e-6; I_off_n[2][89] = 3.94e-6; I_off_n[2][90] = 4.04e-6;
+        I_off_n[2][91] = 4.11e-6; I_off_n[2][92] = 4.18e-6; I_off_n[2][93] = 4.24e-6; I_off_n[2][94] = 4.30e-6; I_off_n[2][95] = 4.35e-6; 
+        I_off_n[2][96] = 4.39e-6; I_off_n[2][97] = 4.43e-6; I_off_n[2][98] = 4.46e-6; I_off_n[2][99] = 4.47e-6; I_off_n[2][100] = 4.48e-6;
 
         if (ram_cell_tech_type == 3)
               {}
@@ -1510,6 +2454,7 @@
     		Rnchannelon[3] = nmos_effective_resistance_multiplier * curr_vpp  / I_on_n[3];//ohm-micron
     		Rpchannelon[3] = n_to_p_eff_curr_drv_ratio[3] * Rnchannelon[3];//ohm-micron
     		long_channel_leakage_reduction[3] = 1;
+/*
     		I_off_n[3][0] = 1.1e-13; //A/micron
     		I_off_n[3][10] = 2.11e-13;
     		I_off_n[3][20] = 3.88e-13;
@@ -1521,7 +2466,30 @@
     		I_off_n[3][80] = 7.85e-12;
     		I_off_n[3][90] = 1.18e-11;
     		I_off_n[3][100] = 1.72e-11;
-
+*/
+                /* Leakage current data were interpolated to support full-range leakage feedback.
+                   Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+                I_off_n[3][0] = 1.10e-13; 
+                I_off_n[3][1] = 1.17e-13; I_off_n[3][2] = 1.24e-13; I_off_n[3][3] = 1.33e-13; I_off_n[3][4] = 1.42e-13; I_off_n[3][5] = 1.52e-13; 
+                I_off_n[3][6] = 1.63e-13; I_off_n[3][7] = 1.74e-13; I_off_n[3][8] = 1.86e-13; I_off_n[3][9] = 1.98e-13; I_off_n[3][10] = 2.11e-13;
+                I_off_n[3][11] = 2.24e-13; I_off_n[3][12] = 2.39e-13; I_off_n[3][13] = 2.54e-13; I_off_n[3][14] = 2.70e-13; I_off_n[3][15] = 2.88e-13; 
+                I_off_n[3][16] = 3.06e-13; I_off_n[3][17] = 3.25e-13; I_off_n[3][18] = 3.45e-13; I_off_n[3][19] = 3.66e-13; I_off_n[3][20] = 3.88e-13;
+                I_off_n[3][21] = 4.11e-13; I_off_n[3][22] = 4.36e-13; I_off_n[3][23] = 4.62e-13; I_off_n[3][24] = 4.90e-13; I_off_n[3][25] = 5.20e-13; 
+                I_off_n[3][26] = 5.51e-13; I_off_n[3][27] = 5.83e-13; I_off_n[3][28] = 6.18e-13; I_off_n[3][29] = 6.53e-13; I_off_n[3][30] = 6.90e-13;
+                I_off_n[3][31] = 7.29e-13; I_off_n[3][32] = 7.71e-13; I_off_n[3][33] = 8.15e-13; I_off_n[3][34] = 8.61e-13; I_off_n[3][35] = 9.11e-13; 
+                I_off_n[3][36] = 9.62e-13; I_off_n[3][37] = 1.02e-12; I_off_n[3][38] = 1.07e-12; I_off_n[3][39] = 1.13e-12; I_off_n[3][40] = 1.19e-12;
+                I_off_n[3][41] = 1.25e-12; I_off_n[3][42] = 1.32e-12; I_off_n[3][43] = 1.39e-12; I_off_n[3][44] = 1.46e-12; I_off_n[3][45] = 1.54e-12; 
+                I_off_n[3][46] = 1.62e-12; I_off_n[3][47] = 1.71e-12; I_off_n[3][48] = 1.79e-12; I_off_n[3][49] = 1.89e-12; I_off_n[3][50] = 1.98e-12;
+                I_off_n[3][51] = 2.08e-12; I_off_n[3][52] = 2.18e-12; I_off_n[3][53] = 2.30e-12; I_off_n[3][54] = 2.41e-12; I_off_n[3][55] = 2.53e-12; 
+                I_off_n[3][56] = 2.66e-12; I_off_n[3][57] = 2.79e-12; I_off_n[3][58] = 2.93e-12; I_off_n[3][59] = 3.07e-12; I_off_n[3][60] = 3.22e-12;
+                I_off_n[3][61] = 3.37e-12; I_off_n[3][62] = 3.53e-12; I_off_n[3][63] = 3.70e-12; I_off_n[3][64] = 3.88e-12; I_off_n[3][65] = 4.06e-12; 
+                I_off_n[3][66] = 4.25e-12; I_off_n[3][67] = 4.45e-12; I_off_n[3][68] = 4.66e-12; I_off_n[3][69] = 4.87e-12; I_off_n[3][70] = 5.09e-12;
+                I_off_n[3][71] = 5.32e-12; I_off_n[3][72] = 5.56e-12; I_off_n[3][73] = 5.81e-12; I_off_n[3][74] = 6.07e-12; I_off_n[3][75] = 6.34e-12; 
+                I_off_n[3][76] = 6.62e-12; I_off_n[3][77] = 6.92e-12; I_off_n[3][78] = 7.22e-12; I_off_n[3][79] = 7.53e-12; I_off_n[3][80] = 7.85e-12;
+                I_off_n[3][81] = 8.18e-12; I_off_n[3][82] = 8.53e-12; I_off_n[3][83] = 8.89e-12; I_off_n[3][84] = 9.27e-12; I_off_n[3][85] = 9.66e-12; 
+                I_off_n[3][86] = 1.01e-11; I_off_n[3][87] = 1.05e-11; I_off_n[3][88] = 1.09e-11; I_off_n[3][89] = 1.13e-11; I_off_n[3][90] = 1.18e-11;
+                I_off_n[3][91] = 1.23e-11; I_off_n[3][92] = 1.27e-11; I_off_n[3][93] = 1.33e-11; I_off_n[3][94] = 1.38e-11; I_off_n[3][95] = 1.43e-11; 
+                I_off_n[3][96] = 1.49e-11; I_off_n[3][97] = 1.54e-11; I_off_n[3][98] = 1.60e-11; I_off_n[3][99] = 1.66e-11; I_off_n[3][100] = 1.72e-11;
     	}
         else
         {
@@ -1552,6 +2520,8 @@
     	//For 2019, MPU/ASIC stagger-contacted M1 half-pitch is 16 nm (so this is 16 nm
     	//technology i.e. FEATURESIZE = 0.016). Using the DG process numbers for HP.
     	//16 nm HP
+        SENSE_AMP_D = .03e-9; // s
+        SENSE_AMP_P = 2.16e-15; // J
     	vdd[0] = 0.7;
     	Lphy[0] = 0.006;//Lphy is the physical gate-length.
     	Lelec[0] = 0.00315;//Lelec is the electrical gate-length.
@@ -1572,6 +2542,7 @@
         Rnchannelon[0] = nmos_effective_resistance_multiplier * vdd[0] / I_on_n[0];//ohm-micron
         Rpchannelon[0] = n_to_p_eff_curr_drv_ratio[0] * Rnchannelon[0];//ohm-micron
         long_channel_leakage_reduction[0] = 1/2.655;
+/*
         I_off_n[0][0] = 1.52e-7/1.5*1.2*1.07;
         I_off_n[0][10] = 1.55e-7/1.5*1.2*1.07;
         I_off_n[0][20] = 1.59e-7/1.5*1.2*1.07;
@@ -1595,6 +2566,51 @@
         I_g_on_n[0][80] = 1.07e-9;
         I_g_on_n[0][90] = 1.07e-9;
         I_g_on_n[0][100] = 1.07e-9;
+*/
+        /* Leakage current data were interpolated to support full-range leakage feedback.
+           Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+        I_g_on_n[0][0] = 1.07e-9; 
+        I_g_on_n[0][1] = 1.07e-9; I_g_on_n[0][2] = 1.07e-9; I_g_on_n[0][3] = 1.07e-9; I_g_on_n[0][4] = 1.07e-9; I_g_on_n[0][5] = 1.07e-9; 
+        I_g_on_n[0][6] = 1.07e-9; I_g_on_n[0][7] = 1.07e-9; I_g_on_n[0][8] = 1.07e-9; I_g_on_n[0][9] = 1.07e-9; I_g_on_n[0][10] = 1.07e-9;
+        I_g_on_n[0][11] = 1.07e-9; I_g_on_n[0][12] = 1.07e-9; I_g_on_n[0][13] = 1.07e-9; I_g_on_n[0][14] = 1.07e-9; I_g_on_n[0][15] = 1.07e-9; 
+        I_g_on_n[0][16] = 1.07e-9; I_g_on_n[0][17] = 1.07e-9; I_g_on_n[0][18] = 1.07e-9; I_g_on_n[0][19] = 1.07e-9; I_g_on_n[0][20] = 1.07e-9;
+        I_g_on_n[0][21] = 1.07e-9; I_g_on_n[0][22] = 1.07e-9; I_g_on_n[0][23] = 1.07e-9; I_g_on_n[0][24] = 1.07e-9; I_g_on_n[0][25] = 1.07e-9; 
+        I_g_on_n[0][26] = 1.07e-9; I_g_on_n[0][27] = 1.07e-9; I_g_on_n[0][28] = 1.07e-9; I_g_on_n[0][29] = 1.07e-9; I_g_on_n[0][30] = 1.07e-9;
+        I_g_on_n[0][31] = 1.07e-9; I_g_on_n[0][32] = 1.07e-9; I_g_on_n[0][33] = 1.07e-9; I_g_on_n[0][34] = 1.07e-9; I_g_on_n[0][35] = 1.07e-9; 
+        I_g_on_n[0][36] = 1.07e-9; I_g_on_n[0][37] = 1.07e-9; I_g_on_n[0][38] = 1.07e-9; I_g_on_n[0][39] = 1.07e-9; I_g_on_n[0][40] = 1.07e-9;
+        I_g_on_n[0][41] = 1.07e-9; I_g_on_n[0][42] = 1.07e-9; I_g_on_n[0][43] = 1.07e-9; I_g_on_n[0][44] = 1.07e-9; I_g_on_n[0][45] = 1.07e-9; 
+        I_g_on_n[0][46] = 1.07e-9; I_g_on_n[0][47] = 1.07e-9; I_g_on_n[0][48] = 1.07e-9; I_g_on_n[0][49] = 1.07e-9; I_g_on_n[0][50] = 1.07e-9;
+        I_g_on_n[0][51] = 1.07e-9; I_g_on_n[0][52] = 1.07e-9; I_g_on_n[0][53] = 1.07e-9; I_g_on_n[0][54] = 1.07e-9; I_g_on_n[0][55] = 1.07e-9; 
+        I_g_on_n[0][56] = 1.07e-9; I_g_on_n[0][57] = 1.07e-9; I_g_on_n[0][58] = 1.07e-9; I_g_on_n[0][59] = 1.07e-9; I_g_on_n[0][60] = 1.07e-9;
+        I_g_on_n[0][61] = 1.07e-9; I_g_on_n[0][62] = 1.07e-9; I_g_on_n[0][63] = 1.07e-9; I_g_on_n[0][64] = 1.07e-9; I_g_on_n[0][65] = 1.07e-9; 
+        I_g_on_n[0][66] = 1.07e-9; I_g_on_n[0][67] = 1.07e-9; I_g_on_n[0][68] = 1.07e-9; I_g_on_n[0][69] = 1.07e-9; I_g_on_n[0][70] = 1.07e-9;
+        I_g_on_n[0][71] = 1.07e-9; I_g_on_n[0][72] = 1.07e-9; I_g_on_n[0][73] = 1.07e-9; I_g_on_n[0][74] = 1.07e-9; I_g_on_n[0][75] = 1.07e-9; 
+        I_g_on_n[0][76] = 1.07e-9; I_g_on_n[0][77] = 1.07e-9; I_g_on_n[0][78] = 1.07e-9; I_g_on_n[0][79] = 1.07e-9; I_g_on_n[0][80] = 1.07e-9;
+        I_g_on_n[0][81] = 1.07e-9; I_g_on_n[0][82] = 1.07e-9; I_g_on_n[0][83] = 1.07e-9; I_g_on_n[0][84] = 1.07e-9; I_g_on_n[0][85] = 1.07e-9; 
+        I_g_on_n[0][86] = 1.07e-9; I_g_on_n[0][87] = 1.07e-9; I_g_on_n[0][88] = 1.07e-9; I_g_on_n[0][89] = 1.07e-9; I_g_on_n[0][90] = 1.07e-9;
+        I_g_on_n[0][91] = 1.07e-9; I_g_on_n[0][92] = 1.07e-9; I_g_on_n[0][93] = 1.07e-9; I_g_on_n[0][94] = 1.07e-9; I_g_on_n[0][95] = 1.07e-9; 
+        I_g_on_n[0][96] = 1.07e-9; I_g_on_n[0][97] = 1.07e-9; I_g_on_n[0][98] = 1.07e-9; I_g_on_n[0][99] = 1.07e-9; I_g_on_n[0][100] = 1.07e-9;
+        I_off_n[0][0] = 1.30e-7; 
+        I_off_n[0][1] = 1.30e-7; I_off_n[0][2] = 1.31e-7; I_off_n[0][3] = 1.31e-7; I_off_n[0][4] = 1.31e-7; I_off_n[0][5] = 1.31e-7; 
+        I_off_n[0][6] = 1.32e-7; I_off_n[0][7] = 1.32e-7; I_off_n[0][8] = 1.32e-7; I_off_n[0][9] = 1.32e-7; I_off_n[0][10] = 1.33e-7;
+        I_off_n[0][11] = 1.33e-7; I_off_n[0][12] = 1.33e-7; I_off_n[0][13] = 1.34e-7; I_off_n[0][14] = 1.34e-7; I_off_n[0][15] = 1.34e-7; 
+        I_off_n[0][16] = 1.34e-7; I_off_n[0][17] = 1.35e-7; I_off_n[0][18] = 1.35e-7; I_off_n[0][19] = 1.36e-7; I_off_n[0][20] = 1.36e-7;
+        I_off_n[0][21] = 1.37e-7; I_off_n[0][22] = 1.37e-7; I_off_n[0][23] = 1.38e-7; I_off_n[0][24] = 1.38e-7; I_off_n[0][25] = 1.39e-7; 
+        I_off_n[0][26] = 1.40e-7; I_off_n[0][27] = 1.41e-7; I_off_n[0][28] = 1.42e-7; I_off_n[0][29] = 1.43e-7; I_off_n[0][30] = 1.44e-7;
+        I_off_n[0][31] = 1.45e-7; I_off_n[0][32] = 1.46e-7; I_off_n[0][33] = 1.48e-7; I_off_n[0][34] = 1.49e-7; I_off_n[0][35] = 1.51e-7; 
+        I_off_n[0][36] = 1.53e-7; I_off_n[0][37] = 1.55e-7; I_off_n[0][38] = 1.57e-7; I_off_n[0][39] = 1.60e-7; I_off_n[0][40] = 1.63e-7;
+        I_off_n[0][41] = 1.66e-7; I_off_n[0][42] = 1.70e-7; I_off_n[0][43] = 1.75e-7; I_off_n[0][44] = 1.81e-7; I_off_n[0][45] = 1.87e-7; 
+        I_off_n[0][46] = 1.94e-7; I_off_n[0][47] = 2.02e-7; I_off_n[0][48] = 2.11e-7; I_off_n[0][49] = 2.20e-7; I_off_n[0][50] = 2.30e-7;
+        I_off_n[0][51] = 2.42e-7; I_off_n[0][52] = 2.58e-7; I_off_n[0][53] = 2.76e-7; I_off_n[0][54] = 2.96e-7; I_off_n[0][55] = 3.19e-7; 
+        I_off_n[0][56] = 3.44e-7; I_off_n[0][57] = 3.70e-7; I_off_n[0][58] = 3.98e-7; I_off_n[0][59] = 4.26e-7; I_off_n[0][60] = 4.55e-7;
+        I_off_n[0][61] = 4.87e-7; I_off_n[0][62] = 5.22e-7; I_off_n[0][63] = 5.60e-7; I_off_n[0][64] = 6.00e-7; I_off_n[0][65] = 6.43e-7; 
+        I_off_n[0][66] = 6.88e-7; I_off_n[0][67] = 7.34e-7; I_off_n[0][68] = 7.80e-7; I_off_n[0][69] = 8.27e-7; I_off_n[0][70] = 8.73e-7;
+        I_off_n[0][71] = 9.19e-7; I_off_n[0][72] = 9.64e-7; I_off_n[0][73] = 1.01e-6; I_off_n[0][74] = 1.06e-6; I_off_n[0][75] = 1.10e-6; 
+        I_off_n[0][76] = 1.15e-6; I_off_n[0][77] = 1.21e-6; I_off_n[0][78] = 1.26e-6; I_off_n[0][79] = 1.32e-6; I_off_n[0][80] = 1.39e-6;
+        I_off_n[0][81] = 1.45e-6; I_off_n[0][82] = 1.53e-6; I_off_n[0][83] = 1.60e-6; I_off_n[0][84] = 1.68e-6; I_off_n[0][85] = 1.77e-6; 
+        I_off_n[0][86] = 1.86e-6; I_off_n[0][87] = 1.96e-6; I_off_n[0][88] = 2.08e-6; I_off_n[0][89] = 2.20e-6; I_off_n[0][90] = 2.34e-6;
+        I_off_n[0][91] = 2.50e-6; I_off_n[0][92] = 2.70e-6; I_off_n[0][93] = 2.93e-6; I_off_n[0][94] = 3.19e-6; I_off_n[0][95] = 3.48e-6; 
+        I_off_n[0][96] = 3.79e-6; I_off_n[0][97] = 4.12e-6; I_off_n[0][98] = 4.47e-6; I_off_n[0][99] = 4.84e-6; I_off_n[0][100] = 5.22e-6;
 
 //    	//16 nm LSTP DG
 //    	vdd[1] = 0.8;
@@ -1683,6 +2699,7 @@
     		Rnchannelon[3] = nmos_effective_resistance_multiplier * curr_vpp  / I_on_n[3];//ohm-micron
     		Rpchannelon[3] = n_to_p_eff_curr_drv_ratio[3] * Rnchannelon[3];//ohm-micron
     		long_channel_leakage_reduction[3] = 1;
+/*
     		I_off_n[3][0] = 1.1e-13; //A/micron
     		I_off_n[3][10] = 2.11e-13;
     		I_off_n[3][20] = 3.88e-13;
@@ -1694,7 +2711,30 @@
     		I_off_n[3][80] = 7.85e-12;
     		I_off_n[3][90] = 1.18e-11;
     		I_off_n[3][100] = 1.72e-11;
-
+*/
+                /* Leakage current data were interpolated to support full-range leakage feedback.
+                   Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+                I_off_n[3][0] = 1.10e-13; 
+                I_off_n[3][1] = 1.17e-13; I_off_n[3][2] = 1.24e-13; I_off_n[3][3] = 1.33e-13; I_off_n[3][4] = 1.42e-13; I_off_n[3][5] = 1.52e-13; 
+                I_off_n[3][6] = 1.63e-13; I_off_n[3][7] = 1.74e-13; I_off_n[3][8] = 1.86e-13; I_off_n[3][9] = 1.98e-13; I_off_n[3][10] = 2.11e-13;
+                I_off_n[3][11] = 2.24e-13; I_off_n[3][12] = 2.39e-13; I_off_n[3][13] = 2.54e-13; I_off_n[3][14] = 2.70e-13; I_off_n[3][15] = 2.88e-13; 
+                I_off_n[3][16] = 3.06e-13; I_off_n[3][17] = 3.25e-13; I_off_n[3][18] = 3.45e-13; I_off_n[3][19] = 3.66e-13; I_off_n[3][20] = 3.88e-13;
+                I_off_n[3][21] = 4.11e-13; I_off_n[3][22] = 4.36e-13; I_off_n[3][23] = 4.62e-13; I_off_n[3][24] = 4.90e-13; I_off_n[3][25] = 5.20e-13; 
+                I_off_n[3][26] = 5.51e-13; I_off_n[3][27] = 5.83e-13; I_off_n[3][28] = 6.18e-13; I_off_n[3][29] = 6.53e-13; I_off_n[3][30] = 6.90e-13;
+                I_off_n[3][31] = 7.29e-13; I_off_n[3][32] = 7.71e-13; I_off_n[3][33] = 8.15e-13; I_off_n[3][34] = 8.61e-13; I_off_n[3][35] = 9.11e-13; 
+                I_off_n[3][36] = 9.62e-13; I_off_n[3][37] = 1.02e-12; I_off_n[3][38] = 1.07e-12; I_off_n[3][39] = 1.13e-12; I_off_n[3][40] = 1.19e-12;
+                I_off_n[3][41] = 1.25e-12; I_off_n[3][42] = 1.32e-12; I_off_n[3][43] = 1.39e-12; I_off_n[3][44] = 1.46e-12; I_off_n[3][45] = 1.54e-12; 
+                I_off_n[3][46] = 1.62e-12; I_off_n[3][47] = 1.71e-12; I_off_n[3][48] = 1.79e-12; I_off_n[3][49] = 1.89e-12; I_off_n[3][50] = 1.98e-12;
+                I_off_n[3][51] = 2.08e-12; I_off_n[3][52] = 2.18e-12; I_off_n[3][53] = 2.30e-12; I_off_n[3][54] = 2.41e-12; I_off_n[3][55] = 2.53e-12; 
+                I_off_n[3][56] = 2.66e-12; I_off_n[3][57] = 2.79e-12; I_off_n[3][58] = 2.93e-12; I_off_n[3][59] = 3.07e-12; I_off_n[3][60] = 3.22e-12;
+                I_off_n[3][61] = 3.37e-12; I_off_n[3][62] = 3.53e-12; I_off_n[3][63] = 3.70e-12; I_off_n[3][64] = 3.88e-12; I_off_n[3][65] = 4.06e-12; 
+                I_off_n[3][66] = 4.25e-12; I_off_n[3][67] = 4.45e-12; I_off_n[3][68] = 4.66e-12; I_off_n[3][69] = 4.87e-12; I_off_n[3][70] = 5.09e-12;
+                I_off_n[3][71] = 5.32e-12; I_off_n[3][72] = 5.56e-12; I_off_n[3][73] = 5.81e-12; I_off_n[3][74] = 6.07e-12; I_off_n[3][75] = 6.34e-12; 
+                I_off_n[3][76] = 6.62e-12; I_off_n[3][77] = 6.92e-12; I_off_n[3][78] = 7.22e-12; I_off_n[3][79] = 7.53e-12; I_off_n[3][80] = 7.85e-12;
+                I_off_n[3][81] = 8.18e-12; I_off_n[3][82] = 8.53e-12; I_off_n[3][83] = 8.89e-12; I_off_n[3][84] = 9.27e-12; I_off_n[3][85] = 9.66e-12; 
+                I_off_n[3][86] = 1.01e-11; I_off_n[3][87] = 1.05e-11; I_off_n[3][88] = 1.09e-11; I_off_n[3][89] = 1.13e-11; I_off_n[3][90] = 1.18e-11;
+                I_off_n[3][91] = 1.23e-11; I_off_n[3][92] = 1.27e-11; I_off_n[3][93] = 1.33e-11; I_off_n[3][94] = 1.38e-11; I_off_n[3][95] = 1.43e-11; 
+                I_off_n[3][96] = 1.49e-11; I_off_n[3][97] = 1.54e-11; I_off_n[3][98] = 1.60e-11; I_off_n[3][99] = 1.66e-11; I_off_n[3][100] = 1.72e-11;
     	}
         else
         {
@@ -2904,18 +3944,18 @@
 //    g_tp.ild_thickness             += ild_thickness;
 
   }
-  g_tp.fringe_cap = fringe_cap;
+    g_tp.fringe_cap = fringe_cap;
 
-  double rd = tr_R_on(g_tp.min_w_nmos_, NCH, 1);
-  double p_to_n_sizing_r = pmos_to_nmos_sz_ratio();
-  double c_load = gate_C(g_tp.min_w_nmos_ * (1 + p_to_n_sizing_r), 0.0);
-  double tf = rd * c_load;
-  g_tp.kinv = horowitz(0, tf, 0.5, 0.5, RISE);
-  double KLOAD = 1;
-  c_load = KLOAD * (drain_C_(g_tp.min_w_nmos_, NCH, 1, 1, g_tp.cell_h_def) +
-                    drain_C_(g_tp.min_w_nmos_ * p_to_n_sizing_r, PCH, 1, 1, g_tp.cell_h_def) +
-                    gate_C(g_tp.min_w_nmos_ * 4 * (1 + p_to_n_sizing_r), 0.0));
-  tf = rd * c_load;
-  g_tp.FO4 = horowitz(0, tf, 0.5, 0.5, RISE);
+    double rd = tr_R_on(g_tp.min_w_nmos_, NCH, 1);
+    double p_to_n_sizing_r = pmos_to_nmos_sz_ratio();
+    double c_load = gate_C(g_tp.min_w_nmos_ * (1 + p_to_n_sizing_r), 0.0);
+    double tf = rd * c_load;
+    g_tp.kinv = horowitz(0, tf, 0.5, 0.5, RISE);
+    double KLOAD = 1;
+    c_load = KLOAD * (drain_C_(g_tp.min_w_nmos_, NCH, 1, 1, g_tp.cell_h_def) +
+                      drain_C_(g_tp.min_w_nmos_ * p_to_n_sizing_r, PCH, 1, 1, g_tp.cell_h_def) +
+                      gate_C(g_tp.min_w_nmos_ * 4 * (1 + p_to_n_sizing_r), 0.0));
+    tf = rd * c_load;
+    g_tp.FO4 = horowitz(0, tf, 0.5, 0.5, RISE);
 }
 
diff -Nur McPAT08release/cacti/uca.cc ../McPAT08release/cacti/uca.cc
--- McPAT08release/cacti/uca.cc	2012-10-02 10:45:00.000000000 -0400
+++ ../McPAT08release/cacti/uca.cc	2015-04-24 21:42:11.000000000 -0400
@@ -1,33 +1,43 @@
-/*****************************************************************************
- *                                McPAT/CACTI
- *                      SOFTWARE LICENSE AGREEMENT
- *            Copyright 2012 Hewlett-Packard Development Company, L.P.
- *                          All Rights Reserved
+/*------------------------------------------------------------
+ *                              CACTI 6.5
+ *         Copyright 2008 Hewlett-Packard Development Corporation
+ *                         All Rights Reserved
  *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met: redistributions of source code must retain the above copyright
- * notice, this list of conditions and the following disclaimer;
- * redistributions in binary form must reproduce the above copyright
- * notice, this list of conditions and the following disclaimer in the
- * documentation and/or other materials provided with the distribution;
- * neither the name of the copyright holders nor the names of its
- * contributors may be used to endorse or promote products derived from
- * this software without specific prior written permission.
-
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.”
+ * Permission to use, copy, and modify this software and its documentation is
+ * hereby granted only under the following terms and conditions.  Both the
+ * above copyright notice and this permission notice must appear in all copies
+ * of the software, derivative works or modified versions, and any portions
+ * thereof, and both notices must appear in supporting documentation.
  *
- ***************************************************************************/
+ * Users of this software agree to the terms and conditions set forth herein, and
+ * hereby grant back to Hewlett-Packard Company and its affiliated companies ("HP")
+ * a non-exclusive, unrestricted, royalty-free right and license under any changes,
+ * enhancements or extensions  made to the core functions of the software, including
+ * but not limited to those affording compatibility with other hardware or software
+ * environments, but excluding applications which incorporate this software.
+ * Users further agree to use their best efforts to return to HP any such changes,
+ * enhancements or extensions that they make and inform HP of noteworthy uses of
+ * this software.  Correspondence should be provided to HP at:
+ *
+ *                       Director of Intellectual Property Licensing
+ *                       Office of Strategy and Technology
+ *                       Hewlett-Packard Company
+ *                       1501 Page Mill Road
+ *                       Palo Alto, California  94304
+ *
+ * This software may be distributed (but not offered for sale or transferred
+ * for compensation) to third parties, provided such third parties agree to
+ * abide by the terms and conditions of this notice.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" AND HP DISCLAIMS ALL
+ * WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES
+ * OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL HP
+ * CORPORATION BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
+ * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
+ * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
+ * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
+ * SOFTWARE.
+ *------------------------------------------------------------*/
 
 
 
@@ -114,6 +124,11 @@
   delete htree_in_add;
   delete htree_in_data;
   delete htree_out_data;
+  if(dp.fully_assoc||dp.pure_cam)
+  {
+    delete htree_in_search;
+    delete htree_out_search;
+  }
 }
 
 
diff -Nur McPAT08release/core.cc ../McPAT08release/core.cc
--- McPAT08release/core.cc	2012-10-02 10:45:00.000000000 -0400
+++ ../McPAT08release/core.cc	2015-04-24 21:42:11.000000000 -0400
@@ -1,31 +1,48 @@
 /*****************************************************************************
  *                                McPAT
  *                      SOFTWARE LICENSE AGREEMENT
- *            Copyright 2012 Hewlett-Packard Development Company, L.P.
+ *            Copyright 2009 Hewlett-Packard Development Company, L.P.
  *                          All Rights Reserved
  *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met: redistributions of source code must retain the above copyright
- * notice, this list of conditions and the following disclaimer;
- * redistributions in binary form must reproduce the above copyright
- * notice, this list of conditions and the following disclaimer in the
- * documentation and/or other materials provided with the distribution;
- * neither the name of the copyright holders nor the names of its
- * contributors may be used to endorse or promote products derived from
- * this software without specific prior written permission.
-
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.”
+ * Permission to use, copy, and modify this software and its documentation is
+ * hereby granted only under the following terms and conditions.  Both the
+ * above copyright notice and this permission notice must appear in all copies
+ * of the software, derivative works or modified versions, and any portions
+ * thereof, and both notices must appear in supporting documentation.
+ *
+ * Any User of the software ("User"), by accessing and using it, agrees to the
+ * terms and conditions set forth herein, and hereby grants back to Hewlett-
+ * Packard Development Company, L.P. and its affiliated companies ("HP") a
+ * non-exclusive, unrestricted, royalty-free right and license to copy,
+ * modify, distribute copies, create derivate works and publicly display and
+ * use, any changes, modifications, enhancements or extensions made to the
+ * software by User, including but not limited to those affording
+ * compatibility with other hardware or software, but excluding pre-existing
+ * software applications that may incorporate the software.  User further
+ * agrees to use its best efforts to inform HP of any such changes,
+ * modifications, enhancements or extensions.
+ *
+ * Correspondence should be provided to HP at:
+ *
+ * Director of Intellectual Property Licensing
+ * Office of Strategy and Technology
+ * Hewlett-Packard Company
+ * 1501 Page Mill Road
+ * Palo Alto, California  94304
+ *
+ * The software may be further distributed by User (but not offered for
+ * sale or transferred for compensation) to third parties, under the
+ * condition that such third parties agree to abide by the terms and
+ * conditions of this license.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" WITH ANY AND ALL ERRORS AND DEFECTS
+ * AND USER ACKNOWLEDGES THAT THE SOFTWARE MAY CONTAIN ERRORS AND DEFECTS.
+ * HP DISCLAIMS ALL WARRANTIES WITH REGARD TO THE SOFTWARE, INCLUDING ALL
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL
+ * HP BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES
+ * OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+ * WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER ACTION, ARISING
+ * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THE SOFTWARE.
  *
  ***************************************************************************/
 
@@ -49,6 +66,7 @@
  coredynp(dyn_p_),
  IB  (0),
  BTB (0),
+ BPT (0),
  ID_inst  (0),
  ID_operand  (0),
  ID_misc  (0),
@@ -185,7 +203,7 @@
 	  interface_ip.num_wr_ports    = 0;
 	  interface_ip.num_se_rd_ports = 0;
 	  interface_ip.num_search_ports = XML->sys.core[ithCore].number_instruction_fetch_ports;
-	  icache.prefetchb = new ArrayST(&interface_ip, "icacheprefetchBuffer", Core_device, coredynp.opt_local, coredynp.core_ty);
+	  icache.prefetchb = new ArrayST(&interface_ip, "icachePrefetchBuffer", Core_device, coredynp.opt_local, coredynp.core_ty);
 	  icache.area.set_area(icache.area.get_area()+ icache.prefetchb->local_result.area);
 	  area.set_area(area.get_area()+ icache.prefetchb->local_result.area);
 	  //output_data_csv(icache.prefetchb.local_result);
@@ -263,10 +281,9 @@
     	  interface_ip.num_rd_ports    = coredynp.predictionW;
     	  interface_ip.num_wr_ports    = coredynp.predictionW;
     	  interface_ip.num_se_rd_ports = 0;
-    	  BTB = new ArrayST(&interface_ip, "Branch Target Buffer", Core_device, coredynp.opt_local, coredynp.core_ty);
+    	  BTB = new ArrayST(&interface_ip, "BranchTargetBuffer", Core_device, coredynp.opt_local, coredynp.core_ty);
     	  BTB->area.set_area(BTB->area.get_area()+ BTB->local_result.area);
     	  area.set_area(area.get_area()+ BTB->local_result.area);
-    	  ///cout<<"area="<<area<<endl;
 
     	  BPT = new BranchPredictor(XML, ithCore, &interface_ip,coredynp);
     	  area.set_area(area.get_area()+ BPT->area.get_area());
@@ -357,7 +374,7 @@
 	interface_ip.num_rd_ports    = coredynp.predictionW;
 	interface_ip.num_wr_ports    = coredynp.predictionW;
 	interface_ip.num_se_rd_ports = 0;
-	globalBPT = new ArrayST(&interface_ip, "Global Predictor", Core_device, coredynp.opt_local, coredynp.core_ty);
+	globalBPT = new ArrayST(&interface_ip, "GlobalPredictor", Core_device, coredynp.opt_local, coredynp.core_ty);
 	globalBPT->area.set_area(globalBPT->area.get_area()+ globalBPT->local_result.area);
 	area.set_area(area.get_area()+ globalBPT->local_result.area);
 
@@ -378,7 +395,7 @@
 	interface_ip.num_rd_ports    = coredynp.predictionW;
 	interface_ip.num_wr_ports    = coredynp.predictionW;
 	interface_ip.num_se_rd_ports = 0;
-	L1_localBPT = new ArrayST(&interface_ip, "L1 local Predictor", Core_device, coredynp.opt_local, coredynp.core_ty);
+	L1_localBPT = new ArrayST(&interface_ip, "L1LocalPredictor", Core_device, coredynp.opt_local, coredynp.core_ty);
 	L1_localBPT->area.set_area(L1_localBPT->area.get_area()+ L1_localBPT->local_result.area);
 	area.set_area(area.get_area()+ L1_localBPT->local_result.area);
 
@@ -399,7 +416,7 @@
 	interface_ip.num_rd_ports    = coredynp.predictionW;
 	interface_ip.num_wr_ports    = coredynp.predictionW;
 	interface_ip.num_se_rd_ports = 0;
-	L2_localBPT = new ArrayST(&interface_ip, "L2 local Predictor", Core_device, coredynp.opt_local, coredynp.core_ty);
+	L2_localBPT = new ArrayST(&interface_ip, "L2LocalPredictor", Core_device, coredynp.opt_local, coredynp.core_ty);
 	L2_localBPT->area.set_area(L2_localBPT->area.get_area()+ L2_localBPT->local_result.area);
 	area.set_area(area.get_area()+ L2_localBPT->local_result.area);
 
@@ -420,7 +437,7 @@
 	interface_ip.num_rd_ports    = coredynp.predictionW;
 	interface_ip.num_wr_ports    = coredynp.predictionW;
 	interface_ip.num_se_rd_ports = 0;
-	chooser = new ArrayST(&interface_ip, "Predictor Chooser", Core_device, coredynp.opt_local, coredynp.core_ty);
+	chooser = new ArrayST(&interface_ip, "PredictorChooser", Core_device, coredynp.opt_local, coredynp.core_ty);
 	chooser->area.set_area(chooser->area.get_area()+ chooser->local_result.area);
 	area.set_area(area.get_area()+ chooser->local_result.area);
 
@@ -867,8 +884,10 @@
 	  interface_ip.num_search_ports    =XML->sys.core[ithCore].memory_ports;
 	  LSQ = new ArrayST(&interface_ip, "Load(Store)Queue", Core_device, coredynp.opt_local, coredynp.core_ty);
 	  LSQ->area.set_area(LSQ->area.get_area()+ LSQ->local_result.area);
-	  area.set_area(area.get_area()+ LSQ->local_result.area);
-	  area.set_area(area.get_area()*cdb_overhead);
+	  area.set_area(area.get_area()+ LSQ->local_result.area*cdb_overhead);
+    /* Area overhead is wrong.
+       Modified by William Song (wjhsong@gatech.edu), Georgia Tech */      
+	  //area.set_area(area.get_area()*cdb_overhead);
 	  //output_data_csv(LSQ.LSQ.local_result);
 	  lsq_height=LSQ->local_result.cache_ht*sqrt(cdb_overhead);/*XML->sys.core[ithCore].number_hardware_threads*/
 
@@ -895,10 +914,12 @@
 		  interface_ip.num_search_ports    =XML->sys.core[ithCore].memory_ports;
 		  LoadQ = new ArrayST(&interface_ip, "LoadQueue", Core_device, coredynp.opt_local, coredynp.core_ty);
 		  LoadQ->area.set_area(LoadQ->area.get_area()+ LoadQ->local_result.area);
-		  area.set_area(area.get_area()+ LoadQ->local_result.area);
-		  area.set_area(area.get_area()*cdb_overhead);
+      /* Area overhead is wrong.
+         Modified by William Song (wjhsong@gatech.edu), Georgia Tech */      
+		  area.set_area(area.get_area()+ LoadQ->local_result.area*cdb_overhead);
+		  //area.set_area(area.get_area()*cdb_overhead);
 		  //output_data_csv(LoadQ.LoadQ.local_result);
-		  lsq_height=(LSQ->local_result.cache_ht + LoadQ->local_result.cache_ht)*sqrt(cdb_overhead);/*XML->sys.core[ithCore].number_hardware_threads*/
+		  lsq_height += LoadQ->local_result.cache_ht*sqrt(cdb_overhead);/*XML->sys.core[ithCore].number_hardware_threads*/
 	  }
 
 }
@@ -1017,7 +1038,7 @@
 	interface_ip.num_rd_ports    = 2*coredynp.peak_issueW;
 	interface_ip.num_wr_ports    = coredynp.peak_issueW;
 	interface_ip.num_se_rd_ports = 0;
-	IRF = new ArrayST(&interface_ip, "Integer Register File", Core_device, coredynp.opt_local, coredynp.core_ty);
+	IRF = new ArrayST(&interface_ip, "IntegerRegisterFile", Core_device, coredynp.opt_local, coredynp.core_ty);
 	IRF->area.set_area(IRF->area.get_area()+ IRF->local_result.area*XML->sys.core[ithCore].number_hardware_threads*coredynp.num_pipelines*cdb_overhead);
 	area.set_area(area.get_area()+ IRF->local_result.area*XML->sys.core[ithCore].number_hardware_threads*coredynp.num_pipelines*cdb_overhead);
 	//area.set_area(area.get_area()*cdb_overhead);
@@ -1044,7 +1065,7 @@
 	interface_ip.num_rd_ports    = 2*XML->sys.core[ithCore].issue_width;
 	interface_ip.num_wr_ports    = XML->sys.core[ithCore].issue_width;
 	interface_ip.num_se_rd_ports = 0;
-	FRF = new ArrayST(&interface_ip, "Floating point Register File", Core_device, coredynp.opt_local, coredynp.core_ty);
+	FRF = new ArrayST(&interface_ip, "FloatingPointRegisterFile", Core_device, coredynp.opt_local, coredynp.core_ty);
 	FRF->area.set_area(FRF->area.get_area()+ FRF->local_result.area*XML->sys.core[ithCore].number_hardware_threads*coredynp.num_fp_pipelines*cdb_overhead);
 	area.set_area(area.get_area()+ FRF->local_result.area*XML->sys.core[ithCore].number_hardware_threads*coredynp.num_fp_pipelines*cdb_overhead);
 	//area.set_area(area.get_area()*cdb_overhead);
@@ -1147,22 +1168,22 @@
 
 	  if (coredynp.core_ty==Inorder)
 	  {
-		  int_bypass   = new interconnect("Int Bypass Data", Core_device, 1, 1, int(ceil(XML->sys.machine_bits/32.0)*32),
+		  int_bypass   = new interconnect("IntBypassData", Core_device, 1, 1, int(ceil(XML->sys.machine_bits/32.0)*32),
 				  rfu->int_regfile_height + exeu->FU_height + lsq_height, &interface_ip, 3,
 				  false, 1.0, coredynp.opt_local, coredynp.core_ty);
 		  bypass.area.set_area(bypass.area.get_area() + int_bypass->area.get_area());
-		  intTagBypass = new interconnect("Int Bypass tag" , Core_device, 1, 1, coredynp.perThreadState,
+		  intTagBypass = new interconnect("IntBypassTag" , Core_device, 1, 1, coredynp.perThreadState,
 				  rfu->int_regfile_height + exeu->FU_height + lsq_height + scheu->Iw_height, &interface_ip, 3,
 				  false, 1.0, coredynp.opt_local, coredynp.core_ty);
 		  bypass.area.set_area(bypass.area.get_area()  +intTagBypass->area.get_area());
 
 		  if (coredynp.num_muls>0)
 		  {
-			  int_mul_bypass     = new interconnect("Mul Bypass Data" , Core_device, 1, 1, int(ceil(XML->sys.machine_bits/32.0)*32*1.5),
+			  int_mul_bypass     = new interconnect("MulBypassData" , Core_device, 1, 1, int(ceil(XML->sys.machine_bits/32.0)*32*1.5),
 					  rfu->fp_regfile_height + exeu->FU_height + mul->FU_height + lsq_height, &interface_ip, 3,
 					  false, 1.0, coredynp.opt_local, coredynp.core_ty);
 			  bypass.area.set_area(bypass.area.get_area()  +int_mul_bypass->area.get_area());
-			  intTag_mul_Bypass  = new interconnect("Mul Bypass tag"  , Core_device, 1, 1, coredynp.perThreadState,
+			  intTag_mul_Bypass  = new interconnect("MulBypassTag"  , Core_device, 1, 1, coredynp.perThreadState,
 					  rfu->fp_regfile_height + exeu->FU_height + mul->FU_height + lsq_height + scheu->Iw_height, &interface_ip, 3,
 					  false, 1.0, coredynp.opt_local, coredynp.core_ty);
 			  bypass.area.set_area(bypass.area.get_area()  +intTag_mul_Bypass->area.get_area());
@@ -1170,11 +1191,11 @@
 
 		  if (coredynp.num_fpus>0)
 		  {
-			  fp_bypass    = new interconnect("FP Bypass Data" , Core_device, 1, 1, int(ceil(XML->sys.machine_bits/32.0)*32*1.5),
+			  fp_bypass    = new interconnect("FPBypassData" , Core_device, 1, 1, int(ceil(XML->sys.machine_bits/32.0)*32*1.5),
 					  rfu->fp_regfile_height + fp_u->FU_height, &interface_ip, 3,
 					  false, 1.0, coredynp.opt_local, coredynp.core_ty);
 			  bypass.area.set_area(bypass.area.get_area()  +fp_bypass->area.get_area());
-			  fpTagBypass  = new interconnect("FP Bypass tag"  , Core_device, 1, 1, coredynp.perThreadState,
+			  fpTagBypass  = new interconnect("FPBypassTag"  , Core_device, 1, 1, coredynp.perThreadState,
 					  rfu->fp_regfile_height + fp_u->FU_height + lsq_height + scheu->Iw_height, &interface_ip, 3,
 					  false, 1.0, coredynp.opt_local, coredynp.core_ty);
 			  bypass.area.set_area(bypass.area.get_area()  +fpTagBypass->area.get_area());
@@ -1188,20 +1209,21 @@
 			   * data broadcast interconnects cover across functional units, lsq, inst windows and register files,
 			   * while tag broadcast interconnects also cover across ROB
 			   */
-			  int_bypass   = new interconnect("Int Bypass Data", Core_device, 1, 1, int(ceil(coredynp.int_data_width)),
+			  int_bypass   = new interconnect("IntBypassData", Core_device, 1, 1, int(ceil(coredynp.int_data_width)),
 					            rfu->int_regfile_height + exeu->FU_height + lsq_height, &interface_ip, 3,
 								false, 1.0, coredynp.opt_local, coredynp.core_ty);
 			  bypass.area.set_area(bypass.area.get_area()  +int_bypass->area.get_area());
-			  intTagBypass = new interconnect("Int Bypass tag" , Core_device, 1, 1, coredynp.phy_ireg_width,
+			  intTagBypass = new interconnect("IntBypassTag" , Core_device, 1, 1, coredynp.phy_ireg_width,
 					            rfu->int_regfile_height + exeu->FU_height + lsq_height + scheu->Iw_height + scheu->ROB_height , &interface_ip, 3,
 								false, 1.0, coredynp.opt_local, coredynp.core_ty);
+			  bypass.area.set_area(bypass.area.get_area()  +intTagBypass->area.get_area()); 
 
 			  if (coredynp.num_muls>0)
 			  {
-				  int_mul_bypass   = new interconnect("Mul Bypass Data", Core_device, 1, 1, int(ceil(coredynp.int_data_width)),
+				  int_mul_bypass   = new interconnect("MulBypassData", Core_device, 1, 1, int(ceil(coredynp.int_data_width)),
 										rfu->int_regfile_height + exeu->FU_height + mul->FU_height + lsq_height, &interface_ip, 3,
 										false, 1.0, coredynp.opt_local, coredynp.core_ty);
-				  intTag_mul_Bypass = new interconnect("Mul Bypass tag" , Core_device, 1, 1, coredynp.phy_ireg_width,
+				  intTag_mul_Bypass = new interconnect("MulBypassTag" , Core_device, 1, 1, coredynp.phy_ireg_width,
 										rfu->int_regfile_height + exeu->FU_height + mul->FU_height + lsq_height + scheu->Iw_height + scheu->ROB_height , &interface_ip, 3,
 										false, 1.0, coredynp.opt_local, coredynp.core_ty);
 				  bypass.area.set_area(bypass.area.get_area()  +int_mul_bypass->area.get_area());
@@ -1210,10 +1232,10 @@
 
 			  if (coredynp.num_fpus>0)
 			  {
-				  fp_bypass    = new interconnect("FP Bypass Data" , Core_device, 1, 1, int(ceil(coredynp.fp_data_width)),
+				  fp_bypass    = new interconnect("FPBypassData" , Core_device, 1, 1, int(ceil(coredynp.fp_data_width)),
 								  rfu->fp_regfile_height + fp_u->FU_height, &interface_ip, 3,
 								  false, 1.0, coredynp.opt_local, coredynp.core_ty);
-				  fpTagBypass  = new interconnect("FP Bypass tag"  , Core_device, 1, 1, coredynp.phy_freg_width,
+				  fpTagBypass  = new interconnect("FPBypassTag"  , Core_device, 1, 1, coredynp.phy_freg_width,
 								  rfu->fp_regfile_height + fp_u->FU_height + lsq_height + scheu->fp_Iw_height + scheu->ROB_height, &interface_ip, 3,
 								  false, 1.0, coredynp.opt_local, coredynp.core_ty);
 				  bypass.area.set_area(bypass.area.get_area()  +fp_bypass->area.get_area());
@@ -1226,20 +1248,20 @@
               * In RS based processor both data and tag are broadcast together,
               * covering functional units, lsq, nst windows, register files, and ROBs
               */
-			  int_bypass   = new interconnect("Int Bypass Data", Core_device, 1, 1, int(ceil(coredynp.int_data_width)),
+			  int_bypass   = new interconnect("IntBypassData", Core_device, 1, 1, int(ceil(coredynp.int_data_width)),
 					            rfu->int_regfile_height + exeu->FU_height + lsq_height + scheu->Iw_height + scheu->ROB_height, &interface_ip, 3,
 								  false, 1.0, coredynp.opt_local, coredynp.core_ty);
-			  intTagBypass = new interconnect("Int Bypass tag" , Core_device, 1, 1, coredynp.phy_ireg_width,
+			  intTagBypass = new interconnect("IntBypassTag" , Core_device, 1, 1, coredynp.phy_ireg_width,
 					            rfu->int_regfile_height + exeu->FU_height + lsq_height + scheu->Iw_height + scheu->ROB_height , &interface_ip, 3,
 								  false, 1.0, coredynp.opt_local, coredynp.core_ty);
 			  bypass.area.set_area(bypass.area.get_area() +int_bypass->area.get_area());
 			  bypass.area.set_area(bypass.area.get_area() +intTagBypass->area.get_area());
 			  if (coredynp.num_muls>0)
 			  {
-				  int_mul_bypass   = new interconnect("Mul Bypass Data", Core_device, 1, 1, int(ceil(coredynp.int_data_width)),
+				  int_mul_bypass   = new interconnect("MulBypassData", Core_device, 1, 1, int(ceil(coredynp.int_data_width)),
 						            rfu->int_regfile_height + exeu->FU_height + mul->FU_height + lsq_height + scheu->Iw_height + scheu->ROB_height, &interface_ip, 3,
 									  false, 1.0, coredynp.opt_local, coredynp.core_ty);
-				  intTag_mul_Bypass = new interconnect("Mul Bypass tag" , Core_device, 1, 1, coredynp.phy_ireg_width,
+				  intTag_mul_Bypass = new interconnect("MulBypassTag" , Core_device, 1, 1, coredynp.phy_ireg_width,
 						            rfu->int_regfile_height + exeu->FU_height + mul->FU_height + lsq_height + scheu->Iw_height + scheu->ROB_height , &interface_ip, 3,
 									  false, 1.0, coredynp.opt_local, coredynp.core_ty);
 				  bypass.area.set_area(bypass.area.get_area() +int_mul_bypass->area.get_area());
@@ -1248,10 +1270,10 @@
 
 			  if (coredynp.num_fpus>0)
 			  {
-				  fp_bypass    = new interconnect("FP Bypass Data" , Core_device, 1, 1, int(ceil(coredynp.fp_data_width)),
+				  fp_bypass    = new interconnect("FPBypassData" , Core_device, 1, 1, int(ceil(coredynp.fp_data_width)),
 						  rfu->fp_regfile_height + fp_u->FU_height + lsq_height + scheu->fp_Iw_height + scheu->ROB_height, &interface_ip, 3,
 						  false, 1.0, coredynp.opt_local, coredynp.core_ty);
-				  fpTagBypass  = new interconnect("FP Bypass tag"  , Core_device, 1, 1, coredynp.phy_freg_width,
+				  fpTagBypass  = new interconnect("FPBypassTag"  , Core_device, 1, 1, coredynp.phy_freg_width,
 						  rfu->fp_regfile_height + fp_u->FU_height + lsq_height + scheu->fp_Iw_height + scheu->ROB_height, &interface_ip, 3,
 						  false, 1.0, coredynp.opt_local, coredynp.core_ty);
 				  bypass.area.set_area(bypass.area.get_area() +fp_bypass->area.get_area());
@@ -1313,7 +1335,7 @@
 	//integer pipeline
 	if (coredynp.scheu_ty==PhysicalRegFile)
 	{
-		if (coredynp.rm_ty ==RAMbased)
+		if (coredynp.rm_ty==RAMbased)
 		{	  //FRAT with global checkpointing (GCs) please see paper tech report for detailed explaintions
 			data							 = 33;//int(ceil(coredynp.phy_ireg_width*(1+coredynp.globalCheckpoint)/8.0));
 //			data							 = int(ceil(coredynp.phy_ireg_width/8.0));
@@ -1337,7 +1359,7 @@
 			interface_ip.num_rd_ports    = 2*coredynp.decodeW;
 			interface_ip.num_wr_ports    = coredynp.decodeW;
 			interface_ip.num_se_rd_ports = 0;
-			iFRAT = new ArrayST(&interface_ip, "Int FrontRAT", Core_device, coredynp.opt_local, coredynp.core_ty);
+			iFRAT = new ArrayST(&interface_ip, "IntFrontRAT", Core_device, coredynp.opt_local, coredynp.core_ty);
 			iFRAT->area.set_area(iFRAT->area.get_area()+ iFRAT->local_result.area*XML->sys.core[ithCore].number_hardware_threads);
 			area.set_area(area.get_area()+ iFRAT->area.get_area());
 
@@ -1363,7 +1385,7 @@
 //			interface_ip.num_rd_ports    = 2*coredynp.decodeW;
 //			interface_ip.num_wr_ports    = coredynp.decodeW;
 //			interface_ip.num_se_rd_ports = 0;
-//			iFRAT = new ArrayST(&interface_ip, "Int FrontRAT");
+//			iFRAT = new ArrayST(&interface_ip, "IntFrontRAT");
 //			iFRAT->area.set_area(iFRAT->area.get_area()+ iFRAT->local_result.area*XML->sys.core[ithCore].number_hardware_threads);
 //			area.set_area(area.get_area()+ iFRAT->area.get_area());
 
@@ -1389,12 +1411,12 @@
 			interface_ip.num_rd_ports    = 2*coredynp.fp_decodeW;
 			interface_ip.num_wr_ports    = coredynp.fp_decodeW;
 			interface_ip.num_se_rd_ports = 0;
-			fFRAT = new ArrayST(&interface_ip, "Int FrontRAT", Core_device, coredynp.opt_local, coredynp.core_ty);
+			fFRAT = new ArrayST(&interface_ip, "FPFrontRAT", Core_device, coredynp.opt_local, coredynp.core_ty);
 			fFRAT->area.set_area(fFRAT->area.get_area()+ fFRAT->local_result.area*XML->sys.core[ithCore].number_hardware_threads);
 			area.set_area(area.get_area()+ fFRAT->area.get_area());
 
 		}
-		else if ((coredynp.rm_ty ==CAMbased))
+		else if(coredynp.rm_ty==CAMbased)
 		{
 			//FRAT
 			tag							     = coredynp.arch_ireg_width;
@@ -1422,7 +1444,7 @@
 			interface_ip.num_wr_ports    = coredynp.decodeW;
 			interface_ip.num_se_rd_ports = 0;
 			interface_ip.num_search_ports= 2*coredynp.decodeW;
-			iFRAT = new ArrayST(&interface_ip, "Int FrontRAT", Core_device, coredynp.opt_local, coredynp.core_ty);
+			iFRAT = new ArrayST(&interface_ip, "IntFrontRAT", Core_device, coredynp.opt_local, coredynp.core_ty);
 			iFRAT->area.set_area(iFRAT->area.get_area()+ iFRAT->local_result.area*XML->sys.core[ithCore].number_hardware_threads);
 			area.set_area(area.get_area()+ iFRAT->area.get_area());
 
@@ -1452,7 +1474,7 @@
 			interface_ip.num_wr_ports    = coredynp.fp_decodeW;
 			interface_ip.num_se_rd_ports = 0;
 			interface_ip.num_search_ports= 2*coredynp.fp_decodeW;
-			fFRAT = new ArrayST(&interface_ip, "Int FrontRAT", Core_device, coredynp.opt_local, coredynp.core_ty);
+			fFRAT = new ArrayST(&interface_ip, "FPFrontRAT", Core_device, coredynp.opt_local, coredynp.core_ty);
 			fFRAT->area.set_area(fFRAT->area.get_area()+ fFRAT->local_result.area*XML->sys.core[ithCore].number_hardware_threads);
 			area.set_area(area.get_area()+ fFRAT->area.get_area());
 
@@ -1479,7 +1501,7 @@
 		interface_ip.num_rd_ports    = XML->sys.core[ithCore].commit_width;
 		interface_ip.num_wr_ports    = XML->sys.core[ithCore].commit_width;
 		interface_ip.num_se_rd_ports = 0;
-		iRRAT = new ArrayST(&interface_ip, "Int RetireRAT", Core_device, coredynp.opt_local, coredynp.core_ty);
+		iRRAT = new ArrayST(&interface_ip, "IntRetireRAT", Core_device, coredynp.opt_local, coredynp.core_ty);
 		iRRAT->area.set_area(iRRAT->area.get_area()+ iRRAT->local_result.area*XML->sys.core[ithCore].number_hardware_threads);
 		area.set_area(area.get_area()+ iRRAT->area.get_area());
 
@@ -1504,7 +1526,7 @@
 		interface_ip.num_rd_ports    = coredynp.fp_decodeW;
 		interface_ip.num_wr_ports    = coredynp.fp_decodeW;
 		interface_ip.num_se_rd_ports = 0;
-		fRRAT = new ArrayST(&interface_ip, "Int RetireRAT", Core_device, coredynp.opt_local, coredynp.core_ty);
+		fRRAT = new ArrayST(&interface_ip, "FPRetireRAT", Core_device, coredynp.opt_local, coredynp.core_ty);
 		fRRAT->area.set_area(fRRAT->area.get_area()+ fRRAT->local_result.area*XML->sys.core[ithCore].number_hardware_threads);
 		area.set_area(area.get_area()+ fRRAT->area.get_area());
 
@@ -1533,7 +1555,7 @@
 		interface_ip.num_wr_ports    = coredynp.decodeW -1 + XML->sys.core[ithCore].commit_width;
 		//every cycle, (coredynp.decodeW -1) inst may need to send back it dest tags, committW insts needs to update freelist buffers
 		interface_ip.num_se_rd_ports = 0;
-		ifreeL = new ArrayST(&interface_ip, "Int Free List", Core_device, coredynp.opt_local, coredynp.core_ty);
+		ifreeL = new ArrayST(&interface_ip, "IntFreeList", Core_device, coredynp.opt_local, coredynp.core_ty);
 		ifreeL->area.set_area(ifreeL->area.get_area()+ ifreeL->local_result.area*XML->sys.core[ithCore].number_hardware_threads);
 		area.set_area(area.get_area()+ ifreeL->area.get_area());
 
@@ -1558,7 +1580,7 @@
 		interface_ip.num_rd_ports    = coredynp.fp_decodeW;
 		interface_ip.num_wr_ports    = coredynp.fp_decodeW -1 + XML->sys.core[ithCore].commit_width;
 		interface_ip.num_se_rd_ports = 0;
-		ffreeL = new ArrayST(&interface_ip, "Int Free List", Core_device, coredynp.opt_local, coredynp.core_ty);
+		ffreeL = new ArrayST(&interface_ip, "FPFreeList", Core_device, coredynp.opt_local, coredynp.core_ty);
 		ffreeL->area.set_area(ffreeL->area.get_area()+ ffreeL->local_result.area*XML->sys.core[ithCore].number_hardware_threads);
 		area.set_area(area.get_area()+ ffreeL->area.get_area());
 
@@ -1567,7 +1589,7 @@
 
 	}
 	else if (coredynp.scheu_ty==ReservationStation){
-		if (coredynp.rm_ty ==RAMbased){
+		if (coredynp.rm_ty==RAMbased){
 			/*
 			 * however, RAT needs to do associative search in RAT, when instruction commits and ROB release the entry,
 			 * to make sure all the renamings associated with the ROB to be released are updated to ARF at the same time.
@@ -1597,7 +1619,7 @@
 			interface_ip.num_wr_ports    = coredynp.decodeW;
 			interface_ip.num_se_rd_ports = 0;
 			interface_ip.num_search_ports= coredynp.commitW;//TODO
-			iFRAT = new ArrayST(&interface_ip, "Int FrontRAT", Core_device, coredynp.opt_local, coredynp.core_ty);
+			iFRAT = new ArrayST(&interface_ip, "IntFrontRAT", Core_device, coredynp.opt_local, coredynp.core_ty);
 			iFRAT->local_result.adjust_area();
 			iFRAT->area.set_area(iFRAT->area.get_area()+ iFRAT->local_result.area*XML->sys.core[ithCore].number_hardware_threads);
 			area.set_area(area.get_area()+ iFRAT->area.get_area());
@@ -1626,13 +1648,13 @@
 			interface_ip.num_wr_ports    = coredynp.fp_decodeW;
 			interface_ip.num_se_rd_ports = 0;
 			interface_ip.num_search_ports= coredynp.fp_decodeW;//actually is fp commit width
-			fFRAT = new ArrayST(&interface_ip, "Int FrontRAT", Core_device, coredynp.opt_local, coredynp.core_ty);
+			fFRAT = new ArrayST(&interface_ip, "FPFrontRAT", Core_device, coredynp.opt_local, coredynp.core_ty);
 			fFRAT->local_result.adjust_area();
 			fFRAT->area.set_area(fFRAT->area.get_area()+ fFRAT->local_result.area*XML->sys.core[ithCore].number_hardware_threads);
 			area.set_area(area.get_area()+ fFRAT->area.get_area());
 
 		}
-		else if ((coredynp.rm_ty ==CAMbased))
+		else if(coredynp.rm_ty==CAMbased)
 		{
 			//FRAT
 			tag							     = coredynp.arch_ireg_width;
@@ -1660,7 +1682,7 @@
 			interface_ip.num_wr_ports    = XML->sys.core[ithCore].decode_width;
 			interface_ip.num_se_rd_ports = 0;
 			interface_ip.num_search_ports= 2*XML->sys.core[ithCore].decode_width;
-			iFRAT = new ArrayST(&interface_ip, "Int FrontRAT", Core_device, coredynp.opt_local, coredynp.core_ty);
+			iFRAT = new ArrayST(&interface_ip, "IntFrontRAT", Core_device, coredynp.opt_local, coredynp.core_ty);
 			iFRAT->area.set_area(iFRAT->area.get_area()+ iFRAT->local_result.area*XML->sys.core[ithCore].number_hardware_threads);
 			area.set_area(area.get_area()+ iFRAT->area.get_area());
 
@@ -1690,7 +1712,7 @@
 			interface_ip.num_wr_ports    = coredynp.fp_decodeW;
 			interface_ip.num_se_rd_ports = 0;
 			interface_ip.num_search_ports= 2*coredynp.fp_decodeW;
-			fFRAT = new ArrayST(&interface_ip, "Int FrontRAT", Core_device, coredynp.opt_local, coredynp.core_ty);
+			fFRAT = new ArrayST(&interface_ip, "FPFrontRAT", Core_device, coredynp.opt_local, coredynp.core_ty);
 			fFRAT->area.set_area(fFRAT->area.get_area()+ fFRAT->local_result.area*XML->sys.core[ithCore].number_hardware_threads);
 			area.set_area(area.get_area()+ fFRAT->area.get_area());
 
@@ -1717,7 +1739,7 @@
 		interface_ip.num_rd_ports    = XML->sys.core[ithCore].decode_width;
 		interface_ip.num_wr_ports    = XML->sys.core[ithCore].decode_width -1 + XML->sys.core[ithCore].commit_width;
 		interface_ip.num_se_rd_ports = 0;
-		ifreeL = new ArrayST(&interface_ip, "Unified Free List", Core_device, coredynp.opt_local, coredynp.core_ty);
+		ifreeL = new ArrayST(&interface_ip, "UnifiedFreeList", Core_device, coredynp.opt_local, coredynp.core_ty);
 		ifreeL->area.set_area(ifreeL->area.get_area()+ ifreeL->local_result.area*XML->sys.core[ithCore].number_hardware_threads);
 		area.set_area(area.get_area()+ ifreeL->area.get_area());
 
@@ -2034,6 +2056,7 @@
     	{
     		BTB->stats_t.readAc.access  = coredynp.predictionW;//XML->sys.core[ithCore].BTB.read_accesses;
     		BTB->stats_t.writeAc.access = 0;//XML->sys.core[ithCore].BTB.write_accesses;
+	        BTB->tdp_stats = BTB->stats_t;
     	}
 
     	ID_inst->stats_t.readAc.access     = coredynp.decodeW;
@@ -2283,7 +2306,7 @@
 		if (coredynp.core_ty==OOO){
 			if (coredynp.scheu_ty==PhysicalRegFile)
 			{
-				if (coredynp.rm_ty ==RAMbased)
+				if (coredynp.rm_ty==RAMbased)
 				{
 					iFRAT->stats_t.readAc.access   = iFRAT->l_ip.num_rd_ports;
 					iFRAT->stats_t.writeAc.access  = iFRAT->l_ip.num_wr_ports;
@@ -2294,7 +2317,7 @@
 					fFRAT->tdp_stats = fFRAT->stats_t;
 
 				}
-				else if ((coredynp.rm_ty ==CAMbased))
+				else if(coredynp.rm_ty==CAMbased)
 				{
 					iFRAT->stats_t.readAc.access   = iFRAT->l_ip.num_search_ports;
 					iFRAT->stats_t.writeAc.access  = iFRAT->l_ip.num_wr_ports;
@@ -2322,7 +2345,7 @@
 				ffreeL->tdp_stats = ffreeL->stats_t;
 			}
 			else if (coredynp.scheu_ty==ReservationStation){
-				if (coredynp.rm_ty ==RAMbased)
+				if (coredynp.rm_ty==RAMbased)
 				{
 					iFRAT->stats_t.readAc.access    = iFRAT->l_ip.num_rd_ports;
 					iFRAT->stats_t.writeAc.access   = iFRAT->l_ip.num_wr_ports;
@@ -2335,7 +2358,7 @@
 					fFRAT->tdp_stats = fFRAT->stats_t;
 
 				}
-				else if ((coredynp.rm_ty ==CAMbased))
+				else if(coredynp.rm_ty==CAMbased)
 				{
 					iFRAT->stats_t.readAc.access   = iFRAT->l_ip.num_search_ports;
 					iFRAT->stats_t.writeAc.access  = iFRAT->l_ip.num_wr_ports;
@@ -2372,7 +2395,7 @@
 		if (coredynp.core_ty==OOO){
 			if (coredynp.scheu_ty==PhysicalRegFile)
 			{
-				if (coredynp.rm_ty ==RAMbased)
+				if (coredynp.rm_ty==RAMbased)
 				{
 					iFRAT->stats_t.readAc.access   = XML->sys.core[ithCore].rename_reads;
 					iFRAT->stats_t.writeAc.access  = XML->sys.core[ithCore].rename_writes;
@@ -2382,7 +2405,7 @@
 					fFRAT->stats_t.writeAc.access  = XML->sys.core[ithCore].fp_rename_writes;
 					fFRAT->rtp_stats = fFRAT->stats_t;
 				}
-				else if ((coredynp.rm_ty ==CAMbased))
+				else if(coredynp.rm_ty==CAMbased)
 				{
 					iFRAT->stats_t.readAc.access   = XML->sys.core[ithCore].rename_reads;
 					iFRAT->stats_t.writeAc.access  = XML->sys.core[ithCore].rename_writes;
@@ -2410,7 +2433,7 @@
 				ffreeL->rtp_stats = ffreeL->stats_t;
 			}
 			else if (coredynp.scheu_ty==ReservationStation){
-				if (coredynp.rm_ty ==RAMbased)
+				if (coredynp.rm_ty==RAMbased)
 				{
 					iFRAT->stats_t.readAc.access   = XML->sys.core[ithCore].rename_reads;
 					iFRAT->stats_t.writeAc.access  = XML->sys.core[ithCore].rename_writes;
@@ -2422,7 +2445,7 @@
 					fFRAT->stats_t.searchAc.access  = XML->sys.core[ithCore].committed_fp_instructions;
 					fFRAT->rtp_stats = fFRAT->stats_t;
 				}
-				else if ((coredynp.rm_ty ==CAMbased))
+				else if(coredynp.rm_ty==CAMbased)
 				{
 					iFRAT->stats_t.readAc.access   = XML->sys.core[ithCore].rename_reads;
 					iFRAT->stats_t.writeAc.access  = XML->sys.core[ithCore].rename_writes;
@@ -2462,19 +2485,26 @@
 	{
 		if (coredynp.scheu_ty==PhysicalRegFile)
 		{
-			if (coredynp.rm_ty ==RAMbased)
+			if (coredynp.rm_ty==RAMbased)
 			{
 				iFRAT->power_t.reset();
 				fFRAT->power_t.reset();
-
-				iFRAT->power_t.readOp.dynamic  +=  (iFRAT->stats_t.readAc.access
+        
+        /* McPAT failed to add idcl and fdcl leakage power. 
+           Dynamic and switch power should be 0 since they are manually added up to iFRAT and fFRAT.
+           Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+        set_pppm(pppm_t, 0, coredynp.num_hthreads, coredynp.num_hthreads, 0);
+        idcl->power_t = idcl->power*pppm_t;
+        fdcl->power_t = fdcl->power*pppm_t;
+           
+ 				iFRAT->power_t.readOp.dynamic  +=  (iFRAT->stats_t.readAc.access
 						*(iFRAT->local_result.power.readOp.dynamic + idcl->power.readOp.dynamic)
 						+iFRAT->stats_t.writeAc.access*iFRAT->local_result.power.writeOp.dynamic);
 				fFRAT->power_t.readOp.dynamic  +=  (fFRAT->stats_t.readAc.access
 						*(fFRAT->local_result.power.readOp.dynamic + fdcl->power.readOp.dynamic)
 						+fFRAT->stats_t.writeAc.access*fFRAT->local_result.power.writeOp.dynamic);
 			}
-			else if ((coredynp.rm_ty ==CAMbased))
+			else if(coredynp.rm_ty==CAMbased)
 			{
 				iFRAT->power_t.reset();
 				fFRAT->power_t.reset();
@@ -2503,7 +2533,7 @@
 		}
 		else if (coredynp.scheu_ty==ReservationStation)
 		{
-			if (coredynp.rm_ty ==RAMbased)
+			if (coredynp.rm_ty==RAMbased)
 			{
 				iFRAT->power_t.reset();
 				fFRAT->power_t.reset();
@@ -2517,7 +2547,7 @@
 						+fFRAT->stats_t.writeAc.access*fFRAT->local_result.power.writeOp.dynamic
 						+fFRAT->stats_t.searchAc.access*fFRAT->local_result.power.searchOp.dynamic);
 			}
-			else if ((coredynp.rm_ty ==CAMbased))
+			else if(coredynp.rm_ty==CAMbased)
 			{
 				iFRAT->power_t.reset();
 				fFRAT->power_t.reset();
@@ -2835,6 +2865,8 @@
 		 * two search ops with one for each source operand
 		 *
 		 */
+    /* Copy and Paste Error? int_inst_window->stats_t.readAc.access
+       Modified by William Song (wjhsong@gatech.edu), Georgia Tech */      
 		int_inst_window->power_t.readOp.dynamic  +=  int_inst_window->local_result.power.readOp.dynamic * int_inst_window->stats_t.readAc.access
 					+ int_inst_window->local_result.power.searchOp.dynamic * int_inst_window->stats_t.searchAc.access
 					+ int_inst_window->local_result.power.writeOp.dynamic  * int_inst_window->stats_t.writeAc.access
@@ -2843,7 +2875,7 @@
 		fp_inst_window->power_t.readOp.dynamic   +=  fp_inst_window->local_result.power.readOp.dynamic * fp_inst_window->stats_t.readAc.access
 					+ fp_inst_window->local_result.power.searchOp.dynamic * fp_inst_window->stats_t.searchAc.access
 					+ fp_inst_window->local_result.power.writeOp.dynamic * fp_inst_window->stats_t.writeAc.access
-					+ fp_inst_window->stats_t.writeAc.access * instruction_selection->power.readOp.dynamic;
+					+ fp_inst_window->stats_t.readAc.access * instruction_selection->power.readOp.dynamic;
 
 		if (XML->sys.core[ithCore].ROB_size >0)
 		{
@@ -2862,7 +2894,7 @@
 		int_inst_window->power_t.readOp.dynamic  +=  int_inst_window->local_result.power.readOp.dynamic * int_inst_window->stats_t.readAc.access
 						  + int_inst_window->local_result.power.searchOp.dynamic * int_inst_window->stats_t.searchAc.access
 				          + int_inst_window->local_result.power.writeOp.dynamic  * int_inst_window->stats_t.writeAc.access
-				          + int_inst_window->stats_t.writeAc.access * instruction_selection->power.readOp.dynamic;
+				          + int_inst_window->stats_t.readAc.access * instruction_selection->power.readOp.dynamic;
 	}
 
 	//assign values
@@ -3870,6 +3902,9 @@
 				exu->displayEnergy(indent+4,plevel,is_tdp);
 			}
 		}
+        if(undiffCore) {
+            undiffCore->displayEnergy(indent+4,plevel,is_tdp);
+        }
 //		if (plevel >2)
 //		{
 //			if (undiffCore->exist)
@@ -4098,7 +4133,7 @@
 		exit(0);
 	}
 
-	if (!((coredynp.rm_ty ==RAMbased)||(coredynp.rm_ty ==CAMbased)))
+	if (!((coredynp.rm_ty==RAMbased)||(coredynp.rm_ty==CAMbased)))
 	{
 		cout<<"Invalid OOO Renaming Type"<<endl;
 		exit(0);
diff -Nur McPAT08release/globalvar.h ../McPAT08release/globalvar.h
--- McPAT08release/globalvar.h	2012-10-02 10:45:00.000000000 -0400
+++ ../McPAT08release/globalvar.h	2015-04-24 21:42:11.000000000 -0400
@@ -1,31 +1,48 @@
 /*****************************************************************************
  *                                McPAT
  *                      SOFTWARE LICENSE AGREEMENT
- *            Copyright 2012 Hewlett-Packard Development Company, L.P.
+ *            Copyright 2009 Hewlett-Packard Development Company, L.P.
  *                          All Rights Reserved
  *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met: redistributions of source code must retain the above copyright
- * notice, this list of conditions and the following disclaimer;
- * redistributions in binary form must reproduce the above copyright
- * notice, this list of conditions and the following disclaimer in the
- * documentation and/or other materials provided with the distribution;
- * neither the name of the copyright holders nor the names of its
- * contributors may be used to endorse or promote products derived from
- * this software without specific prior written permission.
-
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.”
+ * Permission to use, copy, and modify this software and its documentation is
+ * hereby granted only under the following terms and conditions.  Both the
+ * above copyright notice and this permission notice must appear in all copies
+ * of the software, derivative works or modified versions, and any portions
+ * thereof, and both notices must appear in supporting documentation.
+ *
+ * Any User of the software ("User"), by accessing and using it, agrees to the
+ * terms and conditions set forth herein, and hereby grants back to Hewlett-
+ * Packard Development Company, L.P. and its affiliated companies ("HP") a
+ * non-exclusive, unrestricted, royalty-free right and license to copy,
+ * modify, distribute copies, create derivate works and publicly display and
+ * use, any changes, modifications, enhancements or extensions made to the
+ * software by User, including but not limited to those affording
+ * compatibility with other hardware or software, but excluding pre-existing
+ * software applications that may incorporate the software.  User further
+ * agrees to use its best efforts to inform HP of any such changes,
+ * modifications, enhancements or extensions.
+ *
+ * Correspondence should be provided to HP at:
+ *
+ * Director of Intellectual Property Licensing
+ * Office of Strategy and Technology
+ * Hewlett-Packard Company
+ * 1501 Page Mill Road
+ * Palo Alto, California  94304
+ *
+ * The software may be further distributed by User (but not offered for
+ * sale or transferred for compensation) to third parties, under the
+ * condition that such third parties agree to abide by the terms and
+ * conditions of this license.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" WITH ANY AND ALL ERRORS AND DEFECTS
+ * AND USER ACKNOWLEDGES THAT THE SOFTWARE MAY CONTAIN ERRORS AND DEFECTS.
+ * HP DISCLAIMS ALL WARRANTIES WITH REGARD TO THE SOFTWARE, INCLUDING ALL
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL
+ * HP BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES
+ * OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+ * WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER ACTION, ARISING
+ * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THE SOFTWARE.
  *
  ***************************************************************************/
 
diff -Nur McPAT08release/interconnect.cc ../McPAT08release/interconnect.cc
--- McPAT08release/interconnect.cc	2012-10-02 10:45:00.000000000 -0400
+++ ../McPAT08release/interconnect.cc	2015-04-24 21:42:11.000000000 -0400
@@ -1,31 +1,48 @@
 /*****************************************************************************
  *                                McPAT
  *                      SOFTWARE LICENSE AGREEMENT
- *            Copyright 2012 Hewlett-Packard Development Company, L.P.
+ *            Copyright 2009 Hewlett-Packard Development Company, L.P.
  *                          All Rights Reserved
  *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met: redistributions of source code must retain the above copyright
- * notice, this list of conditions and the following disclaimer;
- * redistributions in binary form must reproduce the above copyright
- * notice, this list of conditions and the following disclaimer in the
- * documentation and/or other materials provided with the distribution;
- * neither the name of the copyright holders nor the names of its
- * contributors may be used to endorse or promote products derived from
- * this software without specific prior written permission.
-
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.”
+ * Permission to use, copy, and modify this software and its documentation is
+ * hereby granted only under the following terms and conditions.  Both the
+ * above copyright notice and this permission notice must appear in all copies
+ * of the software, derivative works or modified versions, and any portions
+ * thereof, and both notices must appear in supporting documentation.
+ *
+ * Any User of the software ("User"), by accessing and using it, agrees to the
+ * terms and conditions set forth herein, and hereby grants back to Hewlett-
+ * Packard Development Company, L.P. and its affiliated companies ("HP") a
+ * non-exclusive, unrestricted, royalty-free right and license to copy,
+ * modify, distribute copies, create derivate works and publicly display and
+ * use, any changes, modifications, enhancements or extensions made to the
+ * software by User, including but not limited to those affording
+ * compatibility with other hardware or software, but excluding pre-existing
+ * software applications that may incorporate the software.  User further
+ * agrees to use its best efforts to inform HP of any such changes,
+ * modifications, enhancements or extensions.
+ *
+ * Correspondence should be provided to HP at:
+ *
+ * Director of Intellectual Property Licensing
+ * Office of Strategy and Technology
+ * Hewlett-Packard Company
+ * 1501 Page Mill Road
+ * Palo Alto, California  94304
+ *
+ * The software may be further distributed by User (but not offered for
+ * sale or transferred for compensation) to third parties, under the
+ * condition that such third parties agree to abide by the terms and
+ * conditions of this license.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" WITH ANY AND ALL ERRORS AND DEFECTS
+ * AND USER ACKNOWLEDGES THAT THE SOFTWARE MAY CONTAIN ERRORS AND DEFECTS.
+ * HP DISCLAIMS ALL WARRANTIES WITH REGARD TO THE SOFTWARE, INCLUDING ALL
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL
+ * HP BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES
+ * OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+ * WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER ACTION, ARISING
+ * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THE SOFTWARE.
  *
  ***************************************************************************/
 
@@ -70,7 +87,6 @@
   route_over_perc(route_over_perc_),
   deviceType(dt)
 {
-
   wt = Global;
   l_ip=*configure_interface;
   local_result = init_interface(&l_ip);
@@ -168,7 +184,7 @@
   if (pipelinable)//Only global wires has the option to choose whether routing over or not
 	  area.set_area(area.get_area()*route_over_perc + no_device_under_wire_area.get_area()*(1-route_over_perc));
 
-  Wire wreset();
+  Wire wreset;
 }
 
 
@@ -187,18 +203,32 @@
   area.set_area(wtemp1->area.get_area());
   no_device_under_wire_area.h =  (wtemp1->wire_width + wtemp1->wire_spacing);
   no_device_under_wire_area.w = length;
-
-  if (wtemp1)
-   delete wtemp1;
+  delete wtemp1;
 
 }
 
-void interconnect::leakage_feedback(double temperature)
+/* This is runtime energy update for the change of parameters.
+   Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+void interconnect::update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech)
 {
-  l_ip.temp = (unsigned int)round(temperature/10.0)*10;
+  power.reset();
+
+  *g_ip = l_ip = McPAT_input;
+
   uca_org_t init_result = init_interface(&l_ip); // init_result is dummy
 
-  compute();
+  g_tp = McPAT_tech; //overwrite
+
+  Wire winit(width_scaling, space_scaling);
+
+  // following is part of compute()
+  Wire *wtemp1 = 0;
+  wtemp1 = new Wire(wt, length, 1, width_scaling, space_scaling);
+  delay = wtemp1->delay;
+  power.readOp.dynamic = wtemp1->power.readOp.dynamic;
+  power.readOp.leakage = wtemp1->power.readOp.leakage;
+  power.readOp.gate_leakage = wtemp1->power.readOp.gate_leakage;
+  delete wtemp1;
 
   power_bit = power;
   power.readOp.dynamic *= data_width;
@@ -218,4 +248,3 @@
 
   power.readOp.longer_channel_leakage = power.readOp.leakage*long_channel_device_reduction;
 }
-
diff -Nur McPAT08release/interconnect.h ../McPAT08release/interconnect.h
--- McPAT08release/interconnect.h	2012-10-02 10:45:00.000000000 -0400
+++ ../McPAT08release/interconnect.h	2015-04-24 21:42:11.000000000 -0400
@@ -1,31 +1,48 @@
 /*****************************************************************************
  *                                McPAT
  *                      SOFTWARE LICENSE AGREEMENT
- *            Copyright 2012 Hewlett-Packard Development Company, L.P.
+ *            Copyright 2009 Hewlett-Packard Development Company, L.P.
  *                          All Rights Reserved
  *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met: redistributions of source code must retain the above copyright
- * notice, this list of conditions and the following disclaimer;
- * redistributions in binary form must reproduce the above copyright
- * notice, this list of conditions and the following disclaimer in the
- * documentation and/or other materials provided with the distribution;
- * neither the name of the copyright holders nor the names of its
- * contributors may be used to endorse or promote products derived from
- * this software without specific prior written permission.
-
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.”
+ * Permission to use, copy, and modify this software and its documentation is
+ * hereby granted only under the following terms and conditions.  Both the
+ * above copyright notice and this permission notice must appear in all copies
+ * of the software, derivative works or modified versions, and any portions
+ * thereof, and both notices must appear in supporting documentation.
+ *
+ * Any User of the software ("User"), by accessing and using it, agrees to the
+ * terms and conditions set forth herein, and hereby grants back to Hewlett-
+ * Packard Development Company, L.P. and its affiliated companies ("HP") a
+ * non-exclusive, unrestricted, royalty-free right and license to copy,
+ * modify, distribute copies, create derivate works and publicly display and
+ * use, any changes, modifications, enhancements or extensions made to the
+ * software by User, including but not limited to those affording
+ * compatibility with other hardware or software, but excluding pre-existing
+ * software applications that may incorporate the software.  User further
+ * agrees to use its best efforts to inform HP of any such changes,
+ * modifications, enhancements or extensions.
+ *
+ * Correspondence should be provided to HP at:
+ *
+ * Director of Intellectual Property Licensing
+ * Office of Strategy and Technology
+ * Hewlett-Packard Company
+ * 1501 Page Mill Road
+ * Palo Alto, California  94304
+ *
+ * The software may be further distributed by User (but not offered for
+ * sale or transferred for compensation) to third parties, under the
+ * condition that such third parties agree to abide by the terms and
+ * conditions of this license.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" WITH ANY AND ALL ERRORS AND DEFECTS
+ * AND USER ACKNOWLEDGES THAT THE SOFTWARE MAY CONTAIN ERRORS AND DEFECTS.
+ * HP DISCLAIMS ALL WARRANTIES WITH REGARD TO THE SOFTWARE, INCLUDING ALL
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL
+ * HP BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES
+ * OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+ * WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER ACTION, ARISING
+ * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THE SOFTWARE.
  *
  ***************************************************************************/
 
@@ -75,8 +92,11 @@
     {
       in_rise_time = rt;
     }
-    
-    void leakage_feedback(double temperature);
+
+    /* This is runtime energy update for the change of parameters.
+	   Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+    void update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech);
+
     double max_unpipelined_link_delay;
     powerDef power_bit;
 
diff -Nur McPAT08release/iocontrollers.cc ../McPAT08release/iocontrollers.cc
--- McPAT08release/iocontrollers.cc	2012-10-02 10:45:00.000000000 -0400
+++ ../McPAT08release/iocontrollers.cc	2015-04-24 21:42:11.000000000 -0400
@@ -1,31 +1,48 @@
 /*****************************************************************************
  *                                McPAT
  *                      SOFTWARE LICENSE AGREEMENT
- *            Copyright 2012 Hewlett-Packard Development Company, L.P.
+ *            Copyright 2009 Hewlett-Packard Development Company, L.P.
  *                          All Rights Reserved
  *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met: redistributions of source code must retain the above copyright
- * notice, this list of conditions and the following disclaimer;
- * redistributions in binary form must reproduce the above copyright
- * notice, this list of conditions and the following disclaimer in the
- * documentation and/or other materials provided with the distribution;
- * neither the name of the copyright holders nor the names of its
- * contributors may be used to endorse or promote products derived from
- * this software without specific prior written permission.
-
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.”
+ * Permission to use, copy, and modify this software and its documentation is
+ * hereby granted only under the following terms and conditions.  Both the
+ * above copyright notice and this permission notice must appear in all copies
+ * of the software, derivative works or modified versions, and any portions
+ * thereof, and both notices must appear in supporting documentation.
+ *
+ * Any User of the software ("User"), by accessing and using it, agrees to the
+ * terms and conditions set forth herein, and hereby grants back to Hewlett-
+ * Packard Development Company, L.P. and its affiliated companies ("HP") a
+ * non-exclusive, unrestricted, royalty-free right and license to copy,
+ * modify, distribute copies, create derivate works and publicly display and
+ * use, any changes, modifications, enhancements or extensions made to the
+ * software by User, including but not limited to those affording
+ * compatibility with other hardware or software, but excluding pre-existing
+ * software applications that may incorporate the software.  User further
+ * agrees to use its best efforts to inform HP of any such changes,
+ * modifications, enhancements or extensions.
+ *
+ * Correspondence should be provided to HP at:
+ *
+ * Director of Intellectual Property Licensing
+ * Office of Strategy and Technology
+ * Hewlett-Packard Company
+ * 1501 Page Mill Road
+ * Palo Alto, California  94304
+ *
+ * The software may be further distributed by User (but not offered for
+ * sale or transferred for compensation) to third parties, under the
+ * condition that such third parties agree to abide by the terms and
+ * conditions of this license.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" WITH ANY AND ALL ERRORS AND DEFECTS
+ * AND USER ACKNOWLEDGES THAT THE SOFTWARE MAY CONTAIN ERRORS AND DEFECTS.
+ * HP DISCLAIMS ALL WARRANTIES WITH REGARD TO THE SOFTWARE, INCLUDING ALL
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL
+ * HP BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES
+ * OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+ * WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER ACTION, ARISING
+ * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THE SOFTWARE.
  *
  ***************************************************************************/
 #include "io.h"
@@ -193,6 +210,63 @@
 
 }
 
+void NIUController::update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech)
+{
+  *g_ip = interface_ip = McPAT_input;
+
+  uca_org_t init_result = init_interface(&interface_ip); // init_result is dummy
+
+  g_tp = McPAT_tech; //overwrite
+
+  double frontend_dyn, mac_dyn, SerDer_dyn;
+  double frontend_gates, mac_gates, SerDer_gates;
+  double pmos_to_nmos_sizing_r = pmos_to_nmos_sz_ratio();
+  double NMOS_sizing, PMOS_sizing;
+
+  if (niup.type == 0) //high performance NIU
+  {
+    //Power
+    //Cadence ChipEstimate using 65nm (mac, front_end are all energy. E=P*T = P/F = 1.37/1Ghz = 1.37e-9);
+    mac_dyn      = 2.19e-9*g_tp.peri_global.Vdd/1.1*g_tp.peri_global.Vdd/1.1*(interface_ip.F_sz_nm/65.0);//niup.clockRate; //2.19W@1GHz fully active according to Cadence ChipEstimate @65nm
+    //Cadence ChipEstimate using 65nm soft IP;
+    frontend_dyn = 0.27e-9*g_tp.peri_global.Vdd/1.1*g_tp.peri_global.Vdd/1.1*(interface_ip.F_sz_nm/65.0);//niup.clockRate;
+    //according to "A 100mW 9.6Gb/s Transceiver in 90nm CMOS..." ISSCC 2006
+    //SerDer_dyn is power not energy, scaling from 10mw/Gb/s @90nm
+    SerDer_dyn   = 0.01*10*sqrt(interface_ip.F_sz_um/0.09)*g_tp.peri_global.Vdd/1.2*g_tp.peri_global.Vdd/1.2;
+    SerDer_dyn   /= niup.clockRate;//covert to energy per clock cycle of whole NIU
+
+    //Cadence ChipEstimate using 65nm
+    mac_gates = 111700;
+    frontend_gates = 320000;
+    SerDer_gates = 200000;
+    NMOS_sizing = 5*g_tp.min_w_nmos_;
+    PMOS_sizing	= 5*g_tp.min_w_nmos_*pmos_to_nmos_sizing_r;
+  }
+  else
+  {
+    //Power
+    //Cadence ChipEstimate using 65nm (mac, front_end are all energy. E=P*T = P/F = 1.37/1Ghz = 1.37e-9);
+    mac_dyn      = 1.257e-9*g_tp.peri_global.Vdd/1.1*g_tp.peri_global.Vdd/1.1*(interface_ip.F_sz_nm/65.0);//niup.clockRate; //2.19W@1GHz fully active according to Cadence ChipEstimate @65nm
+    //Cadence ChipEstimate using 65nm soft IP;
+    frontend_dyn = 0.6e-9*g_tp.peri_global.Vdd/1.1*g_tp.peri_global.Vdd/1.1*(interface_ip.F_sz_nm/65.0);//niup.clockRate;
+    //SerDer_dyn is power not energy, scaling from 216mw/10Gb/s @130nm
+    SerDer_dyn   = 0.0216*10*(interface_ip.F_sz_um/0.13)*g_tp.peri_global.Vdd/1.2*g_tp.peri_global.Vdd/1.2;
+    SerDer_dyn   /= niup.clockRate;//covert to energy per clock cycle of whole NIU
+    
+    mac_gates = 111700;
+    frontend_gates = 52000;
+    SerDer_gates = 199260;
+    NMOS_sizing = g_tp.min_w_nmos_;
+    PMOS_sizing = g_tp.min_w_nmos_*pmos_to_nmos_sizing_r;
+  }
+
+  power_t.readOp.dynamic = mac_dyn + frontend_dyn + SerDer_dyn;
+  power_t.readOp.leakage = (mac_gates + frontend_gates + frontend_gates)*cmos_Isub_leakage(NMOS_sizing, PMOS_sizing, 2, nand)*g_tp.peri_global.Vdd;//unit W
+  double long_channel_device_reduction = longer_channel_device_reduction(Uncore_device);
+  power_t.readOp.longer_channel_leakage = power_t.readOp.leakage * long_channel_device_reduction;
+  power_t.readOp.gate_leakage = (mac_gates + frontend_gates + frontend_gates)*cmos_Ig_leakage(NMOS_sizing, PMOS_sizing, 2, nand)*g_tp.peri_global.Vdd;//unit W
+}
+
 void NIUController::set_niu_param()
 {
 	  niup.clockRate       = XML->sys.niu.clockrate;
@@ -322,6 +396,68 @@
 
 }
 
+void PCIeController::update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech)
+{
+  *g_ip = interface_ip = McPAT_input;
+
+  uca_org_t init_result = init_interface(&interface_ip); // init_result is dummy
+
+  g_tp = McPAT_tech; //overwrite
+
+  double ctrl_dyn, frontend_dyn, SerDer_dyn;
+  double ctrl_gates,frontend_gates, SerDer_gates;
+  double pmos_to_nmos_sizing_r = pmos_to_nmos_sz_ratio();
+  double NMOS_sizing, PMOS_sizing;
+
+  /* Assuming PCIe is bit-slice based architecture
+    * This is the reason for /8 in both area and power calculation
+    * to get per lane numbers
+  */
+
+  if (pciep.type == 0) //high performance NIU
+  {
+    //Power
+    //Cadence ChipEstimate using 65nm the controller includes everything: the PHY, the data link and transaction layer
+    ctrl_dyn      = 3.75e-9/8*g_tp.peri_global.Vdd/1.1*g_tp.peri_global.Vdd/1.1*(interface_ip.F_sz_nm/65.0);
+    //	  //Cadence ChipEstimate using 65nm soft IP;
+    //	  frontend_dyn = 0.27e-9/8*g_tp.peri_global.Vdd/1.1*g_tp.peri_global.Vdd/1.1*(interface_ip.F_sz_nm/65.0);
+    //SerDer_dyn is power not energy, scaling from 10mw/Gb/s @90nm
+    SerDer_dyn   = 0.01*4*(interface_ip.F_sz_um/0.09)*g_tp.peri_global.Vdd/1.2*g_tp.peri_global.Vdd/1.2;//PCIe 2.0 max per lane speed is 4Gb/s
+    SerDer_dyn   /= pciep.clockRate;//covert to energy per clock cycle
+
+    //power_t.readOp.dynamic = (ctrl_dyn)*pciep.num_channels;
+    //Cadence ChipEstimate using 65nm
+    ctrl_gates       = 900000/8*pciep.num_channels;
+    //	  frontend_gates   = 120000/8;
+    //	  SerDer_gates     = 200000/8;
+    NMOS_sizing 	  = 5*g_tp.min_w_nmos_;
+    PMOS_sizing	  = 5*g_tp.min_w_nmos_*pmos_to_nmos_sizing_r;
+  }
+  else
+  {
+    //Power
+    //Cadence ChipEstimate using 65nm the controller includes everything: the PHY, the data link and transaction layer
+    ctrl_dyn      = 2.21e-9/8*g_tp.peri_global.Vdd/1.1*g_tp.peri_global.Vdd/1.1*(interface_ip.F_sz_nm/65.0);
+    //	  //Cadence ChipEstimate using 65nm soft IP;
+    //	  frontend_dyn = 0.27e-9/8*g_tp.peri_global.Vdd/1.1*g_tp.peri_global.Vdd/1.1*(interface_ip.F_sz_nm/65.0);
+    //SerDer_dyn is power not energy, scaling from 10mw/Gb/s @90nm
+    SerDer_dyn   = 0.01*4*(interface_ip.F_sz_um/0.09)*g_tp.peri_global.Vdd/1.2*g_tp.peri_global.Vdd/1.2;//PCIe 2.0 max per lane speed is 4Gb/s
+    SerDer_dyn   /= pciep.clockRate;//covert to energy per clock cycle
+
+    //Cadence ChipEstimate using 65nm
+    ctrl_gates       = 200000/8*pciep.num_channels;
+    //	  frontend_gates   = 120000/8;
+    SerDer_gates     = 200000/8*pciep.num_channels;
+    NMOS_sizing 	  = g_tp.min_w_nmos_;
+    PMOS_sizing	  = g_tp.min_w_nmos_*pmos_to_nmos_sizing_r;
+  }
+    power_t.readOp.dynamic = (ctrl_dyn + (pciep.withPHY? SerDer_dyn:0))*pciep.num_channels;
+    power_t.readOp.leakage = (ctrl_gates + (pciep.withPHY? SerDer_gates:0))*cmos_Isub_leakage(NMOS_sizing, PMOS_sizing, 2, nand)*g_tp.peri_global.Vdd;//unit W
+    double long_channel_device_reduction = longer_channel_device_reduction(Uncore_device);
+    power_t.readOp.longer_channel_leakage = power_t.readOp.leakage * long_channel_device_reduction;
+    power_t.readOp.gate_leakage = (ctrl_gates + (pciep.withPHY? SerDer_gates:0))*cmos_Ig_leakage(NMOS_sizing, PMOS_sizing, 2, nand)*g_tp.peri_global.Vdd;//unit W
+}
+
 void PCIeController::set_pcie_param()
 {
 	  pciep.clockRate       = XML->sys.pcie.clockrate;
@@ -430,10 +566,57 @@
 
 }
 
+void FlashController::update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech)
+{
+  *g_ip = interface_ip = McPAT_input;
+
+  uca_org_t init_result = init_interface(&interface_ip); // init_result is dummy
+
+  g_tp = McPAT_tech; //overwrite
+
+  double ctrl_dyn, SerDer_dyn;
+  double ctrl_gates, SerDer_gates;
+  double pmos_to_nmos_sizing_r = pmos_to_nmos_sz_ratio();
+  double NMOS_sizing, PMOS_sizing;
+
+  /* Assuming PCIe is bit-slice based architecture
+   * This is the reason for /8 in both area and power calculation
+   * to get per lane numbers
+   */
+
+  if (fcp.type == 0) //high performance NIU
+  {
+    NMOS_sizing = 5*g_tp.min_w_nmos_;
+    PMOS_sizing = 5*g_tp.min_w_nmos_*pmos_to_nmos_sizing_r;
+  }
+  else
+  {
+    //based On PCIe PHY TSMC65GP from Cadence ChipEstimate @ 65nm, it support 8x lanes with each lane
+    //speed up to 250MB/s (PCIe1.1x) This is already saturate the 200MB/s of the flash controller core above.
+    ctrl_gates      = 129267;
+    SerDer_gates    = 200000/8;
+    NMOS_sizing 	  = g_tp.min_w_nmos_;
+    PMOS_sizing	  = g_tp.min_w_nmos_*pmos_to_nmos_sizing_r;
+
+    //Power
+    //Cadence ChipEstimate using 65nm the controller 125mW for every 200MB/s This is power not energy!
+    ctrl_dyn      = 0.125*g_tp.peri_global.Vdd/1.1*g_tp.peri_global.Vdd/1.1*(interface_ip.F_sz_nm/65.0);
+    //SerDer_dyn is power not energy, scaling from 10mw/Gb/s @90nm
+    SerDer_dyn   = 0.01*1.6*(interface_ip.F_sz_um/0.09)*g_tp.peri_global.Vdd/1.2*g_tp.peri_global.Vdd/1.2;
+    //max  Per controller speed is 1.6Gb/s (200MB/s)
+  }
+  double number_channel = 1+(fcp.num_channels-1)*0.2;
+  power_t.readOp.dynamic = (ctrl_dyn + (fcp.withPHY? SerDer_dyn:0))*number_channel;
+  power_t.readOp.leakage = ((ctrl_gates + (fcp.withPHY? SerDer_gates:0))*number_channel)*cmos_Isub_leakage(NMOS_sizing, PMOS_sizing, 2, nand)*g_tp.peri_global.Vdd;//unit W
+  double long_channel_device_reduction = longer_channel_device_reduction(Uncore_device);
+  power_t.readOp.longer_channel_leakage = power_t.readOp.leakage * long_channel_device_reduction;
+  power_t.readOp.gate_leakage = ((ctrl_gates + (fcp.withPHY? SerDer_gates:0))*number_channel)*cmos_Ig_leakage(NMOS_sizing, PMOS_sizing, 2, nand)*g_tp.peri_global.Vdd;//unit W  
+}
+
 void FlashController::set_fc_param()
 {
-//	  fcp.clockRate       = XML->sys.flashc.mc_clock;
-//	  fcp.clockRate       *= 1e6;
+	  fcp.clockRate       = XML->sys.flashc.mc_clock;
+	  fcp.clockRate       *= 1e6;
 	  fcp.peakDataTransferRate = XML->sys.flashc.peak_transfer_rate;
 	  fcp.num_channels    = ceil(fcp.peakDataTransferRate/200);
 	  fcp.num_mcs         = XML->sys.flashc.number_mcs;
diff -Nur McPAT08release/iocontrollers.h ../McPAT08release/iocontrollers.h
--- McPAT08release/iocontrollers.h	2012-10-02 10:45:00.000000000 -0400
+++ ../McPAT08release/iocontrollers.h	2015-04-24 21:42:11.000000000 -0400
@@ -1,39 +1,53 @@
 /*****************************************************************************
  *                                McPAT
  *                      SOFTWARE LICENSE AGREEMENT
- *            Copyright 2012 Hewlett-Packard Development Company, L.P.
+ *            Copyright 2009 Hewlett-Packard Development Company, L.P.
  *                          All Rights Reserved
  *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met: redistributions of source code must retain the above copyright
- * notice, this list of conditions and the following disclaimer;
- * redistributions in binary form must reproduce the above copyright
- * notice, this list of conditions and the following disclaimer in the
- * documentation and/or other materials provided with the distribution;
- * neither the name of the copyright holders nor the names of its
- * contributors may be used to endorse or promote products derived from
- * this software without specific prior written permission.
-
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.”
+ * Permission to use, copy, and modify this software and its documentation is
+ * hereby granted only under the following terms and conditions.  Both the
+ * above copyright notice and this permission notice must appear in all copies
+ * of the software, derivative works or modified versions, and any portions
+ * thereof, and both notices must appear in supporting documentation.
+ *
+ * Any User of the software ("User"), by accessing and using it, agrees to the
+ * terms and conditions set forth herein, and hereby grants back to Hewlett-
+ * Packard Development Company, L.P. and its affiliated companies ("HP") a
+ * non-exclusive, unrestricted, royalty-free right and license to copy,
+ * modify, distribute copies, create derivate works and publicly display and
+ * use, any changes, modifications, enhancements or extensions made to the
+ * software by User, including but not limited to those affording
+ * compatibility with other hardware or software, but excluding pre-existing
+ * software applications that may incorporate the software.  User further
+ * agrees to use its best efforts to inform HP of any such changes,
+ * modifications, enhancements or extensions.
+ *
+ * Correspondence should be provided to HP at:
+ *
+ * Director of Intellectual Property Licensing
+ * Office of Strategy and Technology
+ * Hewlett-Packard Company
+ * 1501 Page Mill Road
+ * Palo Alto, California  94304
+ *
+ * The software may be further distributed by User (but not offered for
+ * sale or transferred for compensation) to third parties, under the
+ * condition that such third parties agree to abide by the terms and
+ * conditions of this license.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" WITH ANY AND ALL ERRORS AND DEFECTS
+ * AND USER ACKNOWLEDGES THAT THE SOFTWARE MAY CONTAIN ERRORS AND DEFECTS.
+ * HP DISCLAIMS ALL WARRANTIES WITH REGARD TO THE SOFTWARE, INCLUDING ALL
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL
+ * HP BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES
+ * OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+ * WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER ACTION, ARISING
+ * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THE SOFTWARE.
  *
  ***************************************************************************/
 #ifndef IOCONTROLLERS_H_
 #define IOCONTROLLERS_H_
 
-
-#endif /* IOCONTROLLERS_H_ */
-
 #include "XML_Parse.h"
 #include "parameter.h"
 //#include "io.h"
@@ -54,6 +68,10 @@
     void computeEnergy(bool is_tdp=true);
     void displayEnergy(uint32_t indent = 0,int plevel = 100, bool is_tdp=true);
     ~NIUController(){};
+
+    /* This is runtime energy update for the change of parameters.
+       Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+    void update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech);
 };
 
 class PCIeController : public Component {
@@ -68,6 +86,10 @@
     void computeEnergy(bool is_tdp=true);
     void displayEnergy(uint32_t indent = 0,int plevel = 100, bool is_tdp=true);
     ~PCIeController(){};
+
+    /* This is runtime energy update for the change of parameters.
+       Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+    void update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech);
 };
 
 class FlashController : public Component {
@@ -82,5 +104,10 @@
     void computeEnergy(bool is_tdp=true);
     void displayEnergy(uint32_t indent = 0,int plevel = 100, bool is_tdp=true);
     ~FlashController(){};
+
+    /* This is runtime energy update for the change of parameters.
+       Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+    void update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech);
 };
 
+#endif /* IOCONTROLLERS_H_ */
diff -Nur McPAT08release/logic.cc ../McPAT08release/logic.cc
--- McPAT08release/logic.cc	2012-10-02 10:45:00.000000000 -0400
+++ ../McPAT08release/logic.cc	2015-04-24 21:42:11.000000000 -0400
@@ -1,31 +1,48 @@
 /*****************************************************************************
  *                                McPAT
  *                      SOFTWARE LICENSE AGREEMENT
- *            Copyright 2012 Hewlett-Packard Development Company, L.P.
+ *            Copyright 2009 Hewlett-Packard Development Company, L.P.
  *                          All Rights Reserved
  *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met: redistributions of source code must retain the above copyright
- * notice, this list of conditions and the following disclaimer;
- * redistributions in binary form must reproduce the above copyright
- * notice, this list of conditions and the following disclaimer in the
- * documentation and/or other materials provided with the distribution;
- * neither the name of the copyright holders nor the names of its
- * contributors may be used to endorse or promote products derived from
- * this software without specific prior written permission.
-
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.”
+ * Permission to use, copy, and modify this software and its documentation is
+ * hereby granted only under the following terms and conditions.  Both the
+ * above copyright notice and this permission notice must appear in all copies
+ * of the software, derivative works or modified versions, and any portions
+ * thereof, and both notices must appear in supporting documentation.
+ *
+ * Any User of the software ("User"), by accessing and using it, agrees to the
+ * terms and conditions set forth herein, and hereby grants back to Hewlett-
+ * Packard Development Company, L.P. and its affiliated companies ("HP") a
+ * non-exclusive, unrestricted, royalty-free right and license to copy,
+ * modify, distribute copies, create derivate works and publicly display and
+ * use, any changes, modifications, enhancements or extensions made to the
+ * software by User, including but not limited to those affording
+ * compatibility with other hardware or software, but excluding pre-existing
+ * software applications that may incorporate the software.  User further
+ * agrees to use its best efforts to inform HP of any such changes,
+ * modifications, enhancements or extensions.
+ *
+ * Correspondence should be provided to HP at:
+ *
+ * Director of Intellectual Property Licensing
+ * Office of Strategy and Technology
+ * Hewlett-Packard Company
+ * 1501 Page Mill Road
+ * Palo Alto, California  94304
+ *
+ * The software may be further distributed by User (but not offered for
+ * sale or transferred for compensation) to third parties, under the
+ * condition that such third parties agree to abide by the terms and
+ * conditions of this license.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" WITH ANY AND ALL ERRORS AND DEFECTS
+ * AND USER ACKNOWLEDGES THAT THE SOFTWARE MAY CONTAIN ERRORS AND DEFECTS.
+ * HP DISCLAIMS ALL WARRANTIES WITH REGARD TO THE SOFTWARE, INCLUDING ALL
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL
+ * HP BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES
+ * OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+ * WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER ACTION, ARISING
+ * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THE SOFTWARE.
  *
  ***************************************************************************/
 
@@ -66,7 +83,9 @@
 void selection_logic::selection_power()
 {//based on cost effective superscalar processor TR pp27-31
   double Ctotal, Cor, Cpencode;
-  int num_arbiter;
+  /* num_arbiter is required by update_energy(). Definition is moved to header file.
+     Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+  //int num_arbiter;
   double WSelORn, WSelORprequ, WSelPn, WSelPp, WSelEnn, WSelEnp;
 
   //TODO: the 0.8um process data is used.
@@ -117,6 +136,72 @@
         )*g_tp.peri_global.Vdd;
 }
 
+/* This is runtime energy update for the change of parameters.
+   Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+void selection_logic::update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech)
+{
+  power.reset();
+
+  *g_ip = l_ip = McPAT_input;
+
+  uca_org_t init_result = init_interface(&l_ip); // init_result is dummy
+
+  g_tp = McPAT_tech; // overwrite
+
+  // The following lines are part of selection_power()
+  double Ctotal, Cor, Cpencode;
+  double WSelORn, WSelORprequ, WSelPn, WSelPp, WSelEnn, WSelEnp;
+
+  //TODO: the 0.8um process data is used.
+  WSelORn    	=  	12.5 * l_ip.F_sz_um;//this was 10 micron for the 0.8 micron process
+  WSelORprequ   = 	50 * l_ip.F_sz_um;//this was 40 micron for the 0.8 micron process
+  WSelPn     	= 	12.5 * l_ip.F_sz_um;//this was 10mcron for the 0.8 micron process
+  WSelPp     	=  	18.75 * l_ip.F_sz_um;//this was 15 micron for the 0.8 micron process
+  WSelEnn    	=  	6.25 * l_ip.F_sz_um;//this was 5 micron for the 0.8 micron process
+  WSelEnp    	=  	12.5 * l_ip.F_sz_um;//this was 10 micron for the 0.8 micron process
+
+  Ctotal=0.0;
+
+  //the 4-input OR logic to generate anyreq
+  Cor = 4 * drain_C_(WSelORn,NCH,1,1, g_tp.cell_h_def) + drain_C_(WSelORprequ,PCH,1,1, g_tp.cell_h_def);
+  power.readOp.gate_leakage = cmos_Ig_leakage(WSelORn, WSelORprequ, 4, nor)*g_tp.peri_global.Vdd;
+
+  //The total capacity of the 4-bit priority encoder
+  Cpencode = drain_C_(WSelPn,NCH,1, 1, g_tp.cell_h_def) + drain_C_(WSelPp,PCH,1, 1, g_tp.cell_h_def) +
+    2*drain_C_(WSelPn,NCH,1, 1, g_tp.cell_h_def) + drain_C_(WSelPp,PCH,2, 1, g_tp.cell_h_def) +
+    3*drain_C_(WSelPn,NCH,1, 1, g_tp.cell_h_def) + drain_C_(WSelPp,PCH,3, 1, g_tp.cell_h_def) +
+    4*drain_C_(WSelPn,NCH,1, 1, g_tp.cell_h_def) + drain_C_(WSelPp,PCH,4, 1, g_tp.cell_h_def) +//precompute priority logic
+    2*4*gate_C(WSelEnn+WSelEnp,20.0)+
+    4*drain_C_(WSelEnn,NCH,1, 1, g_tp.cell_h_def) + 2*4*drain_C_(WSelEnp,PCH,1, 1, g_tp.cell_h_def)+//enable logic
+    (2*4+2*3+2*2+2)*gate_C(WSelPn+WSelPp,10.0);//requests signal
+
+  Ctotal += issue_width * num_arbiter*(Cor+Cpencode);
+
+  power.readOp.dynamic = Ctotal*g_tp.peri_global.Vdd*g_tp.peri_global.Vdd*2;//2 means the abitration signal need to travel round trip
+  power.readOp.leakage = issue_width * num_arbiter *
+      (cmos_Isub_leakage(WSelPn, WSelPp, 2, nor)/*approximate precompute with a nor gate*///grant1p
+       + cmos_Isub_leakage(WSelPn, WSelPp, 3, nor)//grant2p
+       + cmos_Isub_leakage(WSelPn, WSelPp, 4, nor)//grant3p
+       + cmos_Isub_leakage(WSelEnn, WSelEnp, 2, nor)*4//enable logic
+       + cmos_Isub_leakage(WSelEnn, WSelEnp, 1, inv)*2*3//for each grant there are two inverters, there are 3 grant sIsubnals
+		  )*g_tp.peri_global.Vdd;
+  power.readOp.gate_leakage = issue_width * num_arbiter *
+      (cmos_Ig_leakage(WSelPn, WSelPp, 2, nor)/*approximate precompute with a nor gate*///grant1p
+       + cmos_Ig_leakage(WSelPn, WSelPp, 3, nor)//grant2p
+       + cmos_Ig_leakage(WSelPn, WSelPp, 4, nor)//grant3p
+       + cmos_Ig_leakage(WSelEnn, WSelEnp, 2, nor)*4//enable logic
+       + cmos_Ig_leakage(WSelEnn, WSelEnp, 1, inv)*2*3//for each grant there are two inverters, there are 3 grant signals
+        )*g_tp.peri_global.Vdd;
+  
+  double sckRation = g_tp.sckt_co_eff;
+  power.readOp.dynamic *= sckRation;
+  power.writeOp.dynamic *= sckRation;
+  power.searchOp.dynamic *= sckRation;
+
+  double long_channel_device_reduction = longer_channel_device_reduction(device_ty,core_ty);
+  power.readOp.longer_channel_leakage = power.readOp.leakage*long_channel_device_reduction;
+}
+
 
 dep_resource_conflict_check::dep_resource_conflict_check(
 	const InputParameter *configure_interface,
@@ -147,7 +232,6 @@
     	power.readOp.dynamic *= sckRation;
     	power.writeOp.dynamic *= sckRation;
     	power.searchOp.dynamic *= sckRation;
-
 }
 
 void dep_resource_conflict_check::conflict_check_power()
@@ -188,18 +272,26 @@
 
 }
 
-void dep_resource_conflict_check::leakage_feedback(double temperature)
+/* This is runtime energy update for the change of parameters.
+   Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+void dep_resource_conflict_check::update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech)
 {
-  l_ip.temp = (unsigned int)round(temperature/10.0)*10;
+  power.reset(); 
+  
+  *g_ip = l_ip = McPAT_input;
+
   uca_org_t init_result = init_interface(&l_ip); // init_result is dummy
 
-  // This is part of conflict_check_power()
-  int num_comparators = 3*((coredynp.decodeW) * (coredynp.decodeW)-coredynp.decodeW);//2(N*N-N) is used for source to dest comparison, (N*N-N) is used for dest to dest comparision.
-  power.readOp.leakage=num_comparators*compare_bits*2*simplified_nmos_leakage(Wcompn,  false);
+  g_tp = McPAT_tech; // overwrite
 
-  double long_channel_device_reduction = longer_channel_device_reduction(Core_device, coredynp.core_ty);
-  power.readOp.longer_channel_leakage	= power.readOp.leakage*long_channel_device_reduction;
-  power.readOp.gate_leakage=num_comparators*compare_bits*2*cmos_Ig_leakage(Wcompn, 0, 2, nmos);
+  WNORp    	=  	38.125 * l_ip.F_sz_um; // compare_cap() scales up this value
+		  
+  conflict_check_power();
+	
+  double sckRation = g_tp.sckt_co_eff;
+  power.readOp.dynamic *= sckRation;
+  power.writeOp.dynamic *= sckRation;
+  power.searchOp.dynamic *= sckRation;
 }
 
 //TODO: add inverter and transmission gate base DFF.
@@ -376,7 +468,6 @@
 		/* pipe stage IssueQ/Dispatch */
 		num_piperegs += coredynp.issueW*(coredynp.instruction_length + 3 * coredynp.phy_ireg_width);
 		/* pipe stage Dispatch/EXE */
-
 		num_piperegs += coredynp.issueW*(3 * coredynp.phy_ireg_width + coredynp.pc_width + pow(2.0,opcode_length)/*+2*powers (2,reg_length)*/);
 		/* 2^opcode_length means the total decoded signal for the opcode*/
 		num_piperegs += coredynp.issueW*(2*coredynp.int_data_width + pow(2.0,opcode_length)/*+2*powers (2,reg_length)*/);
@@ -412,9 +503,45 @@
 			num_piperegs= per_stage_vector*coredynp.pipeline_stages;
 	}
   }
+}
+
+/* This is runtime energy update for the change of parameters.
+   Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+void Pipeline::update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech)
+{
+  power.reset();
+
+  *g_ip = l_ip = McPAT_input;
+
+  uca_org_t init_result = init_interface(&l_ip); // init_result is dummy
+
+  g_tp = McPAT_tech; //overwrite
+/*
+  WNANDn = (process_ind)? 25 *   l_ip.F_sz_um : g_tp.min_w_nmos_ ;//this was  20 micron for the 0.8 micron process
+  WNANDp = (process_ind)? 37.5 * l_ip.F_sz_um : g_tp.min_w_nmos_*pmos_to_nmos_sz_ratio();//this was  30 micron for the 0.8 micron process
+  load_per_pipeline_stage = 2*gate_C(WNANDn + WNANDp, 0, false);
+*/
+  DFFCell pipe_reg(false, WNANDn,WNANDp, load_per_pipeline_stage, &l_ip);
+  pipe_reg.compute_DFF_cell();
+
+  double clock_power_pipereg = num_piperegs * pipe_reg.e_clock.readOp.dynamic;
+  double pipe_reg_power = num_piperegs * (pipe_reg.e_switch.readOp.dynamic+pipe_reg.e_keep_0.readOp.dynamic+pipe_reg.e_keep_1.readOp.dynamic)/3+clock_power_pipereg;
+  double pipe_reg_leakage = num_piperegs * pipe_reg.e_switch.readOp.leakage;
+  double pipe_reg_gate_leakage = num_piperegs * pipe_reg.e_switch.readOp.gate_leakage;
+  power.readOp.dynamic = pipe_reg_power;
+  power.readOp.leakage = pipe_reg_leakage;
+  power.readOp.gate_leakage = pipe_reg_gate_leakage;
+
+  double long_channel_device_reduction = longer_channel_device_reduction(device_ty, coredynp.core_ty);
+  power.readOp.longer_channel_leakage = power.readOp.leakage*long_channel_device_reduction;
 
+  double sckRation = g_tp.sckt_co_eff;
+  power.readOp.dynamic *= sckRation;
+  power.writeOp.dynamic *= sckRation;
+  power.searchOp.dynamic *= sckRation;
 }
 
+
 FunctionalUnit::FunctionalUnit(ParseXML *XML_interface, int ithCore_, InputParameter* interface_ip_,const CoreDynParam & dyn_p_, enum FU_type fu_type_)
 :XML(XML_interface),
  ithCore(ithCore_),
@@ -422,14 +549,16 @@
  coredynp(dyn_p_),
  fu_type(fu_type_)
 {
+	//XML_interface=_XML_interface;
+	uca_org_t result2;
+	result2 = init_interface(&interface_ip);
+
+    // Parameters should initialize first. Modified by William Song (wjhsong@gatech.edu), Georgia Tech
     double area_t;//, leakage, gate_leakage;
     double pmos_to_nmos_sizing_r = pmos_to_nmos_sz_ratio();
 	clockRate = coredynp.clockRate;
 	executionTime = coredynp.executionTime;
-
-	//XML_interface=_XML_interface;
-	uca_org_t result2;
-	result2 = init_interface(&interface_ip);
+	
 	if (XML->sys.Embedded)
 	{
 		if (fu_type == FPU)
@@ -453,7 +582,7 @@
 		else if (fu_type == ALU)
 		{
 			num_fu=coredynp.num_alus;
-			area_t = 280*260*g_tp.scaling_factor.logic_scaling_co_eff;//this is um^2 ALU + MUl
+			area_t = 280*260*num_fu*g_tp.scaling_factor.logic_scaling_co_eff;//this is um^2 ALU + MUl
 			leakage = area_t *(g_tp.scaling_factor.core_tx_density)*cmos_Isub_leakage(20*g_tp.min_w_nmos_, 20*g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd/2;//unit W
 			gate_leakage = area_t*(g_tp.scaling_factor.core_tx_density)*cmos_Ig_leakage(20*g_tp.min_w_nmos_, 20*g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd/2;
 //			base_energy = coredynp.core_ty==Inorder? 0:89e-3; //W The base energy of ALU average numbers from Intel 4G and 773Mhz (Wattch)
@@ -466,7 +595,7 @@
 		else if (fu_type == MUL)
 		{
 			num_fu=coredynp.num_muls;
-			area_t = 280*260*3*g_tp.scaling_factor.logic_scaling_co_eff;//this is um^2 ALU + MUl
+			area_t = 280*260*3*num_fu*g_tp.scaling_factor.logic_scaling_co_eff;//this is um^2 ALU + MUl
 			leakage = area_t *(g_tp.scaling_factor.core_tx_density)*cmos_Isub_leakage(20*g_tp.min_w_nmos_, 20*g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd/2;//unit W
 			gate_leakage = area_t*(g_tp.scaling_factor.core_tx_density)*cmos_Ig_leakage(20*g_tp.min_w_nmos_, 20*g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd/2;
 //			base_energy = coredynp.core_ty==Inorder? 0:89e-3*2; //W The base energy of ALU average numbers from Intel 4G and 773Mhz (Wattch)
@@ -502,19 +631,18 @@
 		else if (fu_type == ALU)
 		{
 			num_fu=coredynp.num_alus;
-			area_t = 280*260*2*g_tp.scaling_factor.logic_scaling_co_eff;//this is um^2 ALU + MUl
+			area_t = 280*260*2*num_fu*g_tp.scaling_factor.logic_scaling_co_eff;//this is um^2 ALU + MUl
 			leakage = area_t *(g_tp.scaling_factor.core_tx_density)*cmos_Isub_leakage(20*g_tp.min_w_nmos_, 20*g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd/2;//unit W
 			gate_leakage = area_t*(g_tp.scaling_factor.core_tx_density)*cmos_Ig_leakage(20*g_tp.min_w_nmos_, 20*g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd/2;
 			base_energy = coredynp.core_ty==Inorder? 0:89e-3; //W The base energy of ALU average numbers from Intel 4G and 773Mhz (Wattch)
 			base_energy *=(g_tp.peri_global.Vdd*g_tp.peri_global.Vdd/1.2/1.2);
 			per_access_energy = 1.15/1e9/4/1.3/1.3*g_tp.peri_global.Vdd*g_tp.peri_global.Vdd*(g_ip->F_sz_nm/90.0);//(g_tp.peri_global.Vdd*g_tp.peri_global.Vdd/1.2/1.2);//0.00649*1e-9; //This is per cycle energy(nJ)
 			FU_height=(6222*num_fu)*interface_ip.F_sz_um;//integer ALU
-
 		}
 		else if (fu_type == MUL)
 		{
 			num_fu=coredynp.num_muls;
-			area_t = 280*260*2*3*g_tp.scaling_factor.logic_scaling_co_eff;//this is um^2 ALU + MUl
+			area_t = 280*260*2*3*num_fu*g_tp.scaling_factor.logic_scaling_co_eff;//this is um^2 ALU + MUl
 			leakage = area_t *(g_tp.scaling_factor.core_tx_density)*cmos_Isub_leakage(20*g_tp.min_w_nmos_, 20*g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd/2;//unit W
 			gate_leakage = area_t*(g_tp.scaling_factor.core_tx_density)*cmos_Ig_leakage(20*g_tp.min_w_nmos_, 20*g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd/2;
 			base_energy = coredynp.core_ty==Inorder? 0:89e-3*2; //W The base energy of ALU average numbers from Intel 4G and 773Mhz (Wattch)
@@ -667,48 +795,99 @@
 
 }
 
-void FunctionalUnit::leakage_feedback(double temperature)
+/* This is runtime energy update for the change of parameters.
+   Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+void FunctionalUnit::update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech)
 {
-  // Update the temperature and initialize the global interfaces.
-  interface_ip.temp = (unsigned int)round(temperature/10.0)*10;
+  power.reset(); power_t.reset(); rt_power.reset();
+
+  *g_ip = interface_ip = McPAT_input;
 
   uca_org_t init_result = init_interface(&interface_ip); // init_result is dummy
 
-  // This is part of FunctionalUnit()
-  double area_t, leakage, gate_leakage;
-  double pmos_to_nmos_sizing_r = pmos_to_nmos_sz_ratio();
+  g_tp = McPAT_tech; //overwrite
 
-  if (fu_type == FPU)
-  {
-	area_t = 4.47*1e6*(g_ip->F_sz_nm*g_ip->F_sz_nm/90.0/90.0);//this is um^2 The base number
-	if (g_ip->F_sz_nm>90)
-		area_t = 4.47*1e6*g_tp.scaling_factor.logic_scaling_co_eff;//this is um^2
-	leakage = area_t *(g_tp.scaling_factor.core_tx_density)*cmos_Isub_leakage(5*g_tp.min_w_nmos_, 5*g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd/2;//unit W
-	gate_leakage = area_t *(g_tp.scaling_factor.core_tx_density)*cmos_Ig_leakage(5*g_tp.min_w_nmos_, 5*g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd/2;//unit W
-  }
-  else if (fu_type == ALU)
-  {
-    area_t = 280*260*2*num_fu*g_tp.scaling_factor.logic_scaling_co_eff;//this is um^2 ALU + MUl
-    leakage = area_t *(g_tp.scaling_factor.core_tx_density)*cmos_Isub_leakage(20*g_tp.min_w_nmos_, 20*g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd/2;//unit W
-    gate_leakage = area_t*(g_tp.scaling_factor.core_tx_density)*cmos_Ig_leakage(20*g_tp.min_w_nmos_, 20*g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd/2;
-  }
-  else if (fu_type == MUL)
-  {
-    area_t = 280*260*2*3*num_fu*g_tp.scaling_factor.logic_scaling_co_eff;//this is um^2 ALU + MUl
-    leakage = area_t *(g_tp.scaling_factor.core_tx_density)*cmos_Isub_leakage(20*g_tp.min_w_nmos_, 20*g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd/2;//unit W
-    gate_leakage = area_t*(g_tp.scaling_factor.core_tx_density)*cmos_Ig_leakage(20*g_tp.min_w_nmos_, 20*g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd/2;
-  }
-  else
-  {
-    cout<<"Unknown Functional Unit Type"<<endl;
-    exit(1);
-  }
+  // This is part of FunctionalUnit()
+    double area_t;
+    double pmos_to_nmos_sizing_r = pmos_to_nmos_sz_ratio();
 
-  power.readOp.leakage = leakage*num_fu;
-  power.readOp.gate_leakage = gate_leakage*num_fu;
-  power.readOp.longer_channel_leakage = longer_channel_device_reduction(Core_device, coredynp.core_ty);
+	if (XML->sys.Embedded)
+	{
+		if (fu_type == FPU)
+		{
+			area_t = 4.47*1e6*(g_ip->F_sz_nm*g_ip->F_sz_nm/90.0/90.0);//this is um^2 The base number
+			if (g_ip->F_sz_nm>90)
+				area_t = 4.47*1e6*g_tp.scaling_factor.logic_scaling_co_eff;//this is um^2
+			leakage = area_t *(g_tp.scaling_factor.core_tx_density)*cmos_Isub_leakage(5*g_tp.min_w_nmos_, 5*g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd/2;//unit W
+			gate_leakage = area_t *(g_tp.scaling_factor.core_tx_density)*cmos_Ig_leakage(5*g_tp.min_w_nmos_, 5*g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd/2;//unit W
+			base_energy = 0;
+			per_access_energy = 1.15/1e9/4/1.3/1.3*g_tp.peri_global.Vdd*g_tp.peri_global.Vdd*(g_ip->F_sz_nm/90.0);//g_tp.peri_global.Vdd*g_tp.peri_global.Vdd/1.2/1.2);//0.00649*1e-9; //This is per Hz energy(nJ)
+		}
+		else if (fu_type == ALU)
+		{
+			area_t = 280*260*num_fu*g_tp.scaling_factor.logic_scaling_co_eff;//this is um^2 ALU + MUl
+			leakage = area_t *(g_tp.scaling_factor.core_tx_density)*cmos_Isub_leakage(20*g_tp.min_w_nmos_, 20*g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd/2;//unit W
+			gate_leakage = area_t*(g_tp.scaling_factor.core_tx_density)*cmos_Ig_leakage(20*g_tp.min_w_nmos_, 20*g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd/2;
+			base_energy = 0;
+			per_access_energy = 1.15/3/1e9/4/1.3/1.3*g_tp.peri_global.Vdd*g_tp.peri_global.Vdd*(g_ip->F_sz_nm/90.0);//(g_tp.peri_global.Vdd*g_tp.peri_global.Vdd/1.2/1.2);//0.00649*1e-9; //This is per cycle energy(nJ)
+		}
+		else if (fu_type == MUL)
+		{
+			area_t = 280*260*3*num_fu*g_tp.scaling_factor.logic_scaling_co_eff;//this is um^2 ALU + MUl
+			leakage = area_t *(g_tp.scaling_factor.core_tx_density)*cmos_Isub_leakage(20*g_tp.min_w_nmos_, 20*g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd/2;//unit W
+			gate_leakage = area_t*(g_tp.scaling_factor.core_tx_density)*cmos_Ig_leakage(20*g_tp.min_w_nmos_, 20*g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd/2;
+			base_energy = 0;
+			per_access_energy = 1.15*2/3/1e9/4/1.3/1.3*g_tp.peri_global.Vdd*g_tp.peri_global.Vdd*(g_ip->F_sz_nm/90.0);//(g_tp.peri_global.Vdd*g_tp.peri_global.Vdd/1.2/1.2);//0.00649*1e-9; //This is per cycle energy(nJ), coefficient based on Wattch
+		}
+		else
+		{
+			cout<<"Unknown Functional Unit Type"<<endl;
+			exit(0);
+		}
+		per_access_energy *=0.5;//According to ARM data embedded processor has much lower per acc energy
+	}
+	else
+	{
+		if (fu_type == FPU)
+		{
+			area_t = 8.47*1e6*(g_ip->F_sz_nm*g_ip->F_sz_nm/90.0/90.0);//this is um^2
+			if (g_ip->F_sz_nm>90)
+				area_t = 8.47*1e6*g_tp.scaling_factor.logic_scaling_co_eff;//this is um^2
+			leakage = area_t *(g_tp.scaling_factor.core_tx_density)*cmos_Isub_leakage(5*g_tp.min_w_nmos_, 5*g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd/2;//unit W
+			gate_leakage = area_t *(g_tp.scaling_factor.core_tx_density)*cmos_Ig_leakage(5*g_tp.min_w_nmos_, 5*g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd/2;//unit W
+			base_energy = coredynp.core_ty==Inorder? 0: 89e-3*3; //W The base energy of ALU average numbers from Intel 4G and 773Mhz (Wattch)
+			base_energy *=(g_tp.peri_global.Vdd*g_tp.peri_global.Vdd/1.2/1.2);
+			per_access_energy = 1.15*3/1e9/4/1.3/1.3*g_tp.peri_global.Vdd*g_tp.peri_global.Vdd*(g_ip->F_sz_nm/90.0);//g_tp.peri_global.Vdd*g_tp.peri_global.Vdd/1.2/1.2);//0.00649*1e-9; //This is per op energy(nJ)
+		}
+		else if (fu_type == ALU)
+		{
+			area_t = 280*260*2*num_fu*g_tp.scaling_factor.logic_scaling_co_eff;//this is um^2 ALU + MUl
+			leakage = area_t *(g_tp.scaling_factor.core_tx_density)*cmos_Isub_leakage(20*g_tp.min_w_nmos_, 20*g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd/2;//unit W
+			gate_leakage = area_t*(g_tp.scaling_factor.core_tx_density)*cmos_Ig_leakage(20*g_tp.min_w_nmos_, 20*g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd/2;
+			base_energy = coredynp.core_ty==Inorder? 0:89e-3; //W The base energy of ALU average numbers from Intel 4G and 773Mhz (Wattch)
+			base_energy *=(g_tp.peri_global.Vdd*g_tp.peri_global.Vdd/1.2/1.2);
+			per_access_energy = 1.15/1e9/4/1.3/1.3*g_tp.peri_global.Vdd*g_tp.peri_global.Vdd*(g_ip->F_sz_nm/90.0);//(g_tp.peri_global.Vdd*g_tp.peri_global.Vdd/1.2/1.2);//0.00649*1e-9; //This is per cycle energy(nJ)
+		}
+		else if (fu_type == MUL)
+		{
+			area_t = 280*260*2*3*num_fu*g_tp.scaling_factor.logic_scaling_co_eff;//this is um^2 ALU + MUl
+			leakage = area_t *(g_tp.scaling_factor.core_tx_density)*cmos_Isub_leakage(20*g_tp.min_w_nmos_, 20*g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd/2;//unit W
+			gate_leakage = area_t*(g_tp.scaling_factor.core_tx_density)*cmos_Ig_leakage(20*g_tp.min_w_nmos_, 20*g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd/2;
+			base_energy = coredynp.core_ty==Inorder? 0:89e-3*2; //W The base energy of ALU average numbers from Intel 4G and 773Mhz (Wattch)
+			base_energy *=(g_tp.peri_global.Vdd*g_tp.peri_global.Vdd/1.2/1.2);
+			per_access_energy = 1.15*2/1e9/4/1.3/1.3*g_tp.peri_global.Vdd*g_tp.peri_global.Vdd*(g_ip->F_sz_nm/90.0);//(g_tp.peri_global.Vdd*g_tp.peri_global.Vdd/1.2/1.2);//0.00649*1e-9; //This is per cycle energy(nJ), coefficient based on Wattch
+		}
+		else
+		{
+			cout<<"Unknown Functional Unit Type"<<endl;
+			exit(0);
+		}
+	}
+    leakage *= num_fu;
+    gate_leakage *=num_fu;
 }
 
+
 UndiffCore::UndiffCore(ParseXML* XML_interface, int ithCore_, InputParameter* interface_ip_, const CoreDynParam & dyn_p_, bool exist_,  bool embedded_)
 :XML(XML_interface),
  ithCore(ithCore_),
@@ -723,14 +902,17 @@
 // is_default(_is_default)
 {
 	if (!exist) return;
-	double undifferentiated_core=0;
-	double core_tx_density=0;
-	double pmos_to_nmos_sizing_r = pmos_to_nmos_sz_ratio();
-	double undifferentiated_core_coe;
+
 	//XML_interface=_XML_interface;
 	uca_org_t result2;
 	result2 = init_interface(&interface_ip);
 
+        // Parameters should initialize first. Modified by William Song (wjhsong@gatech.edu), Georgia Tech
+	double undifferentiated_core=0;
+	double core_tx_density=0;
+	double pmos_to_nmos_sizing_r = pmos_to_nmos_sz_ratio();
+	double undifferentiated_core_coe;
+	
 	//Compute undifferentiated core area at 90nm.
 	if (embedded==false)
 	{
@@ -781,8 +963,6 @@
 	macro_PR_overhead = g_tp.macro_layout_overhead;
 	area.set_area(area.get_area()*macro_PR_overhead);
 
-
-
 //		double vt=g_tp.peri_global.Vth;
 //		double velocity_index=1.1;
 //		double c_in=gate_C(g_tp.min_w_nmos_, g_tp.min_w_nmos_*pmos_to_nmos_sizing_r , 0.0, false);
@@ -806,9 +986,6 @@
 //
 //		cout<<power.readOp.dynamic << "dynamic" <<endl;
 //		cout<<power.readOp.sc << "sc" << endl;
-
-
-
 }
 
 
@@ -843,6 +1020,72 @@
 
 }
 
+/* This is runtime energy update for the change of parameters.
+   Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+void UndiffCore::update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech)
+{
+  if (!exist) return;
+
+  power.reset();
+
+  *g_ip = interface_ip = McPAT_input;
+
+  uca_org_t init_result = init_interface(&interface_ip); // init_result is dummy
+
+  g_tp = McPAT_tech; //overwrite
+
+  double undifferentiated_core = 0;
+  double core_tx_density=0;
+  double pmos_to_nmos_sizing_r = pmos_to_nmos_sz_ratio(false,false);
+  double undifferentiated_core_coe;
+
+  //Compute undifferentiated core area at 90nm.
+  if (embedded==false)
+  {
+    //Based on the results of polynomial/log curve fitting based on undifferentiated core of Niagara, Niagara2, Merom, Penyrn, Prescott, Opteron die measurements
+    if (core_ty==OOO)
+    {
+      //undifferentiated_core = (0.0764*pipeline_stage*pipeline_stage -2.3685*pipeline_stage + 10.405);//OOO
+      undifferentiated_core = (3.57*log(pipeline_stage)-1.2643)>0?(3.57*log(pipeline_stage)-1.2643):0;
+    }
+    else if (core_ty==Inorder)
+    {
+      //undifferentiated_core = (0.1238*pipeline_stage + 7.2572)*0.9;//inorder
+      undifferentiated_core = (-2.19*log(pipeline_stage)+6.55)>0?(-2.19*log(pipeline_stage)+6.55):0;
+    }
+    else
+    {
+      cout<<"invalid core type"<<endl;
+      exit(0);
+    }
+    undifferentiated_core *= (1+ logtwo(num_hthreads)* 0.0716);
+  }
+  else
+  {
+    //Based on the results in paper "parametrized processor models" Sandia Labs
+    if (XML->sys.opt_clockrate)
+      undifferentiated_core_coe = 0.05;
+    else
+      undifferentiated_core_coe = 0;
+	undifferentiated_core = (0.4109* pipeline_stage - 0.776)*undifferentiated_core_coe;
+    undifferentiated_core *= (1+ logtwo(num_hthreads)* 0.0426);
+  }
+
+  undifferentiated_core 		    *= g_tp.scaling_factor.logic_scaling_co_eff*1e6;//change from mm^2 to um^2
+  core_tx_density                 = g_tp.scaling_factor.core_tx_density;
+  power.readOp.leakage = undifferentiated_core*(core_tx_density)*cmos_Isub_leakage(5*g_tp.min_w_nmos_, 5*g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd;//unit W
+  power.readOp.gate_leakage = undifferentiated_core*(core_tx_density)*cmos_Ig_leakage(5*g_tp.min_w_nmos_, 5*g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd;
+
+  double long_channel_device_reduction = longer_channel_device_reduction(Core_device, coredynp.core_ty);
+  power.readOp.longer_channel_leakage	= power.readOp.leakage*long_channel_device_reduction;
+
+  scktRatio = g_tp.sckt_co_eff;
+  power.readOp.dynamic *= scktRatio;
+  power.writeOp.dynamic *= scktRatio;
+  power.searchOp.dynamic *= scktRatio;
+}
+
+
 inst_decoder::inst_decoder(
 		bool   _is_default,
 		const InputParameter *configure_interface,
@@ -933,6 +1176,11 @@
 
 			pre_dec            = new Predec(predec_blk_drv1, predec_blk_drv2);
 
+                        /* X86 predecoder and instruction decoder are actually separate blocks. The following line were modified from
+                           the McPAT v0.7 code to have predecoder and final decoder blocks separately accessible - inst_decoder is
+                           still accessible as a whole.
+                           Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+
 			double area_decoder = final_dec->area.get_area() * num_decoded_signals * num_decoder_segments*num_decoders;
 			//double w_decoder    = area_decoder / area.get_h();
 			double area_pre_dec = (predec_blk_drv1->area.get_area() +
@@ -940,21 +1188,36 @@
 					predec_blk1->area.get_area() +
 					predec_blk2->area.get_area())*
 					num_decoder_segments*num_decoders;
-			area.set_area(area.get_area()+ area_decoder + area_pre_dec);
+
 			double macro_layout_overhead   = g_tp.macro_layout_overhead;
 			double chip_PR_overhead        = g_tp.chip_layout_overhead;
-			area.set_area(area.get_area()*macro_layout_overhead*chip_PR_overhead);
+
+                        final_dec->area.h = 0, final_dec->area.w = 0; // height and width are not used anymore once the area is calculated.
+                        final_dec->area.set_area(area_decoder*macro_layout_overhead*chip_PR_overhead);
+                        pre_dec->area.set_area(area_pre_dec*macro_layout_overhead*chip_PR_overhead);
+                        area.set_area(area.get_area()+final_dec->area.get_area()+pre_dec->area.get_area());
 
 			inst_decoder_delay_power();
 
 			double sckRation = g_tp.sckt_co_eff;
-			power.readOp.dynamic *= sckRation;
-			power.writeOp.dynamic *= sckRation;
-			power.searchOp.dynamic *= sckRation;
+
+                        pre_dec->power.readOp.dynamic *= sckRation;
+                        pre_dec->power.writeOp.dynamic *= sckRation;
+                        pre_dec->power.searchOp.dynamic *= sckRation;
+
+                        final_dec->power.readOp.dynamic *= sckRation;
+                        final_dec->power.writeOp.dynamic *= sckRation;
+                        final_dec->power.searchOp.dynamic *= sckRation;
+
+			power.readOp.dynamic = pre_dec->power.readOp.dynamic + final_dec->power.readOp.dynamic;
+			power.writeOp.dynamic = pre_dec->power.writeOp.dynamic + final_dec->power.writeOp.dynamic;
+			power.searchOp.dynamic = pre_dec->power.searchOp.dynamic + final_dec->power.searchOp.dynamic;
 
 			double long_channel_device_reduction = longer_channel_device_reduction(device_ty,core_ty);
-			power.readOp.longer_channel_leakage	= power.readOp.leakage*long_channel_device_reduction;
 
+                        pre_dec->power.readOp.longer_channel_leakage = pre_dec->power.readOp.leakage*long_channel_device_reduction;
+                        final_dec->power.readOp.longer_channel_leakage = final_dec->power.readOp.leakage*long_channel_device_reduction;
+                        power.readOp.longer_channel_leakage = pre_dec->power.readOp.longer_channel_leakage + final_dec->power.readOp.longer_channel_leakage;
 }
 
 void inst_decoder::inst_decoder_delay_power()
@@ -968,36 +1231,18 @@
 	outrisetime = pre_dec->compute_delays(inrisetime);
 	dec_outrisetime = final_dec->compute_delays(outrisetime);
 	set_pppm(pppm_t, squencer_passes*num_decoder_segments, num_decoder_segments, squencer_passes*num_decoder_segments, num_decoder_segments);
-    power = power + pre_dec->power*pppm_t;
+    /* X86 predecoder and instruction decoder are actually separate blocks. The following line were modified from
+       the McPAT v0.8 code to have predecoder and final decoder blocks separately accessible - inst_decoder is
+       still accessible as a whole.
+       Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+    //power = power + pre_dec->power*pppm_t;
+    pre_dec->power = pre_dec->power*pppm_t;
     set_pppm(pppm_t, squencer_passes*num_decoder_segments, num_decoder_segments*num_decoded_signals,
-    		num_decoder_segments*num_decoded_signals, squencer_passes*num_decoder_segments);
-    power = power + final_dec->power*pppm_t;
-}
-void inst_decoder::leakage_feedback(double temperature)
-{
-  l_ip.temp = (unsigned int)round(temperature/10.0)*10;
-  uca_org_t init_result = init_interface(&l_ip); // init_result is dummy
-
-  final_dec->leakage_feedback(temperature);
-  pre_dec->leakage_feedback(temperature);
-
-  double pppm_t[4]    = {1,1,1,1};
-  double squencer_passes = x86?2:1;
-
-  set_pppm(pppm_t, squencer_passes*num_decoder_segments, num_decoder_segments, squencer_passes*num_decoder_segments, num_decoder_segments);
-  power = pre_dec->power*pppm_t;
+             num_decoder_segments*num_decoded_signals, squencer_passes*num_decoder_segments);
+    //power = power + final_dec->power*pppm_t;
+    final_dec->power = final_dec->power*pppm_t;
 
-  set_pppm(pppm_t, squencer_passes*num_decoder_segments, num_decoder_segments*num_decoded_signals,num_decoder_segments*num_decoded_signals, squencer_passes*num_decoder_segments);
-  power = power + final_dec->power*pppm_t;
-
-  double sckRation = g_tp.sckt_co_eff;
-
-  power.readOp.dynamic *= sckRation;
-  power.writeOp.dynamic *= sckRation;
-  power.searchOp.dynamic *= sckRation;
-
-  double long_channel_device_reduction = longer_channel_device_reduction(device_ty,core_ty);
-  power.readOp.longer_channel_leakage = power.readOp.leakage*long_channel_device_reduction;
+	power = pre_dec->power + final_dec->power;
 }
 
 inst_decoder::~inst_decoder()
@@ -1012,3 +1257,41 @@
 	  delete pre_dec->drv2;
 	  delete pre_dec;
 }
+
+/* This is runtime energy update for the change of parameters.
+   Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+void inst_decoder::update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech)
+{
+  power.reset();
+  
+  *g_ip = l_ip = McPAT_input;
+
+  uca_org_t init_result = init_interface(&l_ip); // init_result is dummy
+
+  g_tp = McPAT_tech; //overwrite
+
+  final_dec->update_energy(McPAT_input,McPAT_tech);
+  pre_dec->update_energy(McPAT_input,McPAT_tech);
+
+  inst_decoder_delay_power();
+
+  double sckRation = g_tp.sckt_co_eff;
+
+  pre_dec->power.readOp.dynamic *= sckRation;
+  pre_dec->power.writeOp.dynamic *= sckRation;
+  pre_dec->power.searchOp.dynamic *= sckRation;
+
+  final_dec->power.readOp.dynamic *= sckRation;
+  final_dec->power.writeOp.dynamic *= sckRation;
+  final_dec->power.searchOp.dynamic *= sckRation;
+
+  power.readOp.dynamic = pre_dec->power.readOp.dynamic + final_dec->power.readOp.dynamic;
+  power.writeOp.dynamic = pre_dec->power.writeOp.dynamic + final_dec->power.writeOp.dynamic;
+  power.searchOp.dynamic = pre_dec->power.searchOp.dynamic + final_dec->power.searchOp.dynamic;
+
+  double long_channel_device_reduction = longer_channel_device_reduction(device_ty,core_ty);
+
+  pre_dec->power.readOp.longer_channel_leakage = pre_dec->power.readOp.leakage*long_channel_device_reduction;
+  final_dec->power.readOp.longer_channel_leakage = final_dec->power.readOp.leakage*long_channel_device_reduction;
+  power.readOp.longer_channel_leakage = pre_dec->power.readOp.longer_channel_leakage + final_dec->power.readOp.longer_channel_leakage;
+}
diff -Nur McPAT08release/logic.h ../McPAT08release/logic.h
--- McPAT08release/logic.h	2012-10-02 10:45:00.000000000 -0400
+++ ../McPAT08release/logic.h	2015-04-24 21:42:11.000000000 -0400
@@ -1,31 +1,48 @@
 /*****************************************************************************
  *                                McPAT
  *                      SOFTWARE LICENSE AGREEMENT
- *            Copyright 2012 Hewlett-Packard Development Company, L.P.
+ *            Copyright 2009 Hewlett-Packard Development Company, L.P.
  *                          All Rights Reserved
  *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met: redistributions of source code must retain the above copyright
- * notice, this list of conditions and the following disclaimer;
- * redistributions in binary form must reproduce the above copyright
- * notice, this list of conditions and the following disclaimer in the
- * documentation and/or other materials provided with the distribution;
- * neither the name of the copyright holders nor the names of its
- * contributors may be used to endorse or promote products derived from
- * this software without specific prior written permission.
-
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.”
+ * Permission to use, copy, and modify this software and its documentation is
+ * hereby granted only under the following terms and conditions.  Both the
+ * above copyright notice and this permission notice must appear in all copies
+ * of the software, derivative works or modified versions, and any portions
+ * thereof, and both notices must appear in supporting documentation.
+ *
+ * Any User of the software ("User"), by accessing and using it, agrees to the
+ * terms and conditions set forth herein, and hereby grants back to Hewlett-
+ * Packard Development Company, L.P. and its affiliated companies ("HP") a
+ * non-exclusive, unrestricted, royalty-free right and license to copy,
+ * modify, distribute copies, create derivate works and publicly display and
+ * use, any changes, modifications, enhancements or extensions made to the
+ * software by User, including but not limited to those affording
+ * compatibility with other hardware or software, but excluding pre-existing
+ * software applications that may incorporate the software.  User further
+ * agrees to use its best efforts to inform HP of any such changes,
+ * modifications, enhancements or extensions.
+ *
+ * Correspondence should be provided to HP at:
+ *
+ * Director of Intellectual Property Licensing
+ * Office of Strategy and Technology
+ * Hewlett-Packard Company
+ * 1501 Page Mill Road
+ * Palo Alto, California  94304
+ *
+ * The software may be further distributed by User (but not offered for
+ * sale or transferred for compensation) to third parties, under the
+ * condition that such third parties agree to abide by the terms and
+ * conditions of this license.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" WITH ANY AND ALL ERRORS AND DEFECTS
+ * AND USER ACKNOWLEDGES THAT THE SOFTWARE MAY CONTAIN ERRORS AND DEFECTS.
+ * HP DISCLAIMS ALL WARRANTIES WITH REGARD TO THE SOFTWARE, INCLUDING ALL
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL
+ * HP BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES
+ * OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+ * WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER ACTION, ARISING
+ * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THE SOFTWARE.
  *
  ***************************************************************************/
 #ifndef LOGIC_H_
@@ -59,6 +76,9 @@
 	InputParameter l_ip;
 	uca_org_t local_result;
 	const ParseXML *XML_interface;
+    /* num_arbiter is required by update_energy(). Definition is moved from source code (selection_power()).
+        Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+    int num_arbiter;
 	int win_entries;
 	int issue_width;
 	int num_threads;
@@ -66,7 +86,10 @@
 	enum Core_type core_ty;
 
 	void selection_power();
-	void leakage_feedback(double temperature); // TODO	
+
+    /* This is runtime energy update for the change of parameters.
+       Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+    void update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech);
 };
 
 class dep_resource_conflict_check : public Component{
@@ -89,7 +112,9 @@
 		local_result.cleanup();
 	}
 
-	void leakage_feedback(double temperature);
+    /* This is runtime energy update for the change of parameters.
+       Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+    void update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech);
 };
 
 class inst_decoder: public Component{
@@ -121,7 +146,10 @@
 	powerDef       power_t;
 	void inst_decoder_delay_power();
 	~inst_decoder();
-	void leakage_feedback(double temperature);
+
+    /* This is runtime energy update for the change of parameters.
+       Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+    void update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech);
 };
 
 class DFFCell : public Component {
@@ -146,7 +174,11 @@
 
 	double fpfp_node_cap(unsigned int fan_in, unsigned int fan_out);
 	void compute_DFF_cell(void);
-	};
+
+    /* This is runtime energy update for the change of parameters.
+       Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+    void update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech);
+};
 
 class Pipeline : public Component{
 public:
@@ -173,6 +205,9 @@
 		local_result.cleanup();
 	};
 
+    /* This is runtime energy update for the change of parameters.
+       Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+    void update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech);
 };
 
 //class core_pipeline :public pipeline{
@@ -206,8 +241,10 @@
 	FunctionalUnit(ParseXML *XML_interface, int ithCore_, InputParameter* interface_ip_,const CoreDynParam & dyn_p_, enum FU_type fu_type);
     void computeEnergy(bool is_tdp=true);
 	void displayEnergy(uint32_t indent = 0,int plevel = 100, bool is_tdp=true);
-    void leakage_feedback(double temperature);
 
+    /* This is runtime energy update for the change of parameters.
+       Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+    void update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech);
 };
 
 class UndiffCore :public Component{
@@ -228,6 +265,8 @@
 	~UndiffCore(){};
 	bool exist;
 
-
+    /* This is runtime energy update for the change of parameters.
+       Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+    void update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech);
 };
 #endif /* LOGIC_H_ */
diff -Nur McPAT08release/makefile ../McPAT08release/makefile
--- McPAT08release/makefile	2012-10-02 10:45:00.000000000 -0400
+++ ../McPAT08release/makefile	2015-04-24 21:42:10.000000000 -0400
@@ -1,8 +1,8 @@
 TAR = mcpat
 
-.PHONY: dbg opt depend clean clean_dbg clean_opt
+.PHONY: dbg opt depend clean clean_dbg clean_opt lib
 
-all: opt
+all: opt lib
 
 dbg: $(TAR).mk obj_dbg
 	@$(MAKE) TAG=dbg -C . -f $(TAR).mk
@@ -17,6 +17,7 @@
 	mkdir $@
 
 clean: clean_dbg clean_opt
+	rm -rf libmcpat.a
 
 clean_dbg: obj_dbg
 	@$(MAKE) TAG=dbg -C . -f $(TAR).mk clean
@@ -25,4 +26,6 @@
 clean_opt: obj_opt
 	@$(MAKE) TAG=opt -C . -f $(TAR).mk clean
 	rm -rf $<
-
+	
+lib: $(TAR).mk opt
+	@$(MAKE) TAG=opt -C . -f $(TAR).mk libmcpat
diff -Nur McPAT08release/mcpat.mk ../McPAT08release/mcpat.mk
--- McPAT08release/mcpat.mk	2012-10-02 10:45:00.000000000 -0400
+++ ../McPAT08release/mcpat.mk	2015-04-24 21:42:10.000000000 -0400
@@ -1,6 +1,6 @@
 TARGET = mcpat
 SHELL = /bin/sh
-.PHONY: all depend clean
+.PHONY: all depend libmcpat clean
 .SUFFIXES: .cc .o
 
 ifndef NTHREADS
@@ -22,8 +22,8 @@
 
 #CXXFLAGS = -Wall -Wno-unknown-pragmas -Winline $(DBG) $(OPT) 
 CXXFLAGS = -Wno-unknown-pragmas $(DBG) $(OPT) 
-CXX = g++ -m32
-CC  = gcc -m32
+CXX = g++
+CC  = gcc
 
 VPATH = cacti
 
@@ -75,6 +75,10 @@
 obj_$(TAG)/%.o : %.cc
 	$(CXX) $(CXXFLAGS) -c $< -o $@
 
+libmcpat: $(OBJS)
+	ar qcv libmcpat.a $(OBJS)
+	ranlib libmcpat.a
+
 clean:
 	-rm -f *.o $(TARGET)
 
diff -Nur McPAT08release/memoryctrl.cc ../McPAT08release/memoryctrl.cc
--- McPAT08release/memoryctrl.cc	2012-10-02 10:45:00.000000000 -0400
+++ ../McPAT08release/memoryctrl.cc	2015-04-24 21:42:11.000000000 -0400
@@ -1,31 +1,48 @@
 /*****************************************************************************
  *                                McPAT
  *                      SOFTWARE LICENSE AGREEMENT
- *            Copyright 2012 Hewlett-Packard Development Company, L.P.
+ *            Copyright 2009 Hewlett-Packard Development Company, L.P.
  *                          All Rights Reserved
  *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met: redistributions of source code must retain the above copyright
- * notice, this list of conditions and the following disclaimer;
- * redistributions in binary form must reproduce the above copyright
- * notice, this list of conditions and the following disclaimer in the
- * documentation and/or other materials provided with the distribution;
- * neither the name of the copyright holders nor the names of its
- * contributors may be used to endorse or promote products derived from
- * this software without specific prior written permission.
-
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.”
+ * Permission to use, copy, and modify this software and its documentation is
+ * hereby granted only under the following terms and conditions.  Both the
+ * above copyright notice and this permission notice must appear in all copies
+ * of the software, derivative works or modified versions, and any portions
+ * thereof, and both notices must appear in supporting documentation.
+ *
+ * Any User of the software ("User"), by accessing and using it, agrees to the
+ * terms and conditions set forth herein, and hereby grants back to Hewlett-
+ * Packard Development Company, L.P. and its affiliated companies ("HP") a
+ * non-exclusive, unrestricted, royalty-free right and license to copy,
+ * modify, distribute copies, create derivate works and publicly display and
+ * use, any changes, modifications, enhancements or extensions made to the
+ * software by User, including but not limited to those affording
+ * compatibility with other hardware or software, but excluding pre-existing
+ * software applications that may incorporate the software.  User further
+ * agrees to use its best efforts to inform HP of any such changes,
+ * modifications, enhancements or extensions.
+ *
+ * Correspondence should be provided to HP at:
+ *
+ * Director of Intellectual Property Licensing
+ * Office of Strategy and Technology
+ * Hewlett-Packard Company
+ * 1501 Page Mill Road
+ * Palo Alto, California  94304
+ *
+ * The software may be further distributed by User (but not offered for
+ * sale or transferred for compensation) to third parties, under the
+ * condition that such third parties agree to abide by the terms and
+ * conditions of this license.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" WITH ANY AND ALL ERRORS AND DEFECTS
+ * AND USER ACKNOWLEDGES THAT THE SOFTWARE MAY CONTAIN ERRORS AND DEFECTS.
+ * HP DISCLAIMS ALL WARRANTIES WITH REGARD TO THE SOFTWARE, INCLUDING ALL
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL
+ * HP BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES
+ * OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+ * WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER ACTION, ARISING
+ * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THE SOFTWARE.
  *
  ***************************************************************************/
 #include "io.h"
@@ -77,6 +94,9 @@
   local_result = init_interface(&l_ip);
   compute();
 
+  /* Save the input parameter for future energy update. 
+     Modified by William Song, Georgia Tech */
+  l_ip = *g_ip;
 }
 
 
@@ -110,7 +130,7 @@
 		  area.set_area(0.15*mcp.dataBusWidth/72.0*(l_ip.F_sz_um/0.065)* (l_ip.F_sz_um/0.065)*mcp.num_channels*1e6);//um^2
 		  backend_dyn = 0.9e-9/800e6*mcp.clockRate/12800*mcp.peakDataTransferRate*mcp.dataBusWidth/72.0*g_tp.peri_global.Vdd/1.1*g_tp.peri_global.Vdd/1.1*(l_ip.F_sz_nm/65.0);//Average on DDR2/3 protocol controller and DDRC 1600/800A in Cadence ChipEstimate
 		  //Scaling to technology and DIMM feature. The base IP support DDR3-1600(PC3 12800)
-		  backend_gates = 50000*mcp.dataBusWidth/64.0;//5000 is from Cadence ChipEstimator
+		  backend_gates = 50000*mcp.dataBusWidth/64.0;
 
 		  power_t.readOp.dynamic = backend_dyn;
 		  power_t.readOp.leakage = (backend_gates)*cmos_Isub_leakage(NMOS_sizing, PMOS_sizing, 2, nand)*g_tp.peri_global.Vdd;//unit W
@@ -150,16 +170,26 @@
 		//init stats for runtime power (RTP)
 		stats_t.readAc.access   = mcp.reads;
 		stats_t.writeAc.access  = mcp.writes;
-		tdp_stats = stats_t;
+                /* Dumping tdp_stats?
+                   Modified by William Song, Georgia Tech */
+		//tdp_stats = stats_t;
 	}
 	if (is_tdp)
     {
+        /* power should reset. Otherwise,it is cumulatively added.
+           Modified by William Song, Georgia Tech */
+        power.reset();
+        
 		power = power_t;
 		power.readOp.dynamic	= (stats_t.readAc.access + stats_t.writeAc.access)*power_t.readOp.dynamic;
 
     }
     else
     {
+        /* rt_power should reset. Otherwise,it is cumulatively added.
+           Modified by William Song, Georgia Tech */
+        rt_power.reset();
+    
     	rt_power.readOp.dynamic	= (stats_t.readAc.access + stats_t.writeAc.access)*mcp.llcBlockSize*8.0/mcp.dataBusWidth*power_t.readOp.dynamic;
     	rt_power = rt_power + power_t*pppm_lkg;
     	rt_power.readOp.dynamic = rt_power.readOp.dynamic + power.readOp.dynamic*0.1*mcp.clockRate*mcp.num_mcs*mcp.executionTime;
@@ -167,6 +197,57 @@
     }
 }
 
+/* This is runtime power update for the change of parameters.
+   Modified by William Song, Georgia Tech */
+void MCBackend::update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech)
+{
+  power_t.reset();
+
+  //*g_ip = l_ip = McPAT_input;
+
+  uca_org_t init_result = init_interface(&l_ip); // init_result is dummy
+
+  g_tp = McPAT_tech; //overwrite
+  
+  double backend_gates, mc_power, C_MCB, backend_dyn;
+  double pmos_to_nmos_sizing_r = pmos_to_nmos_sz_ratio();
+  double NMOS_sizing, PMOS_sizing;
+
+  if (mc_type == MC)
+  {
+    if (mcp.type == 0)
+    {
+      mc_power = 4.32*0.1;//4.32W@1GhzMHz @65nm Cadence ChipEstimator 10% for backend
+	  C_MCB = mc_power/1e9/72/1.1/1.1*l_ip.F_sz_um/0.065;
+      power_t.readOp.dynamic = C_MCB*g_tp.peri_global.Vdd*g_tp.peri_global.Vdd*(mcp.dataBusWidth/*+mcp.addressBusWidth*/);//per access energy in memory controller	
+      power_t.readOp.leakage = area.get_area()/2 *(g_tp.scaling_factor.core_tx_density)*cmos_Isub_leakage(g_tp.min_w_nmos_, g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd;//unit W
+      power_t.readOp.gate_leakage = area.get_area()/2 *(g_tp.scaling_factor.core_tx_density)*cmos_Ig_leakage(g_tp.min_w_nmos_, g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd;//unit W
+    }
+    else
+    {   
+      NMOS_sizing = g_tp.min_w_nmos_;
+      PMOS_sizing = g_tp.min_w_nmos_*pmos_to_nmos_sizing_r;
+      backend_dyn = 0.9e-9/800e6*mcp.clockRate/12800*mcp.peakDataTransferRate*mcp.dataBusWidth/72.0*g_tp.peri_global.Vdd/1.1*g_tp.peri_global.Vdd/1.1*(l_ip.F_sz_nm/65.0);//Average on DDR2/3 protocol controller and DDRC 1600/800A in Cadence ChipEstimate
+      backend_gates = 50000*mcp.dataBusWidth/64.0;
+
+      power_t.readOp.dynamic = backend_dyn;
+      power_t.readOp.leakage = (backend_gates)*cmos_Isub_leakage(NMOS_sizing, PMOS_sizing, 2, nand)*g_tp.peri_global.Vdd;//unit W
+      power_t.readOp.gate_leakage = (backend_gates)*cmos_Ig_leakage(NMOS_sizing, PMOS_sizing, 2, nand)*g_tp.peri_global.Vdd;//unit W
+    }
+  }
+  else
+  {
+    cout<<"Unknown memory controllers"<<endl;exit(0);
+    power_t.readOp.leakage = area.get_area()/2 *(g_tp.scaling_factor.core_tx_density)*cmos_Isub_leakage(g_tp.min_w_nmos_, g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd;//unit W
+    power_t.readOp.gate_leakage = area.get_area()/2 *(g_tp.scaling_factor.core_tx_density)*cmos_Ig_leakage(g_tp.min_w_nmos_, g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd;//unit W
+    power_t.readOp.dynamic *= 1.2;
+    power_t.readOp.leakage *= 1.2;
+    power_t.readOp.gate_leakage *= 1.2;
+  }
+
+  double long_channel_device_reduction = longer_channel_device_reduction(Uncore_device);
+  power_t.readOp.longer_channel_leakage = power_t.readOp.leakage * long_channel_device_reduction;  
+}
 
 MCPHY::MCPHY(InputParameter* interface_ip_, const MCParam & mcp_, enum MemoryCtrl_type mc_type_)
 :l_ip(*interface_ip_),
@@ -176,6 +257,10 @@
 
   local_result = init_interface(&l_ip);
   compute();
+  
+  /* Save the input parameter for future energy update. 
+     Modified by William Song, Georgia Tech */
+  l_ip = *g_ip;
 }
 
 void MCPHY::compute()
@@ -250,11 +335,17 @@
 		//init stats for runtime power (RTP)
 		stats_t.readAc.access   = mcp.reads;
 		stats_t.writeAc.access  = mcp.writes;
-		tdp_stats = stats_t;
+                /* Dumping tdp_stats?
+                   Modified by William Song, Georgia Tech */
+		//tdp_stats = stats_t;
 	}
 
 	if (is_tdp)
     {
+        /* power should reset. Otherwise,it is cumulatively added.
+           Modified by William Song, Georgia Tech */
+        power.reset();
+    
 		double data_transfer_unit = (mc_type == MC)? 72:16;/*DIMM data width*/
 		power = power_t;
 		power.readOp.dynamic	= power.readOp.dynamic * (mcp.peakDataTransferRate*8*1e6/1e9/*change to Gbs*/)*mcp.dataBusWidth/data_transfer_unit*mcp.num_channels/mcp.clockRate;
@@ -265,6 +356,10 @@
     }
     else
     {
+        /* rt_power should reset. Otherwise,it is cumulatively added.
+           Modified by William Song, Georgia Tech */
+        rt_power.reset();
+    
     	rt_power = power_t;
 //    	rt_power.readOp.dynamic	= (stats_t.readAc.access*power_t.readOp.dynamic+
 //    						stats_t.writeAc.access*power_t.readOp.dynamic);
@@ -274,6 +369,48 @@
     }
 }
 
+/* This is runtime power update for the change of parameters.
+   Modified by William Song, Georgia Tech */
+void MCPHY::update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech)
+{
+  power_t.reset();
+
+  //*g_ip = l_ip = McPAT_input;
+  
+  uca_org_t init_result = init_interface(&l_ip); // init_result is dummy
+
+  g_tp = McPAT_tech; //overwrite
+
+  double pmos_to_nmos_sizing_r = pmos_to_nmos_sz_ratio() ;
+  double power_per_gb_per_s, phy_dyn,phy_gates, NMOS_sizing, PMOS_sizing;
+
+  if (mc_type == MC)
+  {
+    if (mcp.type == 0)
+    {
+      power_per_gb_per_s = mcp.LVDS? 0.01:0.04;
+	  
+      power_t.readOp.dynamic = power_per_gb_per_s*sqrt(l_ip.F_sz_um/0.09)*g_tp.peri_global.Vdd/1.2*g_tp.peri_global.Vdd/1.2;
+      power_t.readOp.leakage = area.get_area()/2 *(g_tp.scaling_factor.core_tx_density)*cmos_Isub_leakage(g_tp.min_w_nmos_, g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd;//unit W
+      power_t.readOp.gate_leakage = area.get_area()/2 *(g_tp.scaling_factor.core_tx_density)*cmos_Ig_leakage(g_tp.min_w_nmos_, g_tp.min_w_nmos_*pmos_to_nmos_sizing_r, 1, inv)*g_tp.peri_global.Vdd;//unit W
+    }
+    else
+    {
+      NMOS_sizing = g_tp.min_w_nmos_;
+      PMOS_sizing = g_tp.min_w_nmos_*pmos_to_nmos_sizing_r;
+      phy_gates = 200000*mcp.dataBusWidth/64.0;
+      power_per_gb_per_s = 0.01;
+
+      power_t.readOp.dynamic = power_per_gb_per_s*(l_ip.F_sz_um/0.09)*g_tp.peri_global.Vdd/1.2*g_tp.peri_global.Vdd/1.2;
+      power_t.readOp.leakage = (mcp.withPHY? phy_gates:0)*cmos_Isub_leakage(NMOS_sizing, PMOS_sizing, 2, nand)*g_tp.peri_global.Vdd;//unit W
+      power_t.readOp.gate_leakage = (mcp.withPHY? phy_gates:0)*cmos_Ig_leakage(NMOS_sizing, PMOS_sizing, 2, nand)*g_tp.peri_global.Vdd;//unit W
+    }
+  }
+
+  double long_channel_device_reduction = longer_channel_device_reduction(Uncore_device);
+  power_t.readOp.longer_channel_leakage = power_t.readOp.leakage * long_channel_device_reduction;  
+}
+
 MCFrontEnd::MCFrontEnd(ParseXML *XML_interface,InputParameter* interface_ip_, const MCParam & mcp_, enum MemoryCtrl_type mc_type_)
 :XML(XML_interface),
  interface_ip(*interface_ip_),
@@ -321,12 +458,20 @@
   interface_ip.num_wr_ports        = interface_ip.num_rd_ports;
   interface_ip.num_se_rd_ports     = 0;
   interface_ip.num_search_ports     = XML->sys.mc.memory_channels_per_mc;
-  frontendBuffer = new ArrayST(&interface_ip, "MC ReorderBuffer", Uncore_device);
+  frontendBuffer = new ArrayST(&interface_ip, "MCReorderBuffer", Uncore_device);
   frontendBuffer->area.set_area(frontendBuffer->area.get_area()+ frontendBuffer->local_result.area*XML->sys.mc.memory_channels_per_mc);
   area.set_area(area.get_area()+ frontendBuffer->local_result.area*XML->sys.mc.memory_channels_per_mc);
+  
+  /* Input parameters are separately saved for subcomponents of MCFrontEnd.
+     Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+  input_p.frontendBuffer = interface_ip;
 
   //selection and arbitration logic
   MC_arb = new selection_logic(is_default, XML->sys.mc.req_window_size_per_channel,1,&interface_ip, Uncore_device);
+  
+  /* Input parameters are separately saved for subcomponents of MCFrontEnd.
+     Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+  input_p.MC_arb = interface_ip;
 
   //read buffers.
   data    					 	   = (int)ceil(mcp.dataBusWidth/8.0);//Support key words first operation //8 means converting bit to Byte
@@ -349,9 +494,13 @@
   interface_ip.num_rd_ports        = XML->sys.mc.memory_channels_per_mc;
   interface_ip.num_wr_ports        = interface_ip.num_rd_ports;
   interface_ip.num_se_rd_ports     = 0;
-  readBuffer = new ArrayST(&interface_ip, "MC ReadBuffer", Uncore_device);
+  readBuffer = new ArrayST(&interface_ip, "MCReadBuffer", Uncore_device);
   readBuffer->area.set_area(readBuffer->area.get_area()+ readBuffer->local_result.area*XML->sys.mc.memory_channels_per_mc);
   area.set_area(area.get_area()+ readBuffer->local_result.area*XML->sys.mc.memory_channels_per_mc);
+  
+  /* Input parameters are separately saved for subcomponents of MCFrontEnd.
+     Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+  input_p.readBuffer = interface_ip;
 
   //write buffer
   data    					 	   = (int)ceil(mcp.dataBusWidth/8.0);//Support key words first operation //8 means converting bit to Byte
@@ -371,9 +520,13 @@
   interface_ip.num_rd_ports        = XML->sys.mc.memory_channels_per_mc;
   interface_ip.num_wr_ports        = interface_ip.num_rd_ports;
   interface_ip.num_se_rd_ports     = 0;
-  writeBuffer = new ArrayST(&interface_ip, "MC writeBuffer", Uncore_device);
+  writeBuffer = new ArrayST(&interface_ip, "MCwriteBuffer", Uncore_device);
   writeBuffer->area.set_area(writeBuffer->area.get_area()+ writeBuffer->local_result.area*XML->sys.mc.memory_channels_per_mc);
   area.set_area(area.get_area()+ writeBuffer->local_result.area*XML->sys.mc.memory_channels_per_mc);
+  
+  /* Input parameters are separately saved for subcomponents of MCFrontEnd.
+     Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+  input_p.writeBuffer = interface_ip;
 }
 
 void MCFrontEnd::computeEnergy(bool is_tdp)
@@ -432,22 +585,34 @@
 			writeBuffer->local_result.power.readOp.dynamic+
     		writeBuffer->stats_t.writeAc.access*writeBuffer->local_result.power.writeOp.dynamic);
 
+        /* MC frontend missed to add arbitration logic power
+           Modified by William Song, Georgia Tech */
+        double arb_pppm_t[4] = {/*dynamic*/1,/*leakage*/1,/*gate_leakage*/1,/*short_circuit*/1};
 	if (is_tdp)
     {
-    	power = power + frontendBuffer->power_t + readBuffer->power_t + writeBuffer->power_t +
-    	        (frontendBuffer->local_result.power +
+        /* power should reset. Otherwise,it is cumulatively added.
+           Modified by William Song, Georgia Tech */
+        power.reset();
+        
+        set_pppm(arb_pppm_t,frontendBuffer->l_ip.num_search_ports+frontendBuffer->l_ip.num_wr_ports,0,0,frontendBuffer->l_ip.num_search_ports+frontendBuffer->l_ip.num_wr_ports);
+    	power = power + frontendBuffer->power_t + MC_arb->power*arb_pppm_t + readBuffer->power_t + writeBuffer->power_t +
+    	        (frontendBuffer->local_result.power + MC_arb->power +
     	        		readBuffer->local_result.power +
     	        		writeBuffer->local_result.power)*pppm_lkg;
-
     }
     else
     {
-    	rt_power = rt_power + frontendBuffer->power_t + readBuffer->power_t + writeBuffer->power_t +
-    	        (frontendBuffer->local_result.power +
+        /* rt_power should reset. Otherwise,it is cumulatively added.
+           Modified by William Song, Georgia Tech */
+        rt_power.reset();
+        
+        set_pppm(arb_pppm_t,XML->sys.mc.memory_reads+XML->sys.mc.memory_writes,0,0,XML->sys.mc.memory_reads+XML->sys.mc.memory_writes);
+    	rt_power = rt_power + frontendBuffer->power_t + MC_arb->power*arb_pppm_t + readBuffer->power_t + writeBuffer->power_t +
+    	        (frontendBuffer->local_result.power + MC_arb->power +
     	        		readBuffer->local_result.power +
     	        		writeBuffer->local_result.power)*pppm_lkg;
     	rt_power.readOp.dynamic = rt_power.readOp.dynamic + power.readOp.dynamic*0.1*mcp.clockRate*mcp.num_mcs*mcp.executionTime;
-    }
+   }
 }
 
 void MCFrontEnd::displayEnergy(uint32_t indent,int plevel,bool is_tdp)
@@ -503,6 +668,25 @@
 
 }
 
+/* This is runtime power update for the change of parameters.
+   Modified by William Song, Georgia Tech */
+void MCFrontEnd::update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech)
+{
+  //*g_ip = interface_ip = McPAT_input;
+  g_tp = McPAT_tech; //overwrite
+
+  frontendBuffer->update_energy(input_p.frontendBuffer,McPAT_tech);
+  input_p.frontendBuffer = *g_ip;
+  
+  readBuffer->update_energy(input_p.readBuffer,McPAT_tech);
+  input_p.readBuffer = *g_ip;
+  
+  writeBuffer->update_energy(input_p.writeBuffer,McPAT_tech);
+  input_p.writeBuffer = *g_ip;
+  
+  MC_arb->update_energy(input_p.MC_arb,McPAT_tech);
+  input_p.MC_arb = *g_ip;
+}
 
 MemoryController::MemoryController(ParseXML *XML_interface,InputParameter* interface_ip_, enum MemoryCtrl_type mc_type_)
 :XML(XML_interface),
@@ -573,7 +757,6 @@
 }
 void MemoryController::computeEnergy(bool is_tdp)
 {
-
 	frontend->computeEnergy(is_tdp);
 	transecEngine->computeEnergy(is_tdp);
 	if (mcp.type==0 || (mcp.type==1&&mcp.withPHY))
@@ -582,6 +765,10 @@
 	}
 	if (is_tdp)
 	{
+        /* power should reset. Otherwise,it is cumulatively added.
+           Modified by William Song, Georgia Tech */
+        power.reset();
+        
 		power = power + frontend->power + transecEngine->power;
 		if (mcp.type==0 || (mcp.type==1&&mcp.withPHY))
 		{
@@ -590,6 +777,10 @@
 	}
 	else
 	{
+        /* rt_power should reset. Otherwise,it is cumulatively added.
+           Modified by William Song, Georgia Tech */
+        rt_power.reset();
+        
 		rt_power = rt_power + frontend->rt_power + transecEngine->rt_power;
 		if (mcp.type==0 || (mcp.type==1&&mcp.withPHY))
 		{
@@ -717,6 +908,23 @@
 	}
 }
 
+/* This is runtime power update for the change of parameters.
+   Modified by William Song, Georgia Tech */
+void MemoryController::update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech)
+{
+  *g_ip = interface_ip = McPAT_input;
+
+  uca_org_t init_result = init_interface(&interface_ip); // init_result is dummy
+
+  g_tp = McPAT_tech; //overwrite
+
+  frontend->update_energy(McPAT_input,McPAT_tech);
+  transecEngine->update_energy(McPAT_input,McPAT_tech);
+  if(PHY)
+    PHY->update_energy(McPAT_input,McPAT_tech);  
+}
+
+
 MCFrontEnd ::~MCFrontEnd(){
 
 	if(MC_arb) 	               {delete MC_arb; MC_arb = 0;}
diff -Nur McPAT08release/memoryctrl.h ../McPAT08release/memoryctrl.h
--- McPAT08release/memoryctrl.h	2012-10-02 10:45:00.000000000 -0400
+++ ../McPAT08release/memoryctrl.h	2015-04-24 21:42:11.000000000 -0400
@@ -1,31 +1,48 @@
 /*****************************************************************************
  *                                McPAT
  *                      SOFTWARE LICENSE AGREEMENT
- *            Copyright 2012 Hewlett-Packard Development Company, L.P.
+ *            Copyright 2009 Hewlett-Packard Development Company, L.P.
  *                          All Rights Reserved
  *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met: redistributions of source code must retain the above copyright
- * notice, this list of conditions and the following disclaimer;
- * redistributions in binary form must reproduce the above copyright
- * notice, this list of conditions and the following disclaimer in the
- * documentation and/or other materials provided with the distribution;
- * neither the name of the copyright holders nor the names of its
- * contributors may be used to endorse or promote products derived from
- * this software without specific prior written permission.
-
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.”
+ * Permission to use, copy, and modify this software and its documentation is
+ * hereby granted only under the following terms and conditions.  Both the
+ * above copyright notice and this permission notice must appear in all copies
+ * of the software, derivative works or modified versions, and any portions
+ * thereof, and both notices must appear in supporting documentation.
+ *
+ * Any User of the software ("User"), by accessing and using it, agrees to the
+ * terms and conditions set forth herein, and hereby grants back to Hewlett-
+ * Packard Development Company, L.P. and its affiliated companies ("HP") a
+ * non-exclusive, unrestricted, royalty-free right and license to copy,
+ * modify, distribute copies, create derivate works and publicly display and
+ * use, any changes, modifications, enhancements or extensions made to the
+ * software by User, including but not limited to those affording
+ * compatibility with other hardware or software, but excluding pre-existing
+ * software applications that may incorporate the software.  User further
+ * agrees to use its best efforts to inform HP of any such changes,
+ * modifications, enhancements or extensions.
+ *
+ * Correspondence should be provided to HP at:
+ *
+ * Director of Intellectual Property Licensing
+ * Office of Strategy and Technology
+ * Hewlett-Packard Company
+ * 1501 Page Mill Road
+ * Palo Alto, California  94304
+ *
+ * The software may be further distributed by User (but not offered for
+ * sale or transferred for compensation) to third parties, under the
+ * condition that such third parties agree to abide by the terms and
+ * conditions of this license.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" WITH ANY AND ALL ERRORS AND DEFECTS
+ * AND USER ACKNOWLEDGES THAT THE SOFTWARE MAY CONTAIN ERRORS AND DEFECTS.
+ * HP DISCLAIMS ALL WARRANTIES WITH REGARD TO THE SOFTWARE, INCLUDING ALL
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL
+ * HP BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES
+ * OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+ * WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER ACTION, ARISING
+ * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THE SOFTWARE.
  *
  ***************************************************************************/
 
@@ -55,6 +72,10 @@
 	void computeEnergy(bool is_tdp=true);
     void displayEnergy(uint32_t indent = 0,int plevel = 100, bool is_tdp=true);
     ~MCBackend(){};
+
+    /* This is runtime energy update for the change of parameters.
+       Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+    void update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech);
 };
 
 class MCPHY : public Component {
@@ -72,6 +93,10 @@
 	void computeEnergy(bool is_tdp=true);
     void displayEnergy(uint32_t indent = 0,int plevel = 100, bool is_tdp=true);
     ~MCPHY(){};
+
+    /* This is runtime energy update for the change of parameters.
+       Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+    void update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech);
 };
 
 class MCFrontEnd : public Component {
@@ -89,6 +114,16 @@
     void computeEnergy(bool is_tdp=true);
     void displayEnergy(uint32_t indent = 0,int plevel = 100, bool is_tdp=true);
     ~MCFrontEnd();
+
+    /* This is runtime energy update for the change of parameters.
+       Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+    void update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech);
+    struct {
+        InputParameter MC_arb;
+        InputParameter frontendBuffer;
+        InputParameter readBuffer;
+        InputParameter writeBuffer;
+    } input_p;
 };
 
 class MemoryController : public Component {
@@ -108,5 +143,9 @@
     void computeEnergy(bool is_tdp=true);
     void displayEnergy(uint32_t indent = 0,int plevel = 100, bool is_tdp=true);
     ~MemoryController();
+
+    /* This is runtime energy update for the change of parameters.
+       Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+    void update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech);
 };
 #endif /* MEMORYCTRL_H_ */
diff -Nur McPAT08release/noc.cc ../McPAT08release/noc.cc
--- McPAT08release/noc.cc	2012-10-02 10:45:00.000000000 -0400
+++ ../McPAT08release/noc.cc	2015-04-24 21:42:11.000000000 -0400
@@ -1,31 +1,48 @@
 /*****************************************************************************
  *                                McPAT
  *                      SOFTWARE LICENSE AGREEMENT
- *            Copyright 2012 Hewlett-Packard Development Company, L.P.
+ *            Copyright 2009 Hewlett-Packard Development Company, L.P.
  *                          All Rights Reserved
  *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met: redistributions of source code must retain the above copyright
- * notice, this list of conditions and the following disclaimer;
- * redistributions in binary form must reproduce the above copyright
- * notice, this list of conditions and the following disclaimer in the
- * documentation and/or other materials provided with the distribution;
- * neither the name of the copyright holders nor the names of its
- * contributors may be used to endorse or promote products derived from
- * this software without specific prior written permission.
-
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.”
+ * Permission to use, copy, and modify this software and its documentation is
+ * hereby granted only under the following terms and conditions.  Both the
+ * above copyright notice and this permission notice must appear in all copies
+ * of the software, derivative works or modified versions, and any portions
+ * thereof, and both notices must appear in supporting documentation.
+ *
+ * Any User of the software ("User"), by accessing and using it, agrees to the
+ * terms and conditions set forth herein, and hereby grants back to Hewlett-
+ * Packard Development Company, L.P. and its affiliated companies ("HP") a
+ * non-exclusive, unrestricted, royalty-free right and license to copy,
+ * modify, distribute copies, create derivate works and publicly display and
+ * use, any changes, modifications, enhancements or extensions made to the
+ * software by User, including but not limited to those affording
+ * compatibility with other hardware or software, but excluding pre-existing
+ * software applications that may incorporate the software.  User further
+ * agrees to use its best efforts to inform HP of any such changes,
+ * modifications, enhancements or extensions.
+ *
+ * Correspondence should be provided to HP at:
+ *
+ * Director of Intellectual Property Licensing
+ * Office of Strategy and Technology
+ * Hewlett-Packard Company
+ * 1501 Page Mill Road
+ * Palo Alto, California  94304
+ *
+ * The software may be further distributed by User (but not offered for
+ * sale or transferred for compensation) to third parties, under the
+ * condition that such third parties agree to abide by the terms and
+ * conditions of this license.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" WITH ANY AND ALL ERRORS AND DEFECTS
+ * AND USER ACKNOWLEDGES THAT THE SOFTWARE MAY CONTAIN ERRORS AND DEFECTS.
+ * HP DISCLAIMS ALL WARRANTIES WITH REGARD TO THE SOFTWARE, INCLUDING ALL
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL
+ * HP BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES
+ * OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+ * WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER ACTION, ARISING
+ * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THE SOFTWARE.
  *
  ***************************************************************************/
 
@@ -140,6 +157,7 @@
 	area.set_area(area.get_area()+ link_bus_tot_per_Router.area.get_area()* nocdynp.total_nodes);
 	link_bus_exist = true;
 }
+
 void NoC::computeEnergy(bool is_tdp)
 {
 	//power_point_product_masks
@@ -147,14 +165,20 @@
 	double M=nocdynp.duty_cycle;
 	if (is_tdp)
 	    {
+            /* power should reset. Otherwise,it is cumulatively added.
+               Modified by William Song, Georgia Tech */
+            power.reset();
+			
 	    	//init stats for TDP
 	    	stats_t.readAc.access  = M;
             tdp_stats = stats_t;
             if (router_exist)
             {
-            	set_pppm(pppm_t, 1*M, 1, 1, 1);//reset traffic pattern
-                router->power = router->power*pppm_t;
-                set_pppm(pppm_t, nocdynp.total_nodes, nocdynp.total_nodes, nocdynp.total_nodes, nocdynp.total_nodes);
+              /* router->power is overwritten everytime this function is called.
+                 Modified by William Song, Georgia Tech */
+            	//set_pppm(pppm_t, 1*M, 1, 1, 1);//reset traffic pattern
+                //router->power = router->power*pppm_t;
+                set_pppm(pppm_t, M*nocdynp.total_nodes, nocdynp.total_nodes, nocdynp.total_nodes, nocdynp.total_nodes);
           	    power     = power + router->power*pppm_t;
             }
             if (link_bus_exist)
@@ -179,12 +203,20 @@
 	    }
 	    else
 	    {
+            /* rt_power should reset. Otherwise,it is cumulatively added.
+               Modified by William Song, Georgia Tech */
+			rt_power.reset();
+			
 	    	//init stats for runtime power (RTP)
 	    	stats_t.readAc.access  = XML->sys.NoC[ithNoC].total_accesses;
             rtp_stats = stats_t;
         	set_pppm(pppm_t, 1, 0 , 0, 0);
         	if (router_exist)
         	{
+                /* rt_power should reset. Otherwise,it is cumulatively added.
+                   Modified by William Song, Georgia Tech */
+                router->rt_power.reset();
+						
             	router->buffer.rt_power.readOp.dynamic = (router->buffer.power.readOp.dynamic + router->buffer.power.writeOp.dynamic)*rtp_stats.readAc.access ;
             	router->crossbar.rt_power.readOp.dynamic = router->crossbar.power.readOp.dynamic*rtp_stats.readAc.access ;
             	router->arbiter.rt_power.readOp.dynamic = router->arbiter.power.readOp.dynamic*rtp_stats.readAc.access ;
@@ -199,7 +231,6 @@
         		link_bus->rt_power = link_bus->power * pppm_t;
         		rt_power = rt_power + link_bus->rt_power;
         	}
-
 	    }
 }
 
@@ -230,7 +261,9 @@
 		{
 			cout << indent_str << "Router: " << endl;
 			cout << indent_str_next << "Area = " << router->area.get_area()*1e-6<< " mm^2" << endl;
-			cout << indent_str_next<< "Peak Dynamic = " << router->power.readOp.dynamic*nocdynp.clockRate << " W" << endl;
+      /* overwriting router->power is fixed above.
+         Modified by William Song, Georgia Tech */
+			cout << indent_str_next<< "Peak Dynamic = " << M*router->power.readOp.dynamic*nocdynp.clockRate << " W" << endl;
 			cout << indent_str_next << "Subthreshold Leakage = "
 			<< (long_channel? router->power.readOp.longer_channel_leakage:router->power.readOp.leakage)  <<" W" << endl;
 			cout << indent_str_next << "Gate Leakage = " << router->power.readOp.gate_leakage << " W" << endl;
@@ -354,3 +387,30 @@
 	if(router) 	               {delete router; router = 0;}
 	if(link_bus) 	           {delete link_bus; link_bus = 0;}
 }
+
+/* This is runtime energy update for the change of parameters.
+   Modified by William Song, Georgia Tech */
+void NoC::update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech)
+{
+  power.reset(), rt_power.reset();
+
+  *g_ip = interface_ip = McPAT_input;
+
+  uca_org_t init_result = init_interface(&interface_ip); // init_result is dummy
+
+  g_tp = McPAT_tech; //overwrite
+
+  if(router_exist)
+  {
+    router->update_energy(McPAT_input,McPAT_tech);
+
+    double long_channel_device_reduction = longer_channel_device_reduction(Uncore_device);
+    router->power.readOp.longer_channel_leakage = router->power.readOp.leakage * long_channel_device_reduction;
+    router->buffer.power.readOp.longer_channel_leakage = router->buffer.power.readOp.leakage * long_channel_device_reduction;
+    router->crossbar.power.readOp.longer_channel_leakage = router->crossbar.power.readOp.leakage * long_channel_device_reduction;
+    router->arbiter.power.readOp.longer_channel_leakage = router->arbiter.power.readOp.leakage * long_channel_device_reduction;
+  }
+
+  if(link_bus_exist)
+    link_bus->update_energy(McPAT_input,McPAT_tech);
+}
diff -Nur McPAT08release/noc.h ../McPAT08release/noc.h
--- McPAT08release/noc.h	2012-10-02 10:45:00.000000000 -0400
+++ ../McPAT08release/noc.h	2015-04-24 21:42:11.000000000 -0400
@@ -1,31 +1,48 @@
 /*****************************************************************************
  *                                McPAT
  *                      SOFTWARE LICENSE AGREEMENT
- *            Copyright 2012 Hewlett-Packard Development Company, L.P.
+ *            Copyright 2009 Hewlett-Packard Development Company, L.P.
  *                          All Rights Reserved
  *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are
- * met: redistributions of source code must retain the above copyright
- * notice, this list of conditions and the following disclaimer;
- * redistributions in binary form must reproduce the above copyright
- * notice, this list of conditions and the following disclaimer in the
- * documentation and/or other materials provided with the distribution;
- * neither the name of the copyright holders nor the names of its
- * contributors may be used to endorse or promote products derived from
- * this software without specific prior written permission.
-
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
- * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
- * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
- * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
- * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
- * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
- * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
- * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.”
+ * Permission to use, copy, and modify this software and its documentation is
+ * hereby granted only under the following terms and conditions.  Both the
+ * above copyright notice and this permission notice must appear in all copies
+ * of the software, derivative works or modified versions, and any portions
+ * thereof, and both notices must appear in supporting documentation.
+ *
+ * Any User of the software ("User"), by accessing and using it, agrees to the
+ * terms and conditions set forth herein, and hereby grants back to Hewlett-
+ * Packard Development Company, L.P. and its affiliated companies ("HP") a
+ * non-exclusive, unrestricted, royalty-free right and license to copy,
+ * modify, distribute copies, create derivate works and publicly display and
+ * use, any changes, modifications, enhancements or extensions made to the
+ * software by User, including but not limited to those affording
+ * compatibility with other hardware or software, but excluding pre-existing
+ * software applications that may incorporate the software.  User further
+ * agrees to use its best efforts to inform HP of any such changes,
+ * modifications, enhancements or extensions.
+ *
+ * Correspondence should be provided to HP at:
+ *
+ * Director of Intellectual Property Licensing
+ * Office of Strategy and Technology
+ * Hewlett-Packard Company
+ * 1501 Page Mill Road
+ * Palo Alto, California  94304
+ *
+ * The software may be further distributed by User (but not offered for
+ * sale or transferred for compensation) to third parties, under the
+ * condition that such third parties agree to abide by the terms and
+ * conditions of this license.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" WITH ANY AND ALL ERRORS AND DEFECTS
+ * AND USER ACKNOWLEDGES THAT THE SOFTWARE MAY CONTAIN ERRORS AND DEFECTS.
+ * HP DISCLAIMS ALL WARRANTIES WITH REGARD TO THE SOFTWARE, INCLUDING ALL
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL
+ * HP BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES
+ * OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+ * WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER ACTION, ARISING
+ * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THE SOFTWARE.
  *
  ***************************************************************************/
 
@@ -70,6 +87,10 @@
 	void computeEnergy_link_bus(bool is_tdp=true);
 	void displayEnergy_link_bus(uint32_t indent = 0,int plevel = 100, bool is_tdp=true);
 	~NoC();
+
+    /* This is runtime energy update for the change of parameters.
+       Modified by William Song (wjhsong@gatech.edu), Georgia Tech */
+	void update_energy(InputParameter McPAT_input, TechnologyParameter McPAT_tech);
 };
 
 #endif /* NOC_H_ */
