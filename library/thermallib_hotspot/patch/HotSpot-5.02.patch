diff -Nur HotSpot-5.02/flp.h ../HotSpot-5.02/flp.h
--- HotSpot-5.02/flp.h	2009-07-24 22:06:54.000000000 -0400
+++ ../HotSpot-5.02/flp.h	2015-04-24 22:19:57.000000000 -0400
@@ -126,6 +126,7 @@
 	double height;
 	double leftx;
 	double bottomy;
+    int layer;
 }unit_t;
 
 /* floorplan data structure	*/
@@ -260,4 +261,5 @@
 double get_core_occupied_area(flp_t *flp, char *l2_label);
 double get_wire_metric(flp_t *flp);
 
+flp_t *flp_alloc_init_mem(int count);
 #endif
diff -Nur HotSpot-5.02/package.h ../HotSpot-5.02/package.h
--- HotSpot-5.02/package.h	2009-07-24 22:06:55.000000000 -0400
+++ ../HotSpot-5.02/package.h	2015-04-24 22:19:57.000000000 -0400
@@ -35,7 +35,11 @@
 /* flow resistance constants */
 #define KC	0.42
 #define KE	1.0
+
+#ifndef PI_H
+#define PI_H
 #define PI	3.1416
+#endif
 
 /* fan constants */
 #define FAN_ALPHA	1 /* 1 for laminar flow, >=2 for turbulent flow */
@@ -112,4 +116,5 @@
 /* parse thermal config table and update r_conv if needed */
 int package_model(thermal_config_t *thermal_config, str_pair *table, int size, double sink_temp);
 
+void calc_natural_convec(convection_t *p, package_config_t *config, thermal_config_t *thermal_config, double sink_temp);
 #endif
diff -Nur HotSpot-5.02/temperature_grid.h ../HotSpot-5.02/temperature_grid.h
--- HotSpot-5.02/temperature_grid.h	2009-07-24 22:06:55.000000000 -0400
+++ ../HotSpot-5.02/temperature_grid.h	2015-04-24 22:19:57.000000000 -0400
@@ -208,4 +208,9 @@
 /* debug print	*/
 void debug_print_grid(grid_model_t *model);
 
+/* Added for the EI access 
+   Modified by William Song */
+blist_t ***new_b2gmap(int rows, int cols);
+void populate_default_layers(grid_model_t *model, flp_t *flp_default);
+void append_package_layers(grid_model_t *model);
 #endif
diff -Nur HotSpot-5.02/util.h ../HotSpot-5.02/util.h
--- HotSpot-5.02/util.h	2009-07-24 22:06:55.000000000 -0400
+++ ../HotSpot-5.02/util.h	2015-04-24 22:19:57.000000000 -0400
@@ -3,8 +3,11 @@
 
 #include <stdio.h>
 
+#ifndef MINMAX_H
+#define MINMAX_H
 #define MAX(x,y)		(((x)>(y))?(x):(y))
 #define MIN(x,y)		(((x)<(y))?(x):(y))
+#endif
 #define MAX3(a,b,c)		MAX(MAX(a,b),c)
 #define MIN3(a,b,c)		MIN(MIN(a,b),c)
 #define MID3(a,b,c)		((MIN(a,b)<(c))?(MIN(MAX(a,b),c)):(MAX(MIN(a,b),c)))
